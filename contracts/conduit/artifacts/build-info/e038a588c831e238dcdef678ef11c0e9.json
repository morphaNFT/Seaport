{
	"id": "e038a588c831e238dcdef678ef11c0e9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"conduit/ConduitController.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n\tConduitControllerInterface\n} from \"../interfaces/ConduitControllerInterface.sol\";\n\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\n\nimport { Conduit } from \"./Conduit.sol\";\n\n/**\n * @title ConduitController\n * @author 0age\n * @notice ConduitController enables deploying and managing new conduits, or\n *         contracts that allow registered callers (or open \"channels\") to\n *         transfer approved ERC20/721/1155 tokens on their behalf.\n */\ncontract ConduitController is ConduitControllerInterface {\n    // Register keys, owners, new potential owners, and channels by conduit.\n    mapping(address => ConduitProperties) internal _conduits;\n\n    // Set conduit creation code and runtime code hashes as immutable arguments.\n    bytes32 internal immutable _CONDUIT_CREATION_CODE_HASH;\n    bytes32 internal immutable _CONDUIT_RUNTIME_CODE_HASH;\n\n    /**\n     * @dev Initialize contract by deploying a conduit and setting the creation\n     *      code and runtime code hashes as immutable arguments.\n     */\n    constructor() {\n        // Derive the conduit creation code hash and set it as an immutable.\n        _CONDUIT_CREATION_CODE_HASH = keccak256(type(Conduit).creationCode);\n\n        // Deploy a conduit with the zero hash as the salt.\n        Conduit zeroConduit = new Conduit{ salt: bytes32(0) }();\n\n        // Retrieve the conduit runtime code hash and set it as an immutable.\n        _CONDUIT_RUNTIME_CODE_HASH = address(zeroConduit).codehash;\n    }\n\n    /**\n     * @notice Deploy a new conduit using a supplied conduit key and assigning\n     *         an initial owner for the deployed conduit. Note that the first\n     *         twenty bytes of the supplied conduit key must match the caller\n     *         and that a new conduit cannot be created if one has already been\n     *         deployed using the same conduit key.\n     *\n     * @param conduitKey   The conduit key used to deploy the conduit. Note that\n     *                     the first twenty bytes of the conduit key must match\n     *                     the caller of this contract.\n     * @param initialOwner The initial owner to set for the new conduit.\n     *\n     * @return conduit The address of the newly deployed conduit.\n     */\n    function createConduit(bytes32 conduitKey, address initialOwner)\n        external\n        override\n        returns (address conduit)\n    {\n        // Ensure that an initial owner has been supplied.\n        if (initialOwner == address(0)) {\n            revert InvalidInitialOwner();\n        }\n\n        // If the first 20 bytes of the conduit key do not match the caller...\n        if (address(uint160(bytes20(conduitKey))) != msg.sender) {\n            // Revert with an error indicating that the creator is invalid.\n            revert InvalidCreator();\n        }\n\n        // Derive address from deployer, conduit key and creation code hash.\n        conduit = address(\n            uint160(\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            bytes1(0xff),\n                            address(this),\n                            conduitKey,\n                            _CONDUIT_CREATION_CODE_HASH\n                        )\n                    )\n                )\n            )\n        );\n\n        // If derived conduit exists, as evidenced by comparing runtime code...\n        if (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH) {\n            // Revert with an error indicating that the conduit already exists.\n            revert ConduitAlreadyExists(conduit);\n        }\n\n        // Deploy the conduit via CREATE2 using the conduit key as the salt.\n        new Conduit{ salt: conduitKey }();\n\n        // Initialize storage variable referencing conduit properties.\n        ConduitProperties storage conduitProperties = _conduits[conduit];\n\n        // Set the supplied initial owner as the owner of the conduit.\n        conduitProperties.owner = initialOwner;\n\n        // Set conduit key used to deploy the conduit to enable reverse lookup.\n        conduitProperties.key = conduitKey;\n\n        // Emit an event indicating that the conduit has been deployed.\n        emit NewConduit(conduit, conduitKey);\n\n        // Emit an event indicating that conduit ownership has been assigned.\n        emit OwnershipTransferred(conduit, address(0), initialOwner);\n    }\n\n    /**\n     * @notice Open or close a channel on a given conduit, thereby allowing the\n     *         specified account to execute transfers against that conduit.\n     *         Extreme care must be taken when updating channels, as malicious\n     *         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n     *         tokens where the token holder has granted the conduit approval.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to open or close the channel.\n     * @param channel The channel to open or close on the conduit.\n     * @param isOpen  A boolean indicating whether to open or close the channel.\n     */\n    function updateChannel(\n        address conduit,\n        address channel,\n        bool isOpen\n    ) external override {\n        // Ensure the caller is the current owner of the conduit in question.\n        _assertCallerIsConduitOwner(conduit);\n\n        // Call the conduit, updating the channel.\n        ConduitInterface(conduit).updateChannel(channel, isOpen);\n\n        // Retrieve storage region where channels for the conduit are tracked.\n        ConduitProperties storage conduitProperties = _conduits[conduit];\n\n        // Retrieve the index, if one currently exists, for the updated channel.\n        uint256 channelIndexPlusOne = (\n            conduitProperties.channelIndexesPlusOne[channel]\n        );\n\n        // Determine whether the updated channel is already tracked as open.\n        bool channelPreviouslyOpen = channelIndexPlusOne != 0;\n\n        // If the channel has been set to open and was previously closed...\n        if (isOpen && !channelPreviouslyOpen) {\n            // Add the channel to the channels array for the conduit.\n            conduitProperties.channels.push(channel);\n\n            // Add new open channel length to associated mapping as index + 1.\n            conduitProperties.channelIndexesPlusOne[channel] = (\n                conduitProperties.channels.length\n            );\n        } else if (!isOpen && channelPreviouslyOpen) {\n            // Set a previously open channel as closed via \"swap & pop\" method.\n            // Decrement located index to get the index of the closed channel.\n            uint256 removedChannelIndex;\n\n            // Skip underflow check as channelPreviouslyOpen being true ensures\n            // that channelIndexPlusOne is nonzero.\n            unchecked {\n                removedChannelIndex = channelIndexPlusOne - 1;\n            }\n\n            // Use length of channels array to determine index of last channel.\n            uint256 finalChannelIndex = conduitProperties.channels.length - 1;\n\n            // If closed channel is not last channel in the channels array...\n            if (finalChannelIndex != removedChannelIndex) {\n                // Retrieve the final channel and place the value on the stack.\n                address finalChannel = (\n                    conduitProperties.channels[finalChannelIndex]\n                );\n\n                // Overwrite the removed channel using the final channel value.\n                conduitProperties.channels[removedChannelIndex] = finalChannel;\n\n                // Update final index in associated mapping to removed index.\n                conduitProperties.channelIndexesPlusOne[finalChannel] = (\n                    channelIndexPlusOne\n                );\n            }\n\n            // Remove the last channel from the channels array for the conduit.\n            conduitProperties.channels.pop();\n\n            // Remove the closed channel from associated mapping of indexes.\n            delete conduitProperties.channelIndexesPlusOne[channel];\n        }\n    }\n\n    /**\n     * @notice Initiate conduit ownership transfer by assigning a new potential\n     *         owner for the given conduit. Once set, the new potential owner\n     *         may call `acceptOwnership` to claim ownership of the conduit.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to initiate ownership transfer.\n     * @param newPotentialOwner The new potential owner of the conduit.\n     */\n    function transferOwnership(address conduit, address newPotentialOwner)\n        external\n        override\n    {\n        // Ensure the caller is the current owner of the conduit in question.\n        _assertCallerIsConduitOwner(conduit);\n\n        // Ensure the new potential owner is not an invalid address.\n        if (newPotentialOwner == address(0)) {\n            revert NewPotentialOwnerIsZeroAddress(conduit);\n        }\n\n        // Ensure the new potential owner is not already set.\n        if (newPotentialOwner == _conduits[conduit].potentialOwner) {\n            revert NewPotentialOwnerAlreadySet(conduit, newPotentialOwner);\n        }\n\n        // Emit an event indicating that the potential owner has been updated.\n        emit PotentialOwnerUpdated(newPotentialOwner);\n\n        // Set the new potential owner as the potential owner of the conduit.\n        _conduits[conduit].potentialOwner = newPotentialOwner;\n    }\n\n    /**\n     * @notice Clear the currently set potential owner, if any, from a conduit.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to cancel ownership transfer.\n     */\n    function cancelOwnershipTransfer(address conduit) external override {\n        // Ensure the caller is the current owner of the conduit in question.\n        _assertCallerIsConduitOwner(conduit);\n\n        // Ensure that ownership transfer is currently possible.\n        if (_conduits[conduit].potentialOwner == address(0)) {\n            revert NoPotentialOwnerCurrentlySet(conduit);\n        }\n\n        // Emit an event indicating that the potential owner has been cleared.\n        emit PotentialOwnerUpdated(address(0));\n\n        // Clear the current new potential owner from the conduit.\n        _conduits[conduit].potentialOwner = address(0);\n    }\n\n    /**\n     * @notice Accept ownership of a supplied conduit. Only accounts that the\n     *         current owner has set as the new potential owner may call this\n     *         function.\n     *\n     * @param conduit The conduit for which to accept ownership.\n     */\n    function acceptOwnership(address conduit) external override {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // If caller does not match current potential owner of the conduit...\n        if (msg.sender != _conduits[conduit].potentialOwner) {\n            // Revert, indicating that caller is not current potential owner.\n            revert CallerIsNotNewPotentialOwner(conduit);\n        }\n\n        // Emit an event indicating that the potential owner has been cleared.\n        emit PotentialOwnerUpdated(address(0));\n\n        // Clear the current new potential owner from the conduit.\n        _conduits[conduit].potentialOwner = address(0);\n\n        // Emit an event indicating conduit ownership has been transferred.\n        emit OwnershipTransferred(\n            conduit,\n            _conduits[conduit].owner,\n            msg.sender\n        );\n\n        // Set the caller as the owner of the conduit.\n        _conduits[conduit].owner = msg.sender;\n    }\n\n    /**\n     * @notice Retrieve the current owner of a deployed conduit.\n     *\n     * @param conduit The conduit for which to retrieve the associated owner.\n     *\n     * @return owner The owner of the supplied conduit.\n     */\n    function ownerOf(address conduit)\n        external\n        view\n        override\n        returns (address owner)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve the current owner of the conduit in question.\n        owner = _conduits[conduit].owner;\n    }\n\n    /**\n     * @notice Retrieve the conduit key for a deployed conduit via reverse\n     *         lookup.\n     *\n     * @param conduit The conduit for which to retrieve the associated conduit\n     *                key.\n     *\n     * @return conduitKey The conduit key used to deploy the supplied conduit.\n     */\n    function getKey(address conduit)\n        external\n        view\n        override\n        returns (bytes32 conduitKey)\n    {\n        // Attempt to retrieve a conduit key for the conduit in question.\n        conduitKey = _conduits[conduit].key;\n\n        // Revert if no conduit key was located.\n        if (conduitKey == bytes32(0)) {\n            revert NoConduit();\n        }\n    }\n\n    /**\n     * @notice Derive the conduit associated with a given conduit key and\n     *         determine whether that conduit exists (i.e. whether it has been\n     *         deployed).\n     *\n     * @param conduitKey The conduit key used to derive the conduit.\n     *\n     * @return conduit The derived address of the conduit.\n     * @return exists  A boolean indicating whether the derived conduit has been\n     *                 deployed or not.\n     */\n    function getConduit(bytes32 conduitKey)\n        external\n        view\n        override\n        returns (address conduit, bool exists)\n    {\n        // Derive address from deployer, conduit key and creation code hash.\n        conduit = address(\n            uint160(\n                uint256(\n                    keccak256(\n                        abi.encodePacked(\n                            bytes1(0xff),\n                            address(this),\n                            conduitKey,\n                            _CONDUIT_CREATION_CODE_HASH\n                        )\n                    )\n                )\n            )\n        );\n\n        // Determine whether conduit exists by retrieving its runtime code.\n        exists = (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH);\n    }\n\n    /**\n     * @notice Retrieve the potential owner, if any, for a given conduit. The\n     *         current owner may set a new potential owner via\n     *         `transferOwnership` and that owner may then accept ownership of\n     *         the conduit in question via `acceptOwnership`.\n     *\n     * @param conduit The conduit for which to retrieve the potential owner.\n     *\n     * @return potentialOwner The potential owner, if any, for the conduit.\n     */\n    function getPotentialOwner(address conduit)\n        external\n        view\n        override\n        returns (address potentialOwner)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve the current potential owner of the conduit in question.\n        potentialOwner = _conduits[conduit].potentialOwner;\n    }\n\n    /**\n     * @notice Retrieve the status (either open or closed) of a given channel on\n     *         a conduit.\n     *\n     * @param conduit The conduit for which to retrieve the channel status.\n     * @param channel The channel for which to retrieve the status.\n     *\n     * @return isOpen The status of the channel on the given conduit.\n     */\n    function getChannelStatus(address conduit, address channel)\n        external\n        view\n        override\n        returns (bool isOpen)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve the current channel status for the conduit in question.\n        isOpen = _conduits[conduit].channelIndexesPlusOne[channel] != 0;\n    }\n\n    /**\n     * @notice Retrieve the total number of open channels for a given conduit.\n     *\n     * @param conduit The conduit for which to retrieve the total channel count.\n     *\n     * @return totalChannels The total number of open channels for the conduit.\n     */\n    function getTotalChannels(address conduit)\n        external\n        view\n        override\n        returns (uint256 totalChannels)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve the total open channel count for the conduit in question.\n        totalChannels = _conduits[conduit].channels.length;\n    }\n\n    /**\n     * @notice Retrieve an open channel at a specific index for a given conduit.\n     *         Note that the index of a channel can change as a result of other\n     *         channels being closed on the conduit.\n     *\n     * @param conduit      The conduit for which to retrieve the open channel.\n     * @param channelIndex The index of the channel in question.\n     *\n     * @return channel The open channel, if any, at the specified channel index.\n     */\n    function getChannel(address conduit, uint256 channelIndex)\n        external\n        view\n        override\n        returns (address channel)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve the total open channel count for the conduit in question.\n        uint256 totalChannels = _conduits[conduit].channels.length;\n\n        // Ensure that the supplied index is within range.\n        if (channelIndex >= totalChannels) {\n            revert ChannelOutOfRange(conduit);\n        }\n\n        // Retrieve the channel at the given index.\n        channel = _conduits[conduit].channels[channelIndex];\n    }\n\n    /**\n     * @notice Retrieve all open channels for a given conduit. Note that calling\n     *         this function for a conduit with many channels will revert with\n     *         an out-of-gas error.\n     *\n     * @param conduit The conduit for which to retrieve open channels.\n     *\n     * @return channels An array of open channels on the given conduit.\n     */\n    function getChannels(address conduit)\n        external\n        view\n        override\n        returns (address[] memory channels)\n    {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // Retrieve all of the open channels on the conduit in question.\n        channels = _conduits[conduit].channels;\n    }\n\n    /**\n     * @dev Retrieve the conduit creation code and runtime code hashes.\n     */\n    function getConduitCodeHashes()\n        external\n        view\n        override\n        returns (bytes32 creationCodeHash, bytes32 runtimeCodeHash)\n    {\n        // Retrieve the conduit creation code hash from runtime.\n        creationCodeHash = _CONDUIT_CREATION_CODE_HASH;\n\n        // Retrieve the conduit runtime code hash from runtime.\n        runtimeCodeHash = _CONDUIT_RUNTIME_CODE_HASH;\n    }\n\n    /**\n     * @dev Private view function to revert if the caller is not the owner of a\n     *      given conduit.\n     *\n     * @param conduit The conduit for which to assert ownership.\n     */\n    function _assertCallerIsConduitOwner(address conduit) private view {\n        // Ensure that the conduit in question exists.\n        _assertConduitExists(conduit);\n\n        // If the caller does not match the current owner of the conduit...\n        if (msg.sender != _conduits[conduit].owner) {\n            // Revert, indicating that the caller is not the owner.\n            revert CallerIsNotOwner(conduit);\n        }\n    }\n\n    /**\n     * @dev Private view function to revert if a given conduit does not exist.\n     *\n     * @param conduit The conduit for which to assert existence.\n     */\n    function _assertConduitExists(address conduit) private view {\n        // Attempt to retrieve a conduit key for the conduit in question.\n        if (_conduits[conduit].key == bytes32(0)) {\n            // Revert if no conduit key was located.\n            revert NoConduit();\n        }\n    }\n}\n"
			},
			"conduit/Conduit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\n\nimport { ConduitItemType } from \"./lib/ConduitEnums.sol\";\n\nimport { TokenTransferrer } from \"../lib/TokenTransferrer.sol\";\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"./lib/ConduitStructs.sol\";\n\nimport \"./lib/ConduitConstants.sol\";\n\n/**\n * @title Conduit\n * @author 0age\n * @notice This contract serves as an originator for \"proxied\" transfers. Each\n *         conduit is deployed and controlled by a \"conduit controller\" that can\n *         add and remove \"channels\" or contracts that can instruct the conduit\n *         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n *         conduit has an owner that can arbitrarily add or remove channels, and\n *         a malicious or negligent owner can add a channel that allows for any\n *         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n *         cautious with what conduits you give token approvals to!*\n */\ncontract Conduit is ConduitInterface, TokenTransferrer {\n    // Set deployer as an immutable controller that can update channel statuses.\n    address private immutable _controller;\n\n    // Track the status of each channel.\n    mapping(address => bool) private _channels;\n\n    /**\n     * @notice Ensure that the caller is currently registered as an open channel\n     *         on the conduit.\n     */\n    modifier onlyOpenChannel() {\n        // Utilize assembly to access channel storage mapping directly.\n        assembly {\n            // Write the caller to scratch space.\n            mstore(ChannelKey_channel_ptr, caller())\n\n            // Write the storage slot for _channels to scratch space.\n            mstore(ChannelKey_slot_ptr, _channels.slot)\n\n            // Derive the position in storage of _channels[msg.sender]\n            // and check if the stored value is zero.\n            if iszero(\n                sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length))\n            ) {\n                // The caller is not an open channel; revert with\n                // ChannelClosed(caller). First, set error signature in memory.\n                mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature)\n\n                // Next, set the caller as the argument.\n                mstore(ChannelClosed_channel_ptr, caller())\n\n                // Finally, revert, returning full custom error with argument.\n                revert(ChannelClosed_error_ptr, ChannelClosed_error_length)\n            }\n        }\n\n        // Continue with function execution.\n        _;\n    }\n\n    /**\n     * @notice In the constructor, set the deployer as the controller.\n     */\n    constructor() {\n        // Set the deployer as the controller.\n        _controller = msg.sender;\n    }\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        override\n        onlyOpenChannel\n        returns (bytes4 magicValue)\n    {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = transfers.length;\n\n        // Iterate over each transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(transfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.execute.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param batchTransfers The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeBatch1155.selector;\n    }\n\n    /**\n     * @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n     *         transfers as well as batch 1155 item transfers. Only a caller\n     *         with an open channel can call this function. Note that channels\n     *         are expected to implement reentrancy protection if desired, and\n     *         that cross-channel reentrancy may be possible if the conduit has\n     *         multiple open channels at once. Also note that channels are\n     *         expected to implement checks against transferring any zero-amount\n     *         items if that constraint is desired.\n     *\n     * @param standardTransfers The ERC20/721/1155 item transfers to perform.\n     * @param batchTransfers    The 1155 batch item transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the item transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) external override onlyOpenChannel returns (bytes4 magicValue) {\n        // Retrieve the total number of transfers and place on the stack.\n        uint256 totalStandardTransfers = standardTransfers.length;\n\n        // Iterate over each standard transfer.\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\n            // Retrieve the transfer in question and perform the transfer.\n            _transfer(standardTransfers[i]);\n\n            // Skip overflow check as for loop is indexed starting at zero.\n            unchecked {\n                ++i;\n            }\n        }\n\n        // Perform 1155 batch transfers. Note that memory should be considered\n        // entirely corrupted from this point forward aside from the free memory\n        // pointer having the default value.\n        _performERC1155BatchTransfers(batchTransfers);\n\n        // Return a magic value indicating that the transfers were performed.\n        magicValue = this.executeWithBatch1155.selector;\n    }\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external override {\n        // Ensure that the caller is the controller of this contract.\n        if (msg.sender != _controller) {\n            revert InvalidController();\n        }\n\n        // Ensure that the channel does not already have the indicated status.\n        if (_channels[channel] == isOpen) {\n            revert ChannelStatusAlreadySet(channel, isOpen);\n        }\n\n        // Update the status of the channel.\n        _channels[channel] = isOpen;\n\n        // Emit a corresponding event.\n        emit ChannelUpdated(channel, isOpen);\n    }\n\n    /**\n     * @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n     *      channels are expected to implement checks against transferring any\n     *      zero-amount items if that constraint is desired.\n     *\n     * @param item The ERC20/721/1155 item to transfer.\n     */\n    function _transfer(ConduitTransfer calldata item) internal {\n        // Determine the transfer method based on the respective item type.\n        if (item.itemType == ConduitItemType.ERC20) {\n            // Transfer ERC20 token. Note that item.identifier is ignored and\n            // therefore ERC20 transfer items are potentially malleable — this\n            // check should be performed by the calling channel if a constraint\n            // on item malleability is desired.\n            _performERC20Transfer(item.token, item.from, item.to, item.amount);\n        } else if (item.itemType == ConduitItemType.ERC721) {\n            // Ensure that exactly one 721 item is being transferred.\n            if (item.amount != 1) {\n                revert InvalidERC721TransferAmount();\n            }\n\n            // Transfer ERC721 token.\n            _performERC721Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier\n            );\n        } else if (item.itemType == ConduitItemType.ERC1155) {\n            // Transfer ERC1155 token.\n            _performERC1155Transfer(\n                item.token,\n                item.from,\n                item.to,\n                item.identifier,\n                item.amount\n            );\n        } else {\n            // Throw with an error.\n            revert InvalidItemType();\n        }\n    }\n}\n"
			},
			"interfaces/ConduitInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// prettier-ignore\nimport {\n    ConduitTransfer,\n    ConduitBatch1155Transfer\n} from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title ConduitInterface\n * @author 0age\n * @notice ConduitInterface contains all external function interfaces, events,\n *         and errors for conduit contracts.\n */\ninterface ConduitInterface {\n    /**\n     * @dev Revert with an error when attempting to execute transfers using a\n     *      caller that does not have an open channel.\n     */\n    error ChannelClosed(address channel);\n\n    /**\n     * @dev Revert with an error when attempting to update a channel to the\n     *      current status of that channel.\n     */\n    error ChannelStatusAlreadySet(address channel, bool isOpen);\n\n    /**\n     * @dev Revert with an error when attempting to execute a transfer for an\n     *      item that does not have an ERC20/721/1155 item type.\n     */\n    error InvalidItemType();\n\n    /**\n     * @dev Revert with an error when attempting to update the status of a\n     *      channel from a caller that is not the conduit controller.\n     */\n    error InvalidController();\n\n    /**\n     * @dev Emit an event whenever a channel is opened or closed.\n     *\n     * @param channel The channel that has been updated.\n     * @param open    A boolean indicating whether the conduit is open or not.\n     */\n    event ChannelUpdated(address indexed channel, bool open);\n\n    /**\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n     *         with an open channel can call this function.\n     *\n     * @param transfers The ERC20/721/1155 transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function execute(ConduitTransfer[] calldata transfers)\n        external\n        returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n     *         open channel can call this function.\n     *\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeBatch1155(\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Execute a sequence of transfers, both single and batch 1155. Only\n     *         a caller with an open channel can call this function.\n     *\n     * @param standardTransfers  The ERC20/721/1155 transfers to perform.\n     * @param batch1155Transfers The 1155 batch transfers to perform.\n     *\n     * @return magicValue A magic value indicating that the transfers were\n     *                    performed successfully.\n     */\n    function executeWithBatch1155(\n        ConduitTransfer[] calldata standardTransfers,\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\n    ) external returns (bytes4 magicValue);\n\n    /**\n     * @notice Open or close a given channel. Only callable by the controller.\n     *\n     * @param channel The channel to open or close.\n     * @param isOpen  The status of the channel (either open or closed).\n     */\n    function updateChannel(address channel, bool isOpen) external;\n}\n"
			},
			"interfaces/ConduitControllerInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/**\n * @title ConduitControllerInterface\n * @author 0age\n * @notice ConduitControllerInterface contains all external function interfaces,\n *         structs, events, and errors for the conduit controller.\n */\ninterface ConduitControllerInterface {\n    /**\n     * @dev Track the conduit key, current owner, new potential owner, and open\n     *      channels for each deployed conduit.\n     */\n    struct ConduitProperties {\n        bytes32 key;\n        address owner;\n        address potentialOwner;\n        address[] channels;\n        mapping(address => uint256) channelIndexesPlusOne;\n    }\n\n    /**\n     * @dev Emit an event whenever a new conduit is created.\n     *\n     * @param conduit    The newly created conduit.\n     * @param conduitKey The conduit key used to create the new conduit.\n     */\n    event NewConduit(address conduit, bytes32 conduitKey);\n\n    /**\n     * @dev Emit an event whenever conduit ownership is transferred.\n     *\n     * @param conduit       The conduit for which ownership has been\n     *                      transferred.\n     * @param previousOwner The previous owner of the conduit.\n     * @param newOwner      The new owner of the conduit.\n     */\n    event OwnershipTransferred(\n        address indexed conduit,\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Emit an event whenever a conduit owner registers a new potential\n     *      owner for that conduit.\n     *\n     * @param newPotentialOwner The new potential owner of the conduit.\n     */\n    event PotentialOwnerUpdated(address indexed newPotentialOwner);\n\n    /**\n     * @dev Revert with an error when attempting to create a new conduit using a\n     *      conduit key where the first twenty bytes of the key do not match the\n     *      address of the caller.\n     */\n    error InvalidCreator();\n\n    /**\n     * @dev Revert with an error when attempting to create a new conduit when no\n     *      initial owner address is supplied.\n     */\n    error InvalidInitialOwner();\n\n    /**\n     * @dev Revert with an error when attempting to set a new potential owner\n     *      that is already set.\n     */\n    error NewPotentialOwnerAlreadySet(\n        address conduit,\n        address newPotentialOwner\n    );\n\n    /**\n     * @dev Revert with an error when attempting to cancel ownership transfer\n     *      when no new potential owner is currently set.\n     */\n    error NoPotentialOwnerCurrentlySet(address conduit);\n\n    /**\n     * @dev Revert with an error when attempting to interact with a conduit that\n     *      does not yet exist.\n     */\n    error NoConduit();\n\n    /**\n     * @dev Revert with an error when attempting to create a conduit that\n     *      already exists.\n     */\n    error ConduitAlreadyExists(address conduit);\n\n    /**\n     * @dev Revert with an error when attempting to update channels or transfer\n     *      ownership of a conduit when the caller is not the owner of the\n     *      conduit in question.\n     */\n    error CallerIsNotOwner(address conduit);\n\n    /**\n     * @dev Revert with an error when attempting to register a new potential\n     *      owner and supplying the null address.\n     */\n    error NewPotentialOwnerIsZeroAddress(address conduit);\n\n    /**\n     * @dev Revert with an error when attempting to claim ownership of a conduit\n     *      with a caller that is not the current potential owner for the\n     *      conduit in question.\n     */\n    error CallerIsNotNewPotentialOwner(address conduit);\n\n    /**\n     * @dev Revert with an error when attempting to retrieve a channel using an\n     *      index that is out of range.\n     */\n    error ChannelOutOfRange(address conduit);\n\n    /**\n     * @notice Deploy a new conduit using a supplied conduit key and assigning\n     *         an initial owner for the deployed conduit. Note that the first\n     *         twenty bytes of the supplied conduit key must match the caller\n     *         and that a new conduit cannot be created if one has already been\n     *         deployed using the same conduit key.\n     *\n     * @param conduitKey   The conduit key used to deploy the conduit. Note that\n     *                     the first twenty bytes of the conduit key must match\n     *                     the caller of this contract.\n     * @param initialOwner The initial owner to set for the new conduit.\n     *\n     * @return conduit The address of the newly deployed conduit.\n     */\n    function createConduit(bytes32 conduitKey, address initialOwner)\n        external\n        returns (address conduit);\n\n    /**\n     * @notice Open or close a channel on a given conduit, thereby allowing the\n     *         specified account to execute transfers against that conduit.\n     *         Extreme care must be taken when updating channels, as malicious\n     *         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n     *         tokens where the token holder has granted the conduit approval.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to open or close the channel.\n     * @param channel The channel to open or close on the conduit.\n     * @param isOpen  A boolean indicating whether to open or close the channel.\n     */\n    function updateChannel(\n        address conduit,\n        address channel,\n        bool isOpen\n    ) external;\n\n    /**\n     * @notice Initiate conduit ownership transfer by assigning a new potential\n     *         owner for the given conduit. Once set, the new potential owner\n     *         may call `acceptOwnership` to claim ownership of the conduit.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to initiate ownership transfer.\n     * @param newPotentialOwner The new potential owner of the conduit.\n     */\n    function transferOwnership(address conduit, address newPotentialOwner)\n        external;\n\n    /**\n     * @notice Clear the currently set potential owner, if any, from a conduit.\n     *         Only the owner of the conduit in question may call this function.\n     *\n     * @param conduit The conduit for which to cancel ownership transfer.\n     */\n    function cancelOwnershipTransfer(address conduit) external;\n\n    /**\n     * @notice Accept ownership of a supplied conduit. Only accounts that the\n     *         current owner has set as the new potential owner may call this\n     *         function.\n     *\n     * @param conduit The conduit for which to accept ownership.\n     */\n    function acceptOwnership(address conduit) external;\n\n    /**\n     * @notice Retrieve the current owner of a deployed conduit.\n     *\n     * @param conduit The conduit for which to retrieve the associated owner.\n     *\n     * @return owner The owner of the supplied conduit.\n     */\n    function ownerOf(address conduit) external view returns (address owner);\n\n    /**\n     * @notice Retrieve the conduit key for a deployed conduit via reverse\n     *         lookup.\n     *\n     * @param conduit The conduit for which to retrieve the associated conduit\n     *                key.\n     *\n     * @return conduitKey The conduit key used to deploy the supplied conduit.\n     */\n    function getKey(address conduit) external view returns (bytes32 conduitKey);\n\n    /**\n     * @notice Derive the conduit associated with a given conduit key and\n     *         determine whether that conduit exists (i.e. whether it has been\n     *         deployed).\n     *\n     * @param conduitKey The conduit key used to derive the conduit.\n     *\n     * @return conduit The derived address of the conduit.\n     * @return exists  A boolean indicating whether the derived conduit has been\n     *                 deployed or not.\n     */\n    function getConduit(bytes32 conduitKey)\n        external\n        view\n        returns (address conduit, bool exists);\n\n    /**\n     * @notice Retrieve the potential owner, if any, for a given conduit. The\n     *         current owner may set a new potential owner via\n     *         `transferOwnership` and that owner may then accept ownership of\n     *         the conduit in question via `acceptOwnership`.\n     *\n     * @param conduit The conduit for which to retrieve the potential owner.\n     *\n     * @return potentialOwner The potential owner, if any, for the conduit.\n     */\n    function getPotentialOwner(address conduit)\n        external\n        view\n        returns (address potentialOwner);\n\n    /**\n     * @notice Retrieve the status (either open or closed) of a given channel on\n     *         a conduit.\n     *\n     * @param conduit The conduit for which to retrieve the channel status.\n     * @param channel The channel for which to retrieve the status.\n     *\n     * @return isOpen The status of the channel on the given conduit.\n     */\n    function getChannelStatus(address conduit, address channel)\n        external\n        view\n        returns (bool isOpen);\n\n    /**\n     * @notice Retrieve the total number of open channels for a given conduit.\n     *\n     * @param conduit The conduit for which to retrieve the total channel count.\n     *\n     * @return totalChannels The total number of open channels for the conduit.\n     */\n    function getTotalChannels(address conduit)\n        external\n        view\n        returns (uint256 totalChannels);\n\n    /**\n     * @notice Retrieve an open channel at a specific index for a given conduit.\n     *         Note that the index of a channel can change as a result of other\n     *         channels being closed on the conduit.\n     *\n     * @param conduit      The conduit for which to retrieve the open channel.\n     * @param channelIndex The index of the channel in question.\n     *\n     * @return channel The open channel, if any, at the specified channel index.\n     */\n    function getChannel(address conduit, uint256 channelIndex)\n        external\n        view\n        returns (address channel);\n\n    /**\n     * @notice Retrieve all open channels for a given conduit. Note that calling\n     *         this function for a conduit with many channels will revert with\n     *         an out-of-gas error.\n     *\n     * @param conduit The conduit for which to retrieve open channels.\n     *\n     * @return channels An array of open channels on the given conduit.\n     */\n    function getChannels(address conduit)\n        external\n        view\n        returns (address[] memory channels);\n\n    /**\n     * @dev Retrieve the conduit creation code and runtime code hashes.\n     */\n    function getConduitCodeHashes()\n        external\n        view\n        returns (bytes32 creationCodeHash, bytes32 runtimeCodeHash);\n}\n"
			},
			"conduit/lib/ConduitStructs.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport { ConduitItemType } from \"./ConduitEnums.sol\";\n\nstruct ConduitTransfer {\n    ConduitItemType itemType;\n    address token;\n    address from;\n    address to;\n    uint256 identifier;\n    uint256 amount;\n}\n\nstruct ConduitBatch1155Transfer {\n    address token;\n    address from;\n    address to;\n    uint256[] ids;\n    uint256[] amounts;\n}\n"
			},
			"conduit/lib/ConduitConstants.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n// error ChannelClosed(address channel)\nuint256 constant ChannelClosed_error_signature = (\n    0x93daadf200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ChannelClosed_error_ptr = 0x00;\nuint256 constant ChannelClosed_channel_ptr = 0x4;\nuint256 constant ChannelClosed_error_length = 0x24;\n\n// For the mapping:\n// mapping(address => bool) channels\n// The position in storage for a particular account is:\n// keccak256(abi.encode(account, channels.slot))\nuint256 constant ChannelKey_channel_ptr = 0x00;\nuint256 constant ChannelKey_slot_ptr = 0x20;\nuint256 constant ChannelKey_length = 0x40;\n"
			},
			"lib/TokenTransferrer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nimport \"./TokenTransferrerConstants.sol\";\n\n// prettier-ignore\nimport {\n    TokenTransferrerErrors\n} from \"../interfaces/TokenTransferrerErrors.sol\";\n\nimport { ConduitBatch1155Transfer } from \"../conduit/lib/ConduitStructs.sol\";\n\n/**\n * @title TokenTransferrer\n * @author 0age\n * @custom:coauthor d1ll0n\n * @custom:coauthor transmissions11\n * @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n *         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n *         by conduits deployed by the ConduitController. Use great caution when\n *         considering these functions for use in other codebases, as there are\n *         significant side effects and edge cases that need to be thoroughly\n *         understood and carefully addressed.\n */\ncontract TokenTransferrer is TokenTransferrerErrors {\n    /**\n     * @dev Internal function to transfer ERC20 tokens from a given originator\n     *      to a given recipient. Sufficient approvals must be set on the\n     *      contract performing the transfer.\n     *\n     * @param token      The ERC20 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC20Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC20 token transfer.\n        assembly {\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data into memory, starting with function selector.\n            mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature)\n            mstore(ERC20_transferFrom_from_ptr, from)\n            mstore(ERC20_transferFrom_to_ptr, to)\n            mstore(ERC20_transferFrom_amount_ptr, amount)\n\n            // Make call & copy up to 32 bytes of return data to scratch space.\n            // Scratch space does not need to be cleared ahead of time, as the\n            // subsequent check will ensure that either at least a full word of\n            // return data is received (in which case it will be overwritten) or\n            // that no data is received (in which case scratch space will be\n            // ignored) on a successful call to the given token.\n            let callStatus := call(\n                gas(),\n                token,\n                0,\n                ERC20_transferFrom_sig_ptr,\n                ERC20_transferFrom_length,\n                0,\n                OneWord\n            )\n\n            // Determine whether transfer was successful using status & result.\n            let success := and(\n                // Set success to whether the call reverted, if not check it\n                // either returned exactly 1 (can't just be non-zero data), or\n                // had no return data.\n                or(\n                    and(eq(mload(0), 1), gt(returndatasize(), 31)),\n                    iszero(returndatasize())\n                ),\n                callStatus\n            )\n\n            // Handle cases where either the transfer failed or no data was\n            // returned. Group these, as most transfers will succeed with data.\n            // Equivalent to `or(iszero(success), iszero(returndatasize()))`\n            // but after it's inverted for JUMPI this expression is cheaper.\n            if iszero(and(success, iszero(iszero(returndatasize())))) {\n                // If the token has no code or the transfer failed: Equivalent\n                // to `or(iszero(success), iszero(extcodesize(token)))` but\n                // after it's inverted for JUMPI this expression is cheaper.\n                if iszero(and(iszero(iszero(extcodesize(token))), success)) {\n                    // If the transfer failed:\n                    if iszero(success) {\n                        // If it was due to a revert:\n                        if iszero(callStatus) {\n                            // If it returned a message, bubble it up as long as\n                            // sufficient gas remains to do so:\n                            if returndatasize() {\n                                // Ensure that sufficient gas is available to\n                                // copy returndata while expanding memory where\n                                // necessary. Start by computing the word size\n                                // of returndata and allocated memory. Round up\n                                // to the nearest full word.\n                                let returnDataWords := div(\n                                    add(returndatasize(), AlmostOneWord),\n                                    OneWord\n                                )\n\n                                // Note: use the free memory pointer in place of\n                                // msize() to work around a Yul warning that\n                                // prevents accessing msize directly when the IR\n                                // pipeline is activated.\n                                let msizeWords := div(memPointer, OneWord)\n\n                                // Next, compute the cost of the returndatacopy.\n                                let cost := mul(CostPerWord, returnDataWords)\n\n                                // Then, compute cost of new memory allocation.\n                                if gt(returnDataWords, msizeWords) {\n                                    cost := add(\n                                        cost,\n                                        add(\n                                            mul(\n                                                sub(\n                                                    returnDataWords,\n                                                    msizeWords\n                                                ),\n                                                CostPerWord\n                                            ),\n                                            div(\n                                                sub(\n                                                    mul(\n                                                        returnDataWords,\n                                                        returnDataWords\n                                                    ),\n                                                    mul(msizeWords, msizeWords)\n                                                ),\n                                                MemoryExpansionCoefficient\n                                            )\n                                        )\n                                    )\n                                }\n\n                                // Finally, add a small constant and compare to\n                                // gas remaining; bubble up the revert data if\n                                // enough gas is still available.\n                                if lt(add(cost, ExtraGasBuffer), gas()) {\n                                    // Copy returndata to memory; overwrite\n                                    // existing memory.\n                                    returndatacopy(0, 0, returndatasize())\n\n                                    // Revert, specifying memory region with\n                                    // copied returndata.\n                                    revert(0, returndatasize())\n                                }\n                            }\n\n                            // Otherwise revert with a generic error message.\n                            mstore(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_signature\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_token_ptr,\n                                token\n                            )\n                            mstore(\n                                TokenTransferGenericFailure_error_from_ptr,\n                                from\n                            )\n                            mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                            mstore(TokenTransferGenericFailure_error_id_ptr, 0)\n                            mstore(\n                                TokenTransferGenericFailure_error_amount_ptr,\n                                amount\n                            )\n                            revert(\n                                TokenTransferGenericFailure_error_sig_ptr,\n                                TokenTransferGenericFailure_error_length\n                            )\n                        }\n\n                        // Otherwise revert with a message about the token\n                        // returning false or non-compliant return values.\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_signature\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_token_ptr,\n                            token\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_from_ptr,\n                            from\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_to_ptr,\n                            to\n                        )\n                        mstore(\n                            BadReturnValueFromERC20OnTransfer_error_amount_ptr,\n                            amount\n                        )\n                        revert(\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\n                            BadReturnValueFromERC20OnTransfer_error_length\n                        )\n                    }\n\n                    // Otherwise, revert with error about token not having code:\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Otherwise, the token just returned no data despite the call\n                // having succeeded; no need to optimize for this as it's not\n                // technically ERC20 compliant.\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer an ERC721 token from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer. Note that this function does\n     *      not check whether the receiver can accept the ERC721 token (i.e. it\n     *      does not use `safeTransferFrom`).\n     *\n     * @param token      The ERC721 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The tokenId to transfer.\n     */\n    function _performERC721Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier\n    ) internal {\n        // Utilize assembly to perform an optimized ERC721 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The free memory pointer memory slot will be used when populating\n            // call data for the transfer; read the value and restore it later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n\n            // Write call data to memory starting with function selector.\n            mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature)\n            mstore(ERC721_transferFrom_from_ptr, from)\n            mstore(ERC721_transferFrom_to_ptr, to)\n            mstore(ERC721_transferFrom_id_ptr, identifier)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC721_transferFrom_sig_ptr,\n                ERC721_transferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, 1)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer.\n     *\n     * @param token      The ERC1155 token to transfer.\n     * @param from       The originator of the transfer.\n     * @param to         The recipient of the transfer.\n     * @param identifier The id to transfer.\n     * @param amount     The amount to transfer.\n     */\n    function _performERC1155Transfer(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    ) internal {\n        // Utilize assembly to perform an optimized ERC1155 token transfer.\n        assembly {\n            // If the token has no code, revert.\n            if iszero(extcodesize(token)) {\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                mstore(NoContract_error_token_ptr, token)\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\n            }\n\n            // The following memory slots will be used when populating call data\n            // for the transfer; read the values and restore them later.\n            let memPointer := mload(FreeMemoryPointerSlot)\n            let slot0x80 := mload(Slot0x80)\n            let slot0xA0 := mload(Slot0xA0)\n            let slot0xC0 := mload(Slot0xC0)\n\n            // Write call data into memory, beginning with function selector.\n            mstore(\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_signature\n            )\n            mstore(ERC1155_safeTransferFrom_from_ptr, from)\n            mstore(ERC1155_safeTransferFrom_to_ptr, to)\n            mstore(ERC1155_safeTransferFrom_id_ptr, identifier)\n            mstore(ERC1155_safeTransferFrom_amount_ptr, amount)\n            mstore(\n                ERC1155_safeTransferFrom_data_offset_ptr,\n                ERC1155_safeTransferFrom_data_length_offset\n            )\n            mstore(ERC1155_safeTransferFrom_data_length_ptr, 0)\n\n            // Perform the call, ignoring return data.\n            let success := call(\n                gas(),\n                token,\n                0,\n                ERC1155_safeTransferFrom_sig_ptr,\n                ERC1155_safeTransferFrom_length,\n                0,\n                0\n            )\n\n            // If the transfer reverted:\n            if iszero(success) {\n                // If it returned a message, bubble it up as long as sufficient\n                // gas remains to do so:\n                if returndatasize() {\n                    // Ensure that sufficient gas is available to copy\n                    // returndata while expanding memory where necessary. Start\n                    // by computing word size of returndata & allocated memory.\n                    // Round up to the nearest full word.\n                    let returnDataWords := div(\n                        add(returndatasize(), AlmostOneWord),\n                        OneWord\n                    )\n\n                    // Note: use the free memory pointer in place of msize() to\n                    // work around a Yul warning that prevents accessing msize\n                    // directly when the IR pipeline is activated.\n                    let msizeWords := div(memPointer, OneWord)\n\n                    // Next, compute the cost of the returndatacopy.\n                    let cost := mul(CostPerWord, returnDataWords)\n\n                    // Then, compute cost of new memory allocation.\n                    if gt(returnDataWords, msizeWords) {\n                        cost := add(\n                            cost,\n                            add(\n                                mul(\n                                    sub(returnDataWords, msizeWords),\n                                    CostPerWord\n                                ),\n                                div(\n                                    sub(\n                                        mul(returnDataWords, returnDataWords),\n                                        mul(msizeWords, msizeWords)\n                                    ),\n                                    MemoryExpansionCoefficient\n                                )\n                            )\n                        )\n                    }\n\n                    // Finally, add a small constant and compare to gas\n                    // remaining; bubble up the revert data if enough gas is\n                    // still available.\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\n                        // Copy returndata to memory; overwrite existing memory.\n                        returndatacopy(0, 0, returndatasize())\n\n                        // Revert, giving memory region with copied returndata.\n                        revert(0, returndatasize())\n                    }\n                }\n\n                // Otherwise revert with a generic error message.\n                mstore(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_signature\n                )\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\n                mstore(TokenTransferGenericFailure_error_amount_ptr, amount)\n                revert(\n                    TokenTransferGenericFailure_error_sig_ptr,\n                    TokenTransferGenericFailure_error_length\n                )\n            }\n\n            mstore(Slot0x80, slot0x80) // Restore slot 0x80.\n            mstore(Slot0xA0, slot0xA0) // Restore slot 0xA0.\n            mstore(Slot0xC0, slot0xC0) // Restore slot 0xC0.\n\n            // Restore the original free memory pointer.\n            mstore(FreeMemoryPointerSlot, memPointer)\n\n            // Restore the zero slot to zero.\n            mstore(ZeroSlot, 0)\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer ERC1155 tokens from a given\n     *      originator to a given recipient. Sufficient approvals must be set on\n     *      the contract performing the transfer and contract recipients must\n     *      implement the ERC1155TokenReceiver interface to indicate that they\n     *      are willing to accept the transfer. NOTE: this function is not\n     *      memory-safe; it will overwrite existing memory, restore the free\n     *      memory pointer to the default value, and overwrite the zero slot.\n     *      This function should only be called once memory is no longer\n     *      required and when uninitialized arrays are not utilized, and memory\n     *      should be considered fully corrupted (aside from the existence of a\n     *      default-value free memory pointer) after calling this function.\n     *\n     * @param batchTransfers The group of 1155 batch transfers to perform.\n     */\n    function _performERC1155BatchTransfers(\n        ConduitBatch1155Transfer[] calldata batchTransfers\n    ) internal {\n        // Utilize assembly to perform optimized batch 1155 transfers.\n        assembly {\n            let len := batchTransfers.length\n            // Pointer to first head in the array, which is offset to the struct\n            // at each index. This gets incremented after each loop to avoid\n            // multiplying by 32 to get the offset for each element.\n            let nextElementHeadPtr := batchTransfers.offset\n\n            // Pointer to beginning of the head of the array. This is the\n            // reference position each offset references. It's held static to\n            // let each loop calculate the data position for an element.\n            let arrayHeadPtr := nextElementHeadPtr\n\n            // Write the function selector, which will be reused for each call:\n            // safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\n            mstore(\n                ConduitBatch1155Transfer_from_offset,\n                ERC1155_safeBatchTransferFrom_signature\n            )\n\n            // Iterate over each batch transfer.\n            for {\n                let i := 0\n            } lt(i, len) {\n                i := add(i, 1)\n            } {\n                // Read the offset to the beginning of the element and add\n                // it to pointer to the beginning of the array head to get\n                // the absolute position of the element in calldata.\n                let elementPtr := add(\n                    arrayHeadPtr,\n                    calldataload(nextElementHeadPtr)\n                )\n\n                // Retrieve the token from calldata.\n                let token := calldataload(elementPtr)\n\n                // If the token has no code, revert.\n                if iszero(extcodesize(token)) {\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\n                    mstore(NoContract_error_token_ptr, token)\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\n                }\n\n                // Get the total number of supplied ids.\n                let idsLength := calldataload(\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset)\n                )\n\n                // Determine the expected offset for the amounts array.\n                let expectedAmountsOffset := add(\n                    ConduitBatch1155Transfer_amounts_length_baseOffset,\n                    mul(idsLength, OneWord)\n                )\n\n                // Validate struct encoding.\n                let invalidEncoding := iszero(\n                    and(\n                        // ids.length == amounts.length\n                        eq(\n                            idsLength,\n                            calldataload(add(elementPtr, expectedAmountsOffset))\n                        ),\n                        and(\n                            // ids_offset == 0xa0\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatch1155Transfer_ids_head_offset\n                                    )\n                                ),\n                                ConduitBatch1155Transfer_ids_length_offset\n                            ),\n                            // amounts_offset == 0xc0 + ids.length*32\n                            eq(\n                                calldataload(\n                                    add(\n                                        elementPtr,\n                                        ConduitBatchTransfer_amounts_head_offset\n                                    )\n                                ),\n                                expectedAmountsOffset\n                            )\n                        )\n                    )\n                )\n\n                // Revert with an error if the encoding is not valid.\n                if invalidEncoding {\n                    mstore(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_selector\n                    )\n                    revert(\n                        Invalid1155BatchTransferEncoding_ptr,\n                        Invalid1155BatchTransferEncoding_length\n                    )\n                }\n\n                // Update the offset position for the next loop\n                nextElementHeadPtr := add(nextElementHeadPtr, OneWord)\n\n                // Copy the first section of calldata (before dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_from_offset),\n                    ConduitBatch1155Transfer_usable_head_size\n                )\n\n                // Determine size of calldata required for ids and amounts. Note\n                // that the size includes both lengths as well as the data.\n                let idsAndAmountsSize := add(TwoWords, mul(idsLength, TwoWords))\n\n                // Update the offset for the data array in memory.\n                mstore(\n                    BatchTransfer1155Params_data_head_ptr,\n                    add(\n                        BatchTransfer1155Params_ids_length_offset,\n                        idsAndAmountsSize\n                    )\n                )\n\n                // Set the length of the data array in memory to zero.\n                mstore(\n                    add(\n                        BatchTransfer1155Params_data_length_basePtr,\n                        idsAndAmountsSize\n                    ),\n                    0\n                )\n\n                // Determine the total calldata size for the call to transfer.\n                let transferDataSize := add(\n                    BatchTransfer1155Params_calldata_baseSize,\n                    idsAndAmountsSize\n                )\n\n                // Copy second section of calldata (including dynamic values).\n                calldatacopy(\n                    BatchTransfer1155Params_ids_length_ptr,\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset),\n                    idsAndAmountsSize\n                )\n\n                // Perform the call to transfer 1155 tokens.\n                let success := call(\n                    gas(),\n                    token,\n                    0,\n                    ConduitBatch1155Transfer_from_offset, // Data portion start.\n                    transferDataSize, // Location of the length of callData.\n                    0,\n                    0\n                )\n\n                // If the transfer reverted:\n                if iszero(success) {\n                    // If it returned a message, bubble it up as long as\n                    // sufficient gas remains to do so:\n                    if returndatasize() {\n                        // Ensure that sufficient gas is available to copy\n                        // returndata while expanding memory where necessary.\n                        // Start by computing word size of returndata and\n                        // allocated memory. Round up to the nearest full word.\n                        let returnDataWords := div(\n                            add(returndatasize(), AlmostOneWord),\n                            OneWord\n                        )\n\n                        // Note: use transferDataSize in place of msize() to\n                        // work around a Yul warning that prevents accessing\n                        // msize directly when the IR pipeline is activated.\n                        // The free memory pointer is not used here because\n                        // this function does almost all memory management\n                        // manually and does not update it, and transferDataSize\n                        // should be the largest memory value used (unless a\n                        // previous batch was larger).\n                        let msizeWords := div(transferDataSize, OneWord)\n\n                        // Next, compute the cost of the returndatacopy.\n                        let cost := mul(CostPerWord, returnDataWords)\n\n                        // Then, compute cost of new memory allocation.\n                        if gt(returnDataWords, msizeWords) {\n                            cost := add(\n                                cost,\n                                add(\n                                    mul(\n                                        sub(returnDataWords, msizeWords),\n                                        CostPerWord\n                                    ),\n                                    div(\n                                        sub(\n                                            mul(\n                                                returnDataWords,\n                                                returnDataWords\n                                            ),\n                                            mul(msizeWords, msizeWords)\n                                        ),\n                                        MemoryExpansionCoefficient\n                                    )\n                                )\n                            )\n                        }\n\n                        // Finally, add a small constant and compare to gas\n                        // remaining; bubble up the revert data if enough gas is\n                        // still available.\n                        if lt(add(cost, ExtraGasBuffer), gas()) {\n                            // Copy returndata to memory; overwrite existing.\n                            returndatacopy(0, 0, returndatasize())\n\n                            // Revert with memory region containing returndata.\n                            revert(0, returndatasize())\n                        }\n                    }\n\n                    // Set the error signature.\n                    mstore(\n                        0,\n                        ERC1155BatchTransferGenericFailure_error_signature\n                    )\n\n                    // Write the token.\n                    mstore(ERC1155BatchTransferGenericFailure_token_ptr, token)\n\n                    // Increase the offset to ids by 32.\n                    mstore(\n                        BatchTransfer1155Params_ids_head_ptr,\n                        ERC1155BatchTransferGenericFailure_ids_offset\n                    )\n\n                    // Increase the offset to amounts by 32.\n                    mstore(\n                        BatchTransfer1155Params_amounts_head_ptr,\n                        add(\n                            OneWord,\n                            mload(BatchTransfer1155Params_amounts_head_ptr)\n                        )\n                    )\n\n                    // Return modified region. The total size stays the same as\n                    // `token` uses the same number of bytes as `data.length`.\n                    revert(0, transferDataSize)\n                }\n            }\n\n            // Reset the free memory pointer to the default value; memory must\n            // be assumed to be dirtied and not reused from this point forward.\n            // Also note that the zero slot is not reset to zero, meaning empty\n            // arrays cannot be safely created or utilized until it is restored.\n            mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer)\n        }\n    }\n}\n"
			},
			"conduit/lib/ConduitEnums.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\nenum ConduitItemType {\n    NATIVE, // unused\n    ERC20,\n    ERC721,\n    ERC1155\n}\n"
			},
			"interfaces/TokenTransferrerErrors.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/**\n * @title TokenTransferrerErrors\n */\ninterface TokenTransferrerErrors {\n    /**\n     * @dev Revert with an error when an ERC721 transfer with amount other than\n     *      one is attempted.\n     */\n    error InvalidERC721TransferAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has an amount of zero.\n     */\n    error MissingItemAmount();\n\n    /**\n     * @dev Revert with an error when attempting to fulfill an order where an\n     *      item has unused parameters. This includes both the token and the\n     *      identifier parameters for native transfers as well as the identifier\n     *      parameter for ERC20 transfers. Note that the conduit does not\n     *      perform this check, leaving it up to the calling channel to enforce\n     *      when desired.\n     */\n    error UnusedItemParameters();\n\n    /**\n     * @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n     *      transfer reverts.\n     *\n     * @param token      The token for which the transfer was attempted.\n     * @param from       The source of the attempted transfer.\n     * @param to         The recipient of the attempted transfer.\n     * @param identifier The identifier for the attempted transfer.\n     * @param amount     The amount for the attempted transfer.\n     */\n    error TokenTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256 identifier,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when a batch ERC1155 token transfer reverts.\n     *\n     * @param token       The token for which the transfer was attempted.\n     * @param from        The source of the attempted transfer.\n     * @param to          The recipient of the attempted transfer.\n     * @param identifiers The identifiers for the attempted transfer.\n     * @param amounts     The amounts for the attempted transfer.\n     */\n    error ERC1155BatchTransferGenericFailure(\n        address token,\n        address from,\n        address to,\n        uint256[] identifiers,\n        uint256[] amounts\n    );\n\n    /**\n     * @dev Revert with an error when an ERC20 token transfer returns a falsey\n     *      value.\n     *\n     * @param token      The token for which the ERC20 transfer was attempted.\n     * @param from       The source of the attempted ERC20 transfer.\n     * @param to         The recipient of the attempted ERC20 transfer.\n     * @param amount     The amount for the attempted ERC20 transfer.\n     */\n    error BadReturnValueFromERC20OnTransfer(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    );\n\n    /**\n     * @dev Revert with an error when an account being called as an assumed\n     *      contract does not have code and returns no data.\n     *\n     * @param account The account that should contain code.\n     */\n    error NoContract(address account);\n\n    /**\n     * @dev Revert with an error when attempting to execute an 1155 batch\n     *      transfer using calldata not produced by default ABI encoding or with\n     *      different lengths for ids and amounts arrays.\n     */\n    error Invalid1155BatchTransferEncoding();\n}\n"
			},
			"lib/TokenTransferrerConstants.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.7;\n\n/*\n * -------------------------- Disambiguation & Other Notes ---------------------\n *    - The term \"head\" is used as it is in the documentation for ABI encoding,\n *      but only in reference to dynamic types, i.e. it always refers to the\n *      offset or pointer to the body of a dynamic type. In calldata, the head\n *      is always an offset (relative to the parent object), while in memory,\n *      the head is always the pointer to the body. More information found here:\n *      https://docs.soliditylang.org/en/v0.8.14/abi-spec.html#argument-encoding\n *        - Note that the length of an array is separate from and precedes the\n *          head of the array.\n *\n *    - The term \"body\" is used in place of the term \"head\" used in the ABI\n *      documentation. It refers to the start of the data for a dynamic type,\n *      e.g. the first word of a struct or the first word of the first element\n *      in an array.\n *\n *    - The term \"pointer\" is used to describe the absolute position of a value\n *      and never an offset relative to another value.\n *        - The suffix \"_ptr\" refers to a memory pointer.\n *        - The suffix \"_cdPtr\" refers to a calldata pointer.\n *\n *    - The term \"offset\" is used to describe the position of a value relative\n *      to some parent value. For example, OrderParameters_conduit_offset is the\n *      offset to the \"conduit\" value in the OrderParameters struct relative to\n *      the start of the body.\n *        - Note: Offsets are used to derive pointers.\n *\n *    - Some structs have pointers defined for all of their fields in this file.\n *      Lines which are commented out are fields that are not used in the\n *      codebase but have been left in for readability.\n */\n\nuint256 constant AlmostOneWord = 0x1f;\nuint256 constant OneWord = 0x20;\nuint256 constant TwoWords = 0x40;\nuint256 constant ThreeWords = 0x60;\n\nuint256 constant FreeMemoryPointerSlot = 0x40;\nuint256 constant ZeroSlot = 0x60;\nuint256 constant DefaultFreeMemoryPointer = 0x80;\n\nuint256 constant Slot0x80 = 0x80;\nuint256 constant Slot0xA0 = 0xa0;\nuint256 constant Slot0xC0 = 0xc0;\n\n// abi.encodeWithSignature(\"transferFrom(address,address,uint256)\")\nuint256 constant ERC20_transferFrom_signature = (\n    0x23b872dd00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC20_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC20_transferFrom_from_ptr = 0x04;\nuint256 constant ERC20_transferFrom_to_ptr = 0x24;\nuint256 constant ERC20_transferFrom_amount_ptr = 0x44;\nuint256 constant ERC20_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\n//     \"safeTransferFrom(address,address,uint256,uint256,bytes)\"\n// )\nuint256 constant ERC1155_safeTransferFrom_signature = (\n    0xf242432a00000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155_safeTransferFrom_sig_ptr = 0x0;\nuint256 constant ERC1155_safeTransferFrom_from_ptr = 0x04;\nuint256 constant ERC1155_safeTransferFrom_to_ptr = 0x24;\nuint256 constant ERC1155_safeTransferFrom_id_ptr = 0x44;\nuint256 constant ERC1155_safeTransferFrom_amount_ptr = 0x64;\nuint256 constant ERC1155_safeTransferFrom_data_offset_ptr = 0x84;\nuint256 constant ERC1155_safeTransferFrom_data_length_ptr = 0xa4;\nuint256 constant ERC1155_safeTransferFrom_length = 0xc4; // 4 + 32 * 6 == 196\nuint256 constant ERC1155_safeTransferFrom_data_length_offset = 0xa0;\n\n// abi.encodeWithSignature(\n//     \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\"\n// )\nuint256 constant ERC1155_safeBatchTransferFrom_signature = (\n    0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n);\n\nbytes4 constant ERC1155_safeBatchTransferFrom_selector = bytes4(\n    bytes32(ERC1155_safeBatchTransferFrom_signature)\n);\n\nuint256 constant ERC721_transferFrom_signature = ERC20_transferFrom_signature;\nuint256 constant ERC721_transferFrom_sig_ptr = 0x0;\nuint256 constant ERC721_transferFrom_from_ptr = 0x04;\nuint256 constant ERC721_transferFrom_to_ptr = 0x24;\nuint256 constant ERC721_transferFrom_id_ptr = 0x44;\nuint256 constant ERC721_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\n\n// abi.encodeWithSignature(\"NoContract(address)\")\nuint256 constant NoContract_error_signature = (\n    0x5f15d67200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant NoContract_error_sig_ptr = 0x0;\nuint256 constant NoContract_error_token_ptr = 0x4;\nuint256 constant NoContract_error_length = 0x24; // 4 + 32 == 36\n\n// abi.encodeWithSignature(\n//     \"TokenTransferGenericFailure(address,address,address,uint256,uint256)\"\n// )\nuint256 constant TokenTransferGenericFailure_error_signature = (\n    0xf486bc8700000000000000000000000000000000000000000000000000000000\n);\nuint256 constant TokenTransferGenericFailure_error_sig_ptr = 0x0;\nuint256 constant TokenTransferGenericFailure_error_token_ptr = 0x4;\nuint256 constant TokenTransferGenericFailure_error_from_ptr = 0x24;\nuint256 constant TokenTransferGenericFailure_error_to_ptr = 0x44;\nuint256 constant TokenTransferGenericFailure_error_id_ptr = 0x64;\nuint256 constant TokenTransferGenericFailure_error_amount_ptr = 0x84;\n\n// 4 + 32 * 5 == 164\nuint256 constant TokenTransferGenericFailure_error_length = 0xa4;\n\n// abi.encodeWithSignature(\n//     \"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\"\n// )\nuint256 constant BadReturnValueFromERC20OnTransfer_error_signature = (\n    0x9889192300000000000000000000000000000000000000000000000000000000\n);\nuint256 constant BadReturnValueFromERC20OnTransfer_error_sig_ptr = 0x0;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_token_ptr = 0x4;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_from_ptr = 0x24;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_to_ptr = 0x44;\nuint256 constant BadReturnValueFromERC20OnTransfer_error_amount_ptr = 0x64;\n\n// 4 + 32 * 4 == 132\nuint256 constant BadReturnValueFromERC20OnTransfer_error_length = 0x84;\n\nuint256 constant ExtraGasBuffer = 0x20;\nuint256 constant CostPerWord = 3;\nuint256 constant MemoryExpansionCoefficient = 0x200;\n\n// Values are offset by 32 bytes in order to write the token to the beginning\n// in the event of a revert\nuint256 constant BatchTransfer1155Params_ptr = 0x24;\nuint256 constant BatchTransfer1155Params_ids_head_ptr = 0x64;\nuint256 constant BatchTransfer1155Params_amounts_head_ptr = 0x84;\nuint256 constant BatchTransfer1155Params_data_head_ptr = 0xa4;\nuint256 constant BatchTransfer1155Params_data_length_basePtr = 0xc4;\nuint256 constant BatchTransfer1155Params_calldata_baseSize = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_ptr = 0xc4;\n\nuint256 constant BatchTransfer1155Params_ids_length_offset = 0xa0;\nuint256 constant BatchTransfer1155Params_amounts_length_baseOffset = 0xc0;\nuint256 constant BatchTransfer1155Params_data_length_baseOffset = 0xe0;\n\nuint256 constant ConduitBatch1155Transfer_usable_head_size = 0x80;\n\nuint256 constant ConduitBatch1155Transfer_from_offset = 0x20;\nuint256 constant ConduitBatch1155Transfer_ids_head_offset = 0x60;\nuint256 constant ConduitBatch1155Transfer_amounts_head_offset = 0x80;\nuint256 constant ConduitBatch1155Transfer_ids_length_offset = 0xa0;\nuint256 constant ConduitBatch1155Transfer_amounts_length_baseOffset = 0xc0;\nuint256 constant ConduitBatch1155Transfer_calldata_baseSize = 0xc0;\n\n// Note: abbreviated version of above constant to adhere to line length limit.\nuint256 constant ConduitBatchTransfer_amounts_head_offset = 0x80;\n\nuint256 constant Invalid1155BatchTransferEncoding_ptr = 0x00;\nuint256 constant Invalid1155BatchTransferEncoding_length = 0x04;\nuint256 constant Invalid1155BatchTransferEncoding_selector = (\n    0xeba2084c00000000000000000000000000000000000000000000000000000000\n);\n\nuint256 constant ERC1155BatchTransferGenericFailure_error_signature = (\n    0xafc445e200000000000000000000000000000000000000000000000000000000\n);\nuint256 constant ERC1155BatchTransferGenericFailure_token_ptr = 0x04;\nuint256 constant ERC1155BatchTransferGenericFailure_ids_offset = 0xc0;\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"conduit/Conduit.sol": {
				"Conduit": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BadReturnValueFromERC20OnTransfer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"name": "ChannelClosed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "ChannelStatusAlreadySet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "identifiers",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "ERC1155BatchTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Invalid1155BatchTransferEncoding",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidController",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidERC721TransferAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidItemType",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MissingItemAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "NoContract",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "identifier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnusedItemParameters",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "open",
									"type": "bool"
								}
							],
							"name": "ChannelUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum ConduitItemType",
											"name": "itemType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "identifier",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct ConduitTransfer[]",
									"name": "transfers",
									"type": "tuple[]"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256[]",
											"name": "ids",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "amounts",
											"type": "uint256[]"
										}
									],
									"internalType": "struct ConduitBatch1155Transfer[]",
									"name": "batchTransfers",
									"type": "tuple[]"
								}
							],
							"name": "executeBatch1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum ConduitItemType",
											"name": "itemType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "identifier",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct ConduitTransfer[]",
									"name": "standardTransfers",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256[]",
											"name": "ids",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "amounts",
											"type": "uint256[]"
										}
									],
									"internalType": "struct ConduitBatch1155Transfer[]",
									"name": "batchTransfers",
									"type": "tuple[]"
								}
							],
							"name": "executeWithBatch1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "updateChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "0age",
						"errors": {
							"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)": [
								{
									"details": "Revert with an error when an ERC20 token transfer returns a falsey      value.",
									"params": {
										"amount": "The amount for the attempted ERC20 transfer.",
										"from": "The source of the attempted ERC20 transfer.",
										"to": "The recipient of the attempted ERC20 transfer.",
										"token": "The token for which the ERC20 transfer was attempted."
									}
								}
							],
							"ChannelClosed(address)": [
								{
									"details": "Revert with an error when attempting to execute transfers using a      caller that does not have an open channel."
								}
							],
							"ChannelStatusAlreadySet(address,bool)": [
								{
									"details": "Revert with an error when attempting to update a channel to the      current status of that channel."
								}
							],
							"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])": [
								{
									"details": "Revert with an error when a batch ERC1155 token transfer reverts.",
									"params": {
										"amounts": "The amounts for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifiers": "The identifiers for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"Invalid1155BatchTransferEncoding()": [
								{
									"details": "Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays."
								}
							],
							"InvalidController()": [
								{
									"details": "Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller."
								}
							],
							"InvalidERC721TransferAmount()": [
								{
									"details": "Revert with an error when an ERC721 transfer with amount other than      one is attempted."
								}
							],
							"InvalidItemType()": [
								{
									"details": "Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type."
								}
							],
							"MissingItemAmount()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has an amount of zero."
								}
							],
							"NoContract(address)": [
								{
									"details": "Revert with an error when an account being called as an assumed      contract does not have code and returns no data.",
									"params": {
										"account": "The account that should contain code."
									}
								}
							],
							"TokenTransferGenericFailure(address,address,address,uint256,uint256)": [
								{
									"details": "Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.",
									"params": {
										"amount": "The amount for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifier": "The identifier for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"UnusedItemParameters()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"execute((uint8,address,address,address,uint256,uint256)[])": {
								"params": {
									"transfers": "The ERC20/721/1155 transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the transfers were                    performed successfully."
								}
							},
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": {
								"params": {
									"batchTransfers": "The 1155 batch item transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the item transfers were                    performed successfully."
								}
							},
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": {
								"params": {
									"batchTransfers": "The 1155 batch item transfers to perform.",
									"standardTransfers": "The ERC20/721/1155 item transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the item transfers were                    performed successfully."
								}
							},
							"updateChannel(address,bool)": {
								"params": {
									"channel": "The channel to open or close.",
									"isOpen": "The status of the channel (either open or closed)."
								}
							}
						},
						"title": "Conduit",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n  mstore(0x40, 0xa0)\n    /* \"conduit/Conduit.sol\":2751:2853  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"conduit/Conduit.sol\":2836:2846  msg.sender */\n  caller\n    /* \"conduit/Conduit.sol\":2822:2846  _controller = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ce34aa2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x899e104c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8df25d92\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4e8fcb5\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n    tag_10:\n        /* \"conduit/Conduit.sol\":3732:3749  bytes4 magicValue */\n      0x00\n        /* \"conduit/Conduit.sol\":1695:1703  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n      0x00\n        /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n      0x20\n        /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n      mstore\n        /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n      0x40\n        /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n      keccak256\n        /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n      sload\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n      tag_28\n      jumpi\n        /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n      0x93daadf200000000000000000000000000000000000000000000000000000000\n        /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n      mstore\n        /* \"conduit/Conduit.sol\":2406:2414  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n      0x04\n        /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n      0x24\n        /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n      revert\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n    tag_28:\n        /* \"conduit/Conduit.sol\":3839:3869  uint256 totalStandardTransfers */\n      0x00\n        /* \"conduit/Conduit.sol\":3872:3881  transfers */\n      dup4\n      dup4\n        /* \"conduit/Conduit.sol\":3872:3888  transfers.length */\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":3839:3888  uint256 totalStandardTransfers = transfers.length */\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":3943:3952  uint256 i */\n      0x00\n        /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n    tag_30:\n        /* \"conduit/Conduit.sol\":3962:3984  totalStandardTransfers */\n      dup2\n        /* \"conduit/Conduit.sol\":3958:3959  i */\n      dup2\n        /* \"conduit/Conduit.sol\":3958:3984  i < totalStandardTransfers */\n      lt\n        /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n      iszero\n      tag_31\n      jumpi\n        /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n      tag_33\n        /* \"conduit/Conduit.sol\":4087:4096  transfers */\n      dup6\n      dup6\n        /* \"conduit/Conduit.sol\":4097:4098  i */\n      dup4\n        /* \"conduit/Conduit.sol\":4087:4099  transfers[i] */\n      dup2\n      dup2\n      lt\n      tag_34\n      jumpi\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n    tag_34:\n      swap1\n      pop\n      0xc0\n      mul\n      add\n        /* \"conduit/Conduit.sol\":4077:4086  _transfer */\n      tag_37\n        /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n      jump\t// in\n    tag_33:\n        /* \"conduit/Conduit.sol\":4219:4222  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n      jump(tag_30)\n    tag_31:\n      pop\n        /* \"conduit/Conduit.sol\":4348:4369  this.execute.selector */\n      shl(0xe0, 0x4ce34aa2)\n        /* \"conduit/Conduit.sol\":4335:4369  magicValue = this.execute.selector */\n      swap2\n      pop\n        /* \"conduit/Conduit.sol\":3755:4376  {... */\n      pop\n        /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n    tag_16:\n        /* \"conduit/Conduit.sol\":6733:6750  bytes4 magicValue */\n      0x00\n        /* \"conduit/Conduit.sol\":1695:1703  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n      0x00\n        /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n      0x20\n        /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n      mstore\n        /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n      0x40\n        /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n      keccak256\n        /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n      sload\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n      tag_39\n      jumpi\n        /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n      0x93daadf200000000000000000000000000000000000000000000000000000000\n        /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n      mstore\n        /* \"conduit/Conduit.sol\":2406:2414  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n      0x04\n        /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n      0x24\n        /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n      revert\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n    tag_39:\n        /* \"conduit/Conduit.sol\":6836:6866  uint256 totalStandardTransfers */\n      0x00\n        /* \"conduit/Conduit.sol\":6869:6886  standardTransfers */\n      dup6\n      dup6\n        /* \"conduit/Conduit.sol\":6869:6893  standardTransfers.length */\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":6836:6893  uint256 totalStandardTransfers = standardTransfers.length */\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":6957:6966  uint256 i */\n      0x00\n        /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n    tag_41:\n        /* \"conduit/Conduit.sol\":6976:6998  totalStandardTransfers */\n      dup2\n        /* \"conduit/Conduit.sol\":6972:6973  i */\n      dup2\n        /* \"conduit/Conduit.sol\":6972:6998  i < totalStandardTransfers */\n      lt\n        /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n      iszero\n      tag_42\n      jumpi\n        /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n      tag_44\n        /* \"conduit/Conduit.sol\":7101:7118  standardTransfers */\n      dup8\n      dup8\n        /* \"conduit/Conduit.sol\":7119:7120  i */\n      dup4\n        /* \"conduit/Conduit.sol\":7101:7121  standardTransfers[i] */\n      dup2\n      dup2\n      lt\n      tag_45\n      jumpi\n      tag_46\n      tag_36\n      jump\t// in\n    tag_46:\n    tag_45:\n      swap1\n      pop\n      0xc0\n      mul\n      add\n        /* \"conduit/Conduit.sol\":7091:7100  _transfer */\n      tag_37\n        /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n      jump\t// in\n    tag_44:\n        /* \"conduit/Conduit.sol\":7241:7244  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n      jump(tag_41)\n    tag_42:\n      pop\n        /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n      tag_47\n        /* \"conduit/Conduit.sol\":7514:7528  batchTransfers */\n      dup5\n      dup5\n        /* \"conduit/Conduit.sol\":7484:7513  _performERC1155BatchTransfers */\n      tag_48\n        /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n      jump\t// in\n    tag_47:\n        /* \"conduit/Conduit.sol\":7631:7665  this.executeWithBatch1155.selector */\n      shl(0xe0, 0x899e104c)\n        /* \"conduit/Conduit.sol\":7618:7665  magicValue = this.executeWithBatch1155.selector */\n      swap2\n      pop\n        /* \"conduit/Conduit.sol\":6752:7672  {... */\n      pop\n        /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n    tag_21:\n        /* \"conduit/Conduit.sol\":5272:5289  bytes4 magicValue */\n      0x00\n        /* \"conduit/Conduit.sol\":1695:1703  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n      0x00\n        /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n      0x20\n        /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n      mstore\n        /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n      0x40\n        /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n      keccak256\n        /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n      sload\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n      tag_50\n      jumpi\n        /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n      0x93daadf200000000000000000000000000000000000000000000000000000000\n        /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n      mstore\n        /* \"conduit/Conduit.sol\":2406:2414  caller() */\n      caller\n        /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n      0x04\n        /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n      mstore\n        /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n      0x24\n        /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n      0x00\n        /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n      revert\n        /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n    tag_50:\n        /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n      tag_52\n        /* \"conduit/Conduit.sol\":5465:5479  batchTransfers */\n      dup4\n      dup4\n        /* \"conduit/Conduit.sol\":5435:5464  _performERC1155BatchTransfers */\n      tag_48\n        /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n      jump\t// in\n    tag_52:\n        /* \"conduit/Conduit.sol\":5582:5612  this.executeBatch1155.selector */\n      shl(0xe0, 0x8df25d92)\n        /* \"conduit/Conduit.sol\":5569:5612  magicValue = this.executeBatch1155.selector */\n      swap1\n      pop\n        /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n    tag_26:\n        /* \"conduit/Conduit.sol\":8074:8085  _controller */\n      immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n        /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/Conduit.sol\":8060:8070  msg.sender */\n      caller\n        /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n      tag_54\n      jumpi\n        /* \"conduit/Conduit.sol\":8108:8127  InvalidController() */\n      mload(0x40)\n      0x6d5769be00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n    tag_54:\n        /* \"conduit/Conduit.sol\":8253:8259  isOpen */\n      dup1\n        /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n      iszero\n      iszero\n        /* \"conduit/Conduit.sol\":8231:8240  _channels */\n      0x00\n        /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n      dup1\n        /* \"conduit/Conduit.sol\":8241:8248  channel */\n      dup5\n        /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n      iszero\n      iszero\n      sub\n        /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n      tag_55\n      jumpi\n        /* \"conduit/Conduit.sol\":8306:8313  channel */\n      dup2\n        /* \"conduit/Conduit.sol\":8315:8321  isOpen */\n      dup2\n        /* \"conduit/Conduit.sol\":8282:8322  ChannelStatusAlreadySet(channel, isOpen) */\n      mload(0x40)\n      0x924e341e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n    tag_55:\n        /* \"conduit/Conduit.sol\":8409:8415  isOpen */\n      dup1\n        /* \"conduit/Conduit.sol\":8388:8397  _channels */\n      0x00\n        /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n      dup1\n        /* \"conduit/Conduit.sol\":8398:8405  channel */\n      dup5\n        /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"conduit/Conduit.sol\":8388:8415  _channels[channel] = isOpen */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/Conduit.sol\":8485:8492  channel */\n      dup2\n        /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2\n        /* \"conduit/Conduit.sol\":8494:8500  isOpen */\n      dup3\n        /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n    tag_37:\n        /* \"conduit/Conduit.sol\":8980:9001  ConduitItemType.ERC20 */\n      0x01\n        /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n        /* \"conduit/Conduit.sol\":8963:8967  item */\n      dup2\n        /* \"conduit/Conduit.sol\":8963:8976  item.itemType */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_67\n      tag_63\n      jump\t// in\n    tag_67:\n    tag_66:\n      sub\n        /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n      tag_68\n      jumpi\n        /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n      tag_69\n        /* \"conduit/Conduit.sol\":9326:9330  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9326:9336  item.token */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"conduit/Conduit.sol\":9338:9342  item */\n      dup3\n        /* \"conduit/Conduit.sol\":9338:9347  item.from */\n      0x40\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_72:\n        /* \"conduit/Conduit.sol\":9349:9353  item */\n      dup4\n        /* \"conduit/Conduit.sol\":9349:9356  item.to */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_73:\n        /* \"conduit/Conduit.sol\":9358:9362  item */\n      dup5\n        /* \"conduit/Conduit.sol\":9358:9369  item.amount */\n      0xa0\n      add\n      calldataload\n        /* \"conduit/Conduit.sol\":9304:9325  _performERC20Transfer */\n      tag_74\n        /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n      jump\t// in\n    tag_69:\n        /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n      jump(tag_75)\n    tag_68:\n        /* \"conduit/Conduit.sol\":9408:9430  ConduitItemType.ERC721 */\n      0x02\n        /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_63\n      jump\t// in\n    tag_77:\n    tag_76:\n        /* \"conduit/Conduit.sol\":9391:9395  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9391:9404  item.itemType */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_78:\n        /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_79\n      jumpi\n      tag_80\n      tag_63\n      jump\t// in\n    tag_80:\n    tag_79:\n      sub\n        /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n      tag_81\n      jumpi\n        /* \"conduit/Conduit.sol\":9535:9536  1 */\n      0x01\n        /* \"conduit/Conduit.sol\":9520:9524  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9520:9531  item.amount */\n      0xa0\n      add\n      calldataload\n        /* \"conduit/Conduit.sol\":9520:9536  item.amount != 1 */\n      eq\n        /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n      tag_82\n      jumpi\n        /* \"conduit/Conduit.sol\":9563:9592  InvalidERC721TransferAmount() */\n      mload(0x40)\n      0xefcc00b100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n    tag_82:\n        /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n      tag_83\n        /* \"conduit/Conduit.sol\":9699:9703  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9699:9709  item.token */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_84:\n        /* \"conduit/Conduit.sol\":9727:9731  item */\n      dup3\n        /* \"conduit/Conduit.sol\":9727:9736  item.from */\n      0x40\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_85:\n        /* \"conduit/Conduit.sol\":9754:9758  item */\n      dup4\n        /* \"conduit/Conduit.sol\":9754:9761  item.to */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n        /* \"conduit/Conduit.sol\":9779:9783  item */\n      dup5\n        /* \"conduit/Conduit.sol\":9779:9794  item.identifier */\n      0x80\n      add\n      calldataload\n        /* \"conduit/Conduit.sol\":9659:9681  _performERC721Transfer */\n      tag_87\n        /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n      jump\t// in\n    tag_83:\n        /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n      jump(tag_88)\n    tag_81:\n        /* \"conduit/Conduit.sol\":9846:9869  ConduitItemType.ERC1155 */\n      0x03\n        /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_90\n      tag_63\n      jump\t// in\n    tag_90:\n    tag_89:\n        /* \"conduit/Conduit.sol\":9829:9833  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9829:9842  item.itemType */\n      0x00\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n        /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_92\n      jumpi\n      tag_93\n      tag_63\n      jump\t// in\n    tag_93:\n    tag_92:\n      sub\n        /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n      tag_94\n      jumpi\n        /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n      tag_95\n        /* \"conduit/Conduit.sol\":9965:9969  item */\n      dup2\n        /* \"conduit/Conduit.sol\":9965:9975  item.token */\n      0x20\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_96:\n        /* \"conduit/Conduit.sol\":9993:9997  item */\n      dup3\n        /* \"conduit/Conduit.sol\":9993:10002  item.from */\n      0x40\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_97:\n        /* \"conduit/Conduit.sol\":10020:10024  item */\n      dup4\n        /* \"conduit/Conduit.sol\":10020:10027  item.to */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_98:\n        /* \"conduit/Conduit.sol\":10045:10049  item */\n      dup5\n        /* \"conduit/Conduit.sol\":10045:10060  item.identifier */\n      0x80\n      add\n      calldataload\n        /* \"conduit/Conduit.sol\":10078:10082  item */\n      dup6\n        /* \"conduit/Conduit.sol\":10078:10089  item.amount */\n      0xa0\n      add\n      calldataload\n        /* \"conduit/Conduit.sol\":9924:9947  _performERC1155Transfer */\n      tag_99\n        /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n      jump\t// in\n    tag_95:\n        /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n      jump(tag_100)\n    tag_94:\n        /* \"conduit/Conduit.sol\":10177:10194  InvalidItemType() */\n      mload(0x40)\n      0x7932f1fc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n    tag_100:\n        /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n    tag_88:\n        /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n    tag_75:\n        /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n    tag_48:\n        /* \"lib/TokenTransferrer.sol\":23926:23947  batchTransfers.length */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":24213:24234  batchTransfers.offset */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":24493:24511  nextElementHeadPtr */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":24763:24802  ERC1155_safeBatchTransferFrom_signature */\n      0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":24709:24745  ConduitBatch1155Transfer_from_offset */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":24685:24816  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":24910:24911  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n    tag_102:\n        /* \"lib/TokenTransferrer.sol\":24932:24935  len */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":24929:24930  i */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":24926:24936  lt(i, len) */\n      lt\n        /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":25311:25329  nextElementHeadPtr */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":25298:25330  calldataload(nextElementHeadPtr) */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":25264:25276  arrayHeadPtr */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":25239:25348  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":25445:25455  elementPtr */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":25432:25456  calldataload(elementPtr) */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":25549:25554  token */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":25537:25555  extcodesize(token) */\n      extcodesize\n        /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n      tag_105\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":25612:25638  NoContract_error_signature */\n      0x5f15d67200000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":25586:25610  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":25579:25639  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":25695:25700  token */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":25667:25693  NoContract_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":25660:25701  mstore(NoContract_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":25755:25778  NoContract_error_length */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":25729:25753  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":25722:25779  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n    tag_105:\n        /* \"lib/TokenTransferrer.sol\":25939:25981  ConduitBatch1155Transfer_ids_length_offset */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":25927:25937  elementPtr */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":25923:25982  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n      add\n        /* \"lib/TokenTransferrer.sol\":25889:26000  calldataload(... */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":26231:26238  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":26220:26229  idsLength */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":26216:26239  mul(idsLength, OneWord) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":26144:26194  ConduitBatch1155Transfer_amounts_length_baseOffset */\n      0xc0\n        /* \"lib/TokenTransferrer.sol\":26119:26257  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":27544:27565  expectedAmountsOffset */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":27398:27438  ConduitBatchTransfer_amounts_head_offset */\n      0x80\n        /* \"lib/TokenTransferrer.sol\":27346:27356  elementPtr */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":27301:27476  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":27251:27510  calldataload(... */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":27215:27595  eq(... */\n      eq\n        /* \"lib/TokenTransferrer.sol\":27043:27085  ConduitBatch1155Transfer_ids_length_offset */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":26897:26937  ConduitBatch1155Transfer_ids_head_offset */\n      0x60\n        /* \"lib/TokenTransferrer.sol\":26845:26855  elementPtr */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":26800:26975  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":26750:27009  calldataload(... */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":26714:27115  eq(... */\n      eq\n        /* \"lib/TokenTransferrer.sol\":26631:27621  and(... */\n      and\n        /* \"lib/TokenTransferrer.sol\":26556:26577  expectedAmountsOffset */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":26544:26554  elementPtr */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":26540:26578  add(elementPtr, expectedAmountsOffset) */\n      add\n        /* \"lib/TokenTransferrer.sol\":26527:26579  calldataload(add(elementPtr, expectedAmountsOffset)) */\n      calldataload\n        /* \"lib/TokenTransferrer.sol\":26488:26497  idsLength */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":26456:26605  eq(... */\n      eq\n        /* \"lib/TokenTransferrer.sol\":26371:27643  and(... */\n      and\n        /* \"lib/TokenTransferrer.sol\":26343:27661  iszero(... */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":27752:27767  invalidEncoding */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":27884:27925  Invalid1155BatchTransferEncoding_selector */\n      0xeba2084c00000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":27822:27858  Invalid1155BatchTransferEncoding_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":27790:27947  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":28062:28101  Invalid1155BatchTransferEncoding_length */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":28000:28036  Invalid1155BatchTransferEncoding_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":27968:28123  revert(... */\n      revert\n        /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n    tag_106:\n        /* \"lib/TokenTransferrer.sol\":28269:28276  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":28249:28267  nextElementHeadPtr */\n      dup9\n        /* \"lib/TokenTransferrer.sol\":28245:28277  add(nextElementHeadPtr, OneWord) */\n      add\n        /* \"lib/TokenTransferrer.sol\":28223:28277  nextElementHeadPtr := add(nextElementHeadPtr, OneWord) */\n      swap8\n      pop\n        /* \"lib/TokenTransferrer.sol\":28532:28573  ConduitBatch1155Transfer_usable_head_size */\n      0x80\n        /* \"lib/TokenTransferrer.sol\":28473:28509  ConduitBatch1155Transfer_from_offset */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":28461:28471  elementPtr */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":28457:28510  add(elementPtr, ConduitBatch1155Transfer_from_offset) */\n      add\n        /* \"lib/TokenTransferrer.sol\":28408:28435  BatchTransfer1155Params_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":28374:28591  calldatacopy(... */\n      calldatacopy\n        /* \"lib/TokenTransferrer.sol\":28820:28828  TwoWords */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":28809:28818  idsLength */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":28805:28829  mul(idsLength, TwoWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":28795:28803  TwoWords */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":28791:28830  add(TwoWords, mul(idsLength, TwoWords)) */\n      add\n        /* \"lib/TokenTransferrer.sol\":29098:29115  idsAndAmountsSize */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":29031:29072  BatchTransfer1155Params_ids_length_offset */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":29002:29137  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":28943:28980  BatchTransfer1155Params_data_head_ptr */\n      0xa4\n        /* \"lib/TokenTransferrer.sol\":28915:29155  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":29431:29432  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":29370:29387  idsAndAmountsSize */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":29301:29344  BatchTransfer1155Params_data_length_basePtr */\n      0xc4\n        /* \"lib/TokenTransferrer.sol\":29272:29409  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":29244:29450  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":29659:29676  idsAndAmountsSize */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":29596:29637  BatchTransfer1155Params_calldata_baseSize */\n      0xc4\n        /* \"lib/TokenTransferrer.sol\":29571:29694  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":29966:29983  idsAndAmountsSize */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":29901:29943  ConduitBatch1155Transfer_ids_length_offset */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":29889:29899  elementPtr */\n      dup9\n        /* \"lib/TokenTransferrer.sol\":29885:29944  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n      add\n        /* \"lib/TokenTransferrer.sol\":29825:29863  BatchTransfer1155Params_ids_length_ptr */\n      0xc4\n        /* \"lib/TokenTransferrer.sol\":29791:30001  calldatacopy(... */\n      calldatacopy\n        /* \"lib/TokenTransferrer.sol\":30379:30380  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":30356:30357  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":30279:30295  transferDataSize */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":30198:30234  ConduitBatch1155Transfer_from_offset */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":30175:30176  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":30148:30153  token */\n      dup11\n        /* \"lib/TokenTransferrer.sol\":30121:30126  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":30095:30398  call(... */\n      call\n        /* \"lib/TokenTransferrer.sol\":30471:30478  success */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n      tag_107\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":30634:30650  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":31106:31113  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":31062:31075  AlmostOneWord */\n      0x1f\n        /* \"lib/TokenTransferrer.sol\":31044:31060  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":31040:31076  add(returndatasize(), AlmostOneWord) */\n      add\n        /* \"lib/TokenTransferrer.sol\":31007:31139  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":31800:31807  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":31782:31798  transferDataSize */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":31778:31808  div(transferDataSize, OneWord) */\n      div\n        /* \"lib/TokenTransferrer.sol\":31936:31951  returnDataWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":31923:31934  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":31919:31952  mul(CostPerWord, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":32073:32083  msizeWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":32056:32071  returnDataWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":32053:32084  gt(returnDataWords, msizeWords) */\n      gt\n        /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n      iszero\n      tag_109\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":32875:32901  MemoryExpansionCoefficient */\n      0x0200\n        /* \"lib/TokenTransferrer.sol\":32780:32790  msizeWords */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":32768:32778  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":32764:32791  mul(msizeWords, msizeWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":32657:32672  returnDataWords */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":32592:32607  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":32539:32718  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":32490:32833  sub(... */\n      sub\n        /* \"lib/TokenTransferrer.sol\":32445:32939  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":32358:32369  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":32305:32315  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":32288:32303  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":32284:32316  sub(returnDataWords, msizeWords) */\n      sub\n        /* \"lib/TokenTransferrer.sol\":32239:32407  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":32198:32973  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":32160:32164  cost */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":32123:33003  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":32115:33003  cost := add(... */\n      swap1\n      pop\n        /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n    tag_109:\n        /* \"lib/TokenTransferrer.sol\":33289:33294  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":33272:33286  ExtraGasBuffer */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":33266:33270  cost */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":33262:33287  add(cost, ExtraGasBuffer) */\n      add\n        /* \"lib/TokenTransferrer.sol\":33259:33295  lt(add(cost, ExtraGasBuffer), gas()) */\n      lt\n        /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":33425:33441  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":33422:33423  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":33419:33420  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":33404:33442  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"lib/TokenTransferrer.sol\":33562:33578  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":33559:33560  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":33552:33579  revert(0, returndatasize()) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n    tag_110:\n        /* \"lib/TokenTransferrer.sol\":30651:33627  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n    tag_108:\n        /* \"lib/TokenTransferrer.sol\":33756:33806  ERC1155BatchTransferGenericFailure_error_signature */\n      0xafc445e200000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":33729:33730  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":33697:33828  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":33943:33948  token */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":33897:33941  ERC1155BatchTransferGenericFailure_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":33890:33949  mstore(ERC1155BatchTransferGenericFailure_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":34122:34167  ERC1155BatchTransferGenericFailure_ids_offset */\n      0xc0\n        /* \"lib/TokenTransferrer.sol\":34060:34096  BatchTransfer1155Params_ids_head_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":34028:34189  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":34446:34486  BatchTransfer1155Params_amounts_head_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":34440:34487  mload(BatchTransfer1155Params_amounts_head_ptr) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":34403:34410  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":34370:34513  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":34304:34344  BatchTransfer1155Params_amounts_head_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":34272:34535  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":34726:34742  transferDataSize */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":34723:34724  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":34716:34743  revert(0, transferDataSize) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n    tag_107:\n        /* \"lib/TokenTransferrer.sol\":24984:34775  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":24967:24968  1 */\n      0x01\n        /* \"lib/TokenTransferrer.sol\":24964:24965  i */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":24960:24969  add(i, 1) */\n      add\n        /* \"lib/TokenTransferrer.sol\":24955:24969  i := add(i, 1) */\n      swap1\n      pop\n        /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n      jump(tag_102)\n    tag_104:\n        /* \"lib/TokenTransferrer.sol\":24883:24925  {... */\n      pop\n        /* \"lib/TokenTransferrer.sol\":35139:35163  DefaultFreeMemoryPointer */\n      0x80\n        /* \"lib/TokenTransferrer.sol\":35116:35137  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":35109:35164  mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":23901:35174  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n    tag_74:\n        /* \"lib/TokenTransferrer.sol\":1771:1792  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":1765:1793  mload(FreeMemoryPointerSlot) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":1919:1947  ERC20_transferFrom_signature */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":1891:1917  ERC20_transferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":1884:1948  mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":1997:2001  from */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":1968:1995  ERC20_transferFrom_from_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":1961:2002  mstore(ERC20_transferFrom_from_ptr, from) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":2049:2051  to */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":2022:2047  ERC20_transferFrom_to_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":2015:2052  mstore(ERC20_transferFrom_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":2103:2109  amount */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":2072:2101  ERC20_transferFrom_amount_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":2065:2110  mstore(ERC20_transferFrom_amount_ptr, amount) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":2797:2804  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":2778:2779  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":2735:2760  ERC20_transferFrom_length */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":2691:2717  ERC20_transferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":2672:2673  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":2649:2654  token */\n      dup10\n        /* \"lib/TokenTransferrer.sol\":2626:2631  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":2604:2818  call(... */\n      call\n        /* \"lib/TokenTransferrer.sol\":3295:3305  callStatus */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":3242:3258  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":3235:3259  iszero(returndatasize()) */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":3209:3211  31 */\n      0x1f\n        /* \"lib/TokenTransferrer.sol\":3191:3207  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":3188:3212  gt(returndatasize(), 31) */\n      gt\n        /* \"lib/TokenTransferrer.sol\":3184:3185  1 */\n      0x01\n        /* \"lib/TokenTransferrer.sol\":3180:3181  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":3174:3182  mload(0) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":3171:3186  eq(mload(0), 1) */\n      eq\n        /* \"lib/TokenTransferrer.sol\":3167:3213  and(eq(mload(0), 1), gt(returndatasize(), 31)) */\n      and\n        /* \"lib/TokenTransferrer.sol\":3143:3277  or(... */\n      or\n        /* \"lib/TokenTransferrer.sol\":2927:3319  and(... */\n      and\n        /* \"lib/TokenTransferrer.sol\":3680:3696  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":3673:3697  iszero(returndatasize()) */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":3666:3698  iszero(iszero(returndatasize())) */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":3657:3664  success */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":3653:3699  and(success, iszero(iszero(returndatasize()))) */\n      and\n        /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n      tag_112\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":4001:4008  success */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":3991:3996  token */\n      dup8\n        /* \"lib/TokenTransferrer.sol\":3979:3997  extcodesize(token) */\n      extcodesize\n        /* \"lib/TokenTransferrer.sol\":3972:3998  iszero(extcodesize(token)) */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":3965:3999  iszero(iszero(extcodesize(token))) */\n      iszero\n        /* \"lib/TokenTransferrer.sol\":3961:4009  and(iszero(iszero(extcodesize(token))), success) */\n      and\n        /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n      tag_113\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":4090:4097  success */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n      tag_114\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":4189:4199  callStatus */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n      tag_115\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":4379:4395  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":4946:4953  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":4894:4907  AlmostOneWord */\n      0x1f\n        /* \"lib/TokenTransferrer.sol\":4876:4892  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":4872:4908  add(returndatasize(), AlmostOneWord) */\n      add\n        /* \"lib/TokenTransferrer.sol\":4831:4987  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":5352:5359  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":5340:5350  memPointer */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":5336:5360  div(memPointer, OneWord) */\n      div\n        /* \"lib/TokenTransferrer.sol\":5504:5519  returnDataWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":5491:5502  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":5487:5520  mul(CostPerWord, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":5657:5667  msizeWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":5640:5655  returnDataWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":5637:5668  gt(returnDataWords, msizeWords) */\n      gt\n        /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":6741:6767  MemoryExpansionCoefficient */\n      0x0200\n        /* \"lib/TokenTransferrer.sol\":6630:6640  msizeWords */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":6618:6628  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":6614:6641  mul(msizeWords, msizeWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":6491:6506  returnDataWords */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":6418:6433  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":6357:6560  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":6300:6691  sub(... */\n      sub\n        /* \"lib/TokenTransferrer.sol\":6247:6813  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":6144:6155  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":6034:6044  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":5965:5980  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":5908:6094  sub(... */\n      sub\n        /* \"lib/TokenTransferrer.sol\":5855:6201  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":5806:6855  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":5760:5764  cost */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":5715:6893  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":5707:6893  cost := add(... */\n      swap1\n      pop\n        /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n    tag_117:\n        /* \"lib/TokenTransferrer.sol\":7219:7224  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":7202:7216  ExtraGasBuffer */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":7196:7200  cost */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":7192:7217  add(cost, ExtraGasBuffer) */\n      add\n        /* \"lib/TokenTransferrer.sol\":7189:7225  lt(add(cost, ExtraGasBuffer), gas()) */\n      lt\n        /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":7417:7433  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":7414:7415  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":7411:7412  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":7396:7434  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"lib/TokenTransferrer.sol\":7617:7633  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":7614:7615  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":7607:7634  revert(0, returndatasize()) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n    tag_118:\n        /* \"lib/TokenTransferrer.sol\":4396:7698  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n    tag_116:\n        /* \"lib/TokenTransferrer.sol\":7921:7964  TokenTransferGenericFailure_error_signature */\n      0xf486bc8700000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":7846:7887  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":7806:7994  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8140:8145  token */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":8063:8106  TokenTransferGenericFailure_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":8023:8175  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8320:8324  from */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":8244:8286  TokenTransferGenericFailure_error_from_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":8204:8354  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8432:8434  to */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":8390:8430  TokenTransferGenericFailure_error_to_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":8383:8435  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8513:8514  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":8471:8511  TokenTransferGenericFailure_error_id_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":8464:8515  mstore(TokenTransferGenericFailure_error_id_ptr, 0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8662:8668  amount */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":8584:8628  TokenTransferGenericFailure_error_amount_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":8544:8698  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":8842:8882  TokenTransferGenericFailure_error_length */\n      0xa4\n        /* \"lib/TokenTransferrer.sol\":8767:8808  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":8727:8912  revert(... */\n      revert\n        /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n    tag_115:\n        /* \"lib/TokenTransferrer.sol\":9227:9276  BadReturnValueFromERC20OnTransfer_error_signature */\n      0x9889192300000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":9150:9197  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":9114:9302  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":9442:9447  token */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":9363:9412  BadReturnValueFromERC20OnTransfer_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":9327:9473  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":9612:9616  from */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":9534:9582  BadReturnValueFromERC20OnTransfer_error_from_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":9498:9642  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":9779:9781  to */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":9703:9749  BadReturnValueFromERC20OnTransfer_error_to_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":9667:9807  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":9948:9954  amount */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":9868:9918  BadReturnValueFromERC20OnTransfer_error_amount_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":9832:9980  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":10118:10164  BadReturnValueFromERC20OnTransfer_error_length */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":10041:10088  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":10005:10190  revert(... */\n      revert\n        /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n    tag_114:\n        /* \"lib/TokenTransferrer.sol\":10348:10374  NoContract_error_signature */\n      0x5f15d67200000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":10322:10346  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":10315:10375  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":10431:10436  token */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":10403:10429  NoContract_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":10396:10437  mstore(NoContract_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":10491:10514  NoContract_error_length */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":10465:10489  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":10458:10515  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n    tag_113:\n        /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n    tag_112:\n        /* \"lib/TokenTransferrer.sol\":10854:10864  memPointer */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":10831:10852  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":10824:10865  mstore(FreeMemoryPointerSlot, memPointer) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":10942:10943  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":10932:10940  ZeroSlot */\n      0x60\n        /* \"lib/TokenTransferrer.sol\":10925:10944  mstore(ZeroSlot, 0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":1573:10954  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n    tag_87:\n        /* \"lib/TokenTransferrer.sol\":11883:11888  token */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":11871:11889  extcodesize(token) */\n      extcodesize\n        /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n      tag_120\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":11942:11968  NoContract_error_signature */\n      0x5f15d67200000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":11916:11940  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":11909:11969  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12021:12026  token */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":11993:12019  NoContract_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":11986:12027  mstore(NoContract_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12077:12100  NoContract_error_length */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":12051:12075  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":12044:12101  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n    tag_120:\n        /* \"lib/TokenTransferrer.sol\":12313:12334  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":12307:12335  mload(FreeMemoryPointerSlot) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":12459:12488  ERC721_transferFrom_signature */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":12430:12457  ERC721_transferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":12423:12489  mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12539:12543  from */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":12509:12537  ERC721_transferFrom_from_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":12502:12544  mstore(ERC721_transferFrom_from_ptr, from) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12592:12594  to */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":12564:12590  ERC721_transferFrom_to_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":12557:12595  mstore(ERC721_transferFrom_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12643:12653  identifier */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":12615:12641  ERC721_transferFrom_id_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":12608:12654  mstore(ERC721_transferFrom_id_ptr, identifier) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":12933:12934  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":12914:12915  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":12870:12896  ERC721_transferFrom_length */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":12825:12852  ERC721_transferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":12806:12807  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":12783:12788  token */\n      dup10\n        /* \"lib/TokenTransferrer.sol\":12760:12765  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":12738:12948  call(... */\n      call\n        /* \"lib/TokenTransferrer.sol\":13013:13020  success */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n      tag_121\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":13164:13180  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":13606:13613  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":13566:13579  AlmostOneWord */\n      0x1f\n        /* \"lib/TokenTransferrer.sol\":13548:13564  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":13544:13580  add(returndatasize(), AlmostOneWord) */\n      add\n        /* \"lib/TokenTransferrer.sol\":13515:13635  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":13917:13924  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":13905:13915  memPointer */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":13901:13925  div(memPointer, OneWord) */\n      div\n        /* \"lib/TokenTransferrer.sol\":14045:14060  returnDataWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":14032:14043  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":14028:14061  mul(CostPerWord, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":14174:14184  msizeWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":14157:14172  returnDataWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":14154:14185  gt(returnDataWords, msizeWords) */\n      gt\n        /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":14782:14808  MemoryExpansionCoefficient */\n      0x0200\n        /* \"lib/TokenTransferrer.sol\":14695:14705  msizeWords */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":14683:14693  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":14679:14706  mul(msizeWords, msizeWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":14621:14636  returnDataWords */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":14604:14619  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":14600:14637  mul(returnDataWords, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":14555:14744  sub(... */\n      sub\n        /* \"lib/TokenTransferrer.sol\":14514:14842  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":14435:14446  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":14386:14396  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":14369:14384  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":14365:14397  sub(returnDataWords, msizeWords) */\n      sub\n        /* \"lib/TokenTransferrer.sol\":14324:14480  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":14287:14872  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":14253:14257  cost */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":14220:14898  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":14212:14898  cost := add(... */\n      swap1\n      pop\n        /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n    tag_123:\n        /* \"lib/TokenTransferrer.sol\":15164:15169  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":15147:15161  ExtraGasBuffer */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":15141:15145  cost */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":15137:15162  add(cost, ExtraGasBuffer) */\n      add\n        /* \"lib/TokenTransferrer.sol\":15134:15170  lt(add(cost, ExtraGasBuffer), gas()) */\n      lt\n        /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":15299:15315  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":15296:15297  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":15293:15294  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":15278:15316  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"lib/TokenTransferrer.sol\":15432:15448  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":15429:15430  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":15422:15449  revert(0, returndatasize()) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n    tag_124:\n        /* \"lib/TokenTransferrer.sol\":13181:15489  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n    tag_122:\n        /* \"lib/TokenTransferrer.sol\":15664:15707  TokenTransferGenericFailure_error_signature */\n      0xf486bc8700000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":15601:15642  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":15573:15725  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":15794:15799  token */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":15749:15792  TokenTransferGenericFailure_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":15742:15800  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":15868:15872  from */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":15824:15866  TokenTransferGenericFailure_error_from_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":15817:15873  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":15939:15941  to */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":15897:15937  TokenTransferGenericFailure_error_to_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":15890:15942  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":16008:16018  identifier */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":15966:16006  TokenTransferGenericFailure_error_id_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":15959:16019  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":16089:16090  1 */\n      0x01\n        /* \"lib/TokenTransferrer.sol\":16043:16087  TokenTransferGenericFailure_error_amount_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":16036:16091  mstore(TokenTransferGenericFailure_error_amount_ptr, 1) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":16199:16239  TokenTransferGenericFailure_error_length */\n      0xa4\n        /* \"lib/TokenTransferrer.sol\":16136:16177  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":16108:16257  revert(... */\n      revert\n        /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n    tag_121:\n        /* \"lib/TokenTransferrer.sol\":16372:16382  memPointer */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":16349:16370  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":16342:16383  mstore(FreeMemoryPointerSlot, memPointer) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":16460:16461  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":16450:16458  ZeroSlot */\n      0x60\n        /* \"lib/TokenTransferrer.sol\":16443:16462  mstore(ZeroSlot, 0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":11798:16472  {... */\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n    tag_99:\n        /* \"lib/TokenTransferrer.sol\":17471:17476  token */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":17459:17477  extcodesize(token) */\n      extcodesize\n        /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n      tag_126\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":17530:17556  NoContract_error_signature */\n      0x5f15d67200000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":17504:17528  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":17497:17557  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":17609:17614  token */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":17581:17607  NoContract_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":17574:17615  mstore(NoContract_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":17665:17688  NoContract_error_length */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":17639:17663  NoContract_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":17632:17689  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n    tag_126:\n        /* \"lib/TokenTransferrer.sol\":17895:17916  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":17889:17917  mload(FreeMemoryPointerSlot) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":17952:17960  Slot0x80 */\n      0x80\n        /* \"lib/TokenTransferrer.sol\":17946:17961  mload(Slot0x80) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":17996:18004  Slot0xA0 */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":17990:18005  mload(Slot0xA0) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":18040:18048  Slot0xC0 */\n      0xc0\n        /* \"lib/TokenTransferrer.sol\":18034:18049  mload(Slot0xC0) */\n      mload\n        /* \"lib/TokenTransferrer.sol\":18215:18249  ERC1155_safeTransferFrom_signature */\n      0xf242432a00000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":18165:18197  ERC1155_safeTransferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":18141:18263  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18318:18322  from */\n      dup8\n        /* \"lib/TokenTransferrer.sol\":18283:18316  ERC1155_safeTransferFrom_from_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":18276:18323  mstore(ERC1155_safeTransferFrom_from_ptr, from) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18376:18378  to */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":18343:18374  ERC1155_safeTransferFrom_to_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":18336:18379  mstore(ERC1155_safeTransferFrom_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18432:18442  identifier */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":18399:18430  ERC1155_safeTransferFrom_id_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":18392:18443  mstore(ERC1155_safeTransferFrom_id_ptr, identifier) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18500:18506  amount */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":18463:18498  ERC1155_safeTransferFrom_amount_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":18456:18507  mstore(ERC1155_safeTransferFrom_amount_ptr, amount) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18602:18645  ERC1155_safeTransferFrom_data_length_offset */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":18544:18584  ERC1155_safeTransferFrom_data_offset_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":18520:18659  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":18721:18722  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":18679:18719  ERC1155_safeTransferFrom_data_length_ptr */\n      0xa4\n        /* \"lib/TokenTransferrer.sol\":18672:18723  mstore(ERC1155_safeTransferFrom_data_length_ptr, 0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":19012:19013  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":18993:18994  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":18944:18975  ERC1155_safeTransferFrom_length */\n      0xc4\n        /* \"lib/TokenTransferrer.sol\":18894:18926  ERC1155_safeTransferFrom_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":18875:18876  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":18852:18857  token */\n      dup14\n        /* \"lib/TokenTransferrer.sol\":18829:18834  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":18807:19027  call(... */\n      call\n        /* \"lib/TokenTransferrer.sol\":19092:19099  success */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n      tag_127\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":19243:19259  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":19685:19692  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":19645:19658  AlmostOneWord */\n      0x1f\n        /* \"lib/TokenTransferrer.sol\":19627:19643  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":19623:19659  add(returndatasize(), AlmostOneWord) */\n      add\n        /* \"lib/TokenTransferrer.sol\":19594:19714  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":19996:20003  OneWord */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":19984:19994  memPointer */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":19980:20004  div(memPointer, OneWord) */\n      div\n        /* \"lib/TokenTransferrer.sol\":20124:20139  returnDataWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":20111:20122  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":20107:20140  mul(CostPerWord, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":20253:20263  msizeWords */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":20236:20251  returnDataWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":20233:20264  gt(returnDataWords, msizeWords) */\n      gt\n        /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":20861:20887  MemoryExpansionCoefficient */\n      0x0200\n        /* \"lib/TokenTransferrer.sol\":20774:20784  msizeWords */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":20762:20772  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":20758:20785  mul(msizeWords, msizeWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":20700:20715  returnDataWords */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":20683:20698  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":20679:20716  mul(returnDataWords, returnDataWords) */\n      mul\n        /* \"lib/TokenTransferrer.sol\":20634:20823  sub(... */\n      sub\n        /* \"lib/TokenTransferrer.sol\":20593:20921  div(... */\n      div\n        /* \"lib/TokenTransferrer.sol\":20514:20525  CostPerWord */\n      0x03\n        /* \"lib/TokenTransferrer.sol\":20465:20475  msizeWords */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":20448:20463  returnDataWords */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":20444:20476  sub(returnDataWords, msizeWords) */\n      sub\n        /* \"lib/TokenTransferrer.sol\":20403:20559  mul(... */\n      mul\n        /* \"lib/TokenTransferrer.sol\":20366:20951  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":20332:20336  cost */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":20299:20977  add(... */\n      add\n        /* \"lib/TokenTransferrer.sol\":20291:20977  cost := add(... */\n      swap1\n      pop\n        /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n    tag_129:\n        /* \"lib/TokenTransferrer.sol\":21243:21248  gas() */\n      gas\n        /* \"lib/TokenTransferrer.sol\":21226:21240  ExtraGasBuffer */\n      0x20\n        /* \"lib/TokenTransferrer.sol\":21220:21224  cost */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":21216:21241  add(cost, ExtraGasBuffer) */\n      add\n        /* \"lib/TokenTransferrer.sol\":21213:21249  lt(add(cost, ExtraGasBuffer), gas()) */\n      lt\n        /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"lib/TokenTransferrer.sol\":21378:21394  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":21375:21376  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":21372:21373  0 */\n      dup1\n        /* \"lib/TokenTransferrer.sol\":21357:21395  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"lib/TokenTransferrer.sol\":21511:21527  returndatasize() */\n      returndatasize\n        /* \"lib/TokenTransferrer.sol\":21508:21509  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":21501:21528  revert(0, returndatasize()) */\n      revert\n        /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n    tag_130:\n        /* \"lib/TokenTransferrer.sol\":19260:21568  {... */\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n    tag_128:\n        /* \"lib/TokenTransferrer.sol\":21743:21786  TokenTransferGenericFailure_error_signature */\n      0xf486bc8700000000000000000000000000000000000000000000000000000000\n        /* \"lib/TokenTransferrer.sol\":21680:21721  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":21652:21804  mstore(... */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":21873:21878  token */\n      dup10\n        /* \"lib/TokenTransferrer.sol\":21828:21871  TokenTransferGenericFailure_error_token_ptr */\n      0x04\n        /* \"lib/TokenTransferrer.sol\":21821:21879  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":21947:21951  from */\n      dup9\n        /* \"lib/TokenTransferrer.sol\":21903:21945  TokenTransferGenericFailure_error_from_ptr */\n      0x24\n        /* \"lib/TokenTransferrer.sol\":21896:21952  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22018:22020  to */\n      dup8\n        /* \"lib/TokenTransferrer.sol\":21976:22016  TokenTransferGenericFailure_error_to_ptr */\n      0x44\n        /* \"lib/TokenTransferrer.sol\":21969:22021  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22087:22097  identifier */\n      dup7\n        /* \"lib/TokenTransferrer.sol\":22045:22085  TokenTransferGenericFailure_error_id_ptr */\n      0x64\n        /* \"lib/TokenTransferrer.sol\":22038:22098  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22168:22174  amount */\n      dup6\n        /* \"lib/TokenTransferrer.sol\":22122:22166  TokenTransferGenericFailure_error_amount_ptr */\n      0x84\n        /* \"lib/TokenTransferrer.sol\":22115:22175  mstore(TokenTransferGenericFailure_error_amount_ptr, amount) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22283:22323  TokenTransferGenericFailure_error_length */\n      0xa4\n        /* \"lib/TokenTransferrer.sol\":22220:22261  TokenTransferGenericFailure_error_sig_ptr */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":22192:22341  revert(... */\n      revert\n        /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n    tag_127:\n        /* \"lib/TokenTransferrer.sol\":22386:22394  slot0x80 */\n      dup4\n        /* \"lib/TokenTransferrer.sol\":22376:22384  Slot0x80 */\n      0x80\n        /* \"lib/TokenTransferrer.sol\":22369:22395  mstore(Slot0x80, slot0x80) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22447:22455  slot0xA0 */\n      dup3\n        /* \"lib/TokenTransferrer.sol\":22437:22445  Slot0xA0 */\n      0xa0\n        /* \"lib/TokenTransferrer.sol\":22430:22456  mstore(Slot0xA0, slot0xA0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22508:22516  slot0xC0 */\n      dup2\n        /* \"lib/TokenTransferrer.sol\":22498:22506  Slot0xC0 */\n      0xc0\n        /* \"lib/TokenTransferrer.sol\":22491:22517  mstore(Slot0xC0, slot0xC0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22640:22650  memPointer */\n      dup5\n        /* \"lib/TokenTransferrer.sol\":22617:22638  FreeMemoryPointerSlot */\n      0x40\n        /* \"lib/TokenTransferrer.sol\":22610:22651  mstore(FreeMemoryPointerSlot, memPointer) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":22728:22729  0 */\n      0x00\n        /* \"lib/TokenTransferrer.sol\":22718:22726  ZeroSlot */\n      0x60\n        /* \"lib/TokenTransferrer.sol\":22711:22730  mstore(ZeroSlot, 0) */\n      mstore\n        /* \"lib/TokenTransferrer.sol\":17386:22740  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_132:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_133:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_134:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_135:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_136:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":735:1338   */\n    tag_137:\n        /* \"#utility.yul\":843:851   */\n      0x00\n        /* \"#utility.yul\":853:859   */\n      dup1\n        /* \"#utility.yul\":903:906   */\n      dup4\n        /* \"#utility.yul\":896:900   */\n      0x1f\n        /* \"#utility.yul\":888:894   */\n      dup5\n        /* \"#utility.yul\":884:901   */\n      add\n        /* \"#utility.yul\":880:907   */\n      slt\n        /* \"#utility.yul\":870:992   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":911:990   */\n      tag_161\n      tag_134\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":870:992   */\n    tag_160:\n        /* \"#utility.yul\":1024:1030   */\n      dup3\n        /* \"#utility.yul\":1011:1031   */\n      calldataload\n        /* \"#utility.yul\":1001:1031   */\n      swap1\n      pop\n        /* \"#utility.yul\":1054:1072   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1046:1052   */\n      dup2\n        /* \"#utility.yul\":1043:1073   */\n      gt\n        /* \"#utility.yul\":1040:1157   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1076:1155   */\n      tag_163\n      tag_135\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1040:1157   */\n    tag_162:\n        /* \"#utility.yul\":1190:1194   */\n      0x20\n        /* \"#utility.yul\":1182:1188   */\n      dup4\n        /* \"#utility.yul\":1178:1195   */\n      add\n        /* \"#utility.yul\":1166:1195   */\n      swap2\n      pop\n        /* \"#utility.yul\":1244:1247   */\n      dup4\n        /* \"#utility.yul\":1236:1240   */\n      0xc0\n        /* \"#utility.yul\":1228:1234   */\n      dup3\n        /* \"#utility.yul\":1224:1241   */\n      mul\n        /* \"#utility.yul\":1214:1222   */\n      dup4\n        /* \"#utility.yul\":1210:1242   */\n      add\n        /* \"#utility.yul\":1207:1248   */\n      gt\n        /* \"#utility.yul\":1204:1332   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1251:1330   */\n      tag_165\n      tag_136\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1204:1332   */\n    tag_164:\n        /* \"#utility.yul\":735:1338   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1344:1973   */\n    tag_9:\n        /* \"#utility.yul\":1465:1471   */\n      0x00\n        /* \"#utility.yul\":1473:1479   */\n      dup1\n        /* \"#utility.yul\":1522:1524   */\n      0x20\n        /* \"#utility.yul\":1510:1519   */\n      dup4\n        /* \"#utility.yul\":1501:1508   */\n      dup6\n        /* \"#utility.yul\":1497:1520   */\n      sub\n        /* \"#utility.yul\":1493:1525   */\n      slt\n        /* \"#utility.yul\":1490:1609   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1528:1607   */\n      tag_168\n      tag_132\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1490:1609   */\n    tag_167:\n        /* \"#utility.yul\":1676:1677   */\n      0x00\n        /* \"#utility.yul\":1665:1674   */\n      dup4\n        /* \"#utility.yul\":1661:1678   */\n      add\n        /* \"#utility.yul\":1648:1679   */\n      calldataload\n        /* \"#utility.yul\":1706:1724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1698:1704   */\n      dup2\n        /* \"#utility.yul\":1695:1725   */\n      gt\n        /* \"#utility.yul\":1692:1809   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1728:1807   */\n      tag_170\n      tag_133\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1692:1809   */\n    tag_169:\n        /* \"#utility.yul\":1841:1956   */\n      tag_171\n        /* \"#utility.yul\":1948:1955   */\n      dup6\n        /* \"#utility.yul\":1939:1945   */\n      dup3\n        /* \"#utility.yul\":1928:1937   */\n      dup7\n        /* \"#utility.yul\":1924:1946   */\n      add\n        /* \"#utility.yul\":1841:1956   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1823:1956   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1619:1966   */\n      pop\n        /* \"#utility.yul\":1344:1973   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1979:2128   */\n    tag_138:\n        /* \"#utility.yul\":2015:2022   */\n      0x00\n        /* \"#utility.yul\":2055:2121   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2048:2053   */\n      dup3\n        /* \"#utility.yul\":2044:2122   */\n      and\n        /* \"#utility.yul\":2033:2122   */\n      swap1\n      pop\n        /* \"#utility.yul\":1979:2128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2134:2249   */\n    tag_139:\n        /* \"#utility.yul\":2219:2242   */\n      tag_174\n        /* \"#utility.yul\":2236:2241   */\n      dup2\n        /* \"#utility.yul\":2219:2242   */\n      tag_138\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2214:2217   */\n      dup3\n        /* \"#utility.yul\":2207:2243   */\n      mstore\n        /* \"#utility.yul\":2134:2249   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2255:2473   */\n    tag_12:\n        /* \"#utility.yul\":2346:2350   */\n      0x00\n        /* \"#utility.yul\":2384:2386   */\n      0x20\n        /* \"#utility.yul\":2373:2382   */\n      dup3\n        /* \"#utility.yul\":2369:2387   */\n      add\n        /* \"#utility.yul\":2361:2387   */\n      swap1\n      pop\n        /* \"#utility.yul\":2397:2466   */\n      tag_176\n        /* \"#utility.yul\":2463:2464   */\n      0x00\n        /* \"#utility.yul\":2452:2461   */\n      dup4\n        /* \"#utility.yul\":2448:2465   */\n      add\n        /* \"#utility.yul\":2439:2445   */\n      dup5\n        /* \"#utility.yul\":2397:2466   */\n      tag_139\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2255:2473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:3132   */\n    tag_140:\n        /* \"#utility.yul\":2637:2645   */\n      0x00\n        /* \"#utility.yul\":2647:2653   */\n      dup1\n        /* \"#utility.yul\":2697:2700   */\n      dup4\n        /* \"#utility.yul\":2690:2694   */\n      0x1f\n        /* \"#utility.yul\":2682:2688   */\n      dup5\n        /* \"#utility.yul\":2678:2695   */\n      add\n        /* \"#utility.yul\":2674:2701   */\n      slt\n        /* \"#utility.yul\":2664:2786   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2705:2784   */\n      tag_179\n      tag_134\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2664:2786   */\n    tag_178:\n        /* \"#utility.yul\":2818:2824   */\n      dup3\n        /* \"#utility.yul\":2805:2825   */\n      calldataload\n        /* \"#utility.yul\":2795:2825   */\n      swap1\n      pop\n        /* \"#utility.yul\":2848:2866   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2840:2846   */\n      dup2\n        /* \"#utility.yul\":2837:2867   */\n      gt\n        /* \"#utility.yul\":2834:2951   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":2870:2949   */\n      tag_181\n      tag_135\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2834:2951   */\n    tag_180:\n        /* \"#utility.yul\":2984:2988   */\n      0x20\n        /* \"#utility.yul\":2976:2982   */\n      dup4\n        /* \"#utility.yul\":2972:2989   */\n      add\n        /* \"#utility.yul\":2960:2989   */\n      swap2\n      pop\n        /* \"#utility.yul\":3038:3041   */\n      dup4\n        /* \"#utility.yul\":3030:3034   */\n      0x20\n        /* \"#utility.yul\":3022:3028   */\n      dup3\n        /* \"#utility.yul\":3018:3035   */\n      mul\n        /* \"#utility.yul\":3008:3016   */\n      dup4\n        /* \"#utility.yul\":3004:3036   */\n      add\n        /* \"#utility.yul\":3001:3042   */\n      gt\n        /* \"#utility.yul\":2998:3126   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":3045:3124   */\n      tag_183\n      tag_136\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2998:3126   */\n    tag_182:\n        /* \"#utility.yul\":2520:3132   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3138:4230   */\n    tag_15:\n        /* \"#utility.yul\":3339:3345   */\n      0x00\n        /* \"#utility.yul\":3347:3353   */\n      dup1\n        /* \"#utility.yul\":3355:3361   */\n      0x00\n        /* \"#utility.yul\":3363:3369   */\n      dup1\n        /* \"#utility.yul\":3412:3414   */\n      0x40\n        /* \"#utility.yul\":3400:3409   */\n      dup6\n        /* \"#utility.yul\":3391:3398   */\n      dup8\n        /* \"#utility.yul\":3387:3410   */\n      sub\n        /* \"#utility.yul\":3383:3415   */\n      slt\n        /* \"#utility.yul\":3380:3499   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":3418:3497   */\n      tag_186\n      tag_132\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":3380:3499   */\n    tag_185:\n        /* \"#utility.yul\":3566:3567   */\n      0x00\n        /* \"#utility.yul\":3555:3564   */\n      dup6\n        /* \"#utility.yul\":3551:3568   */\n      add\n        /* \"#utility.yul\":3538:3569   */\n      calldataload\n        /* \"#utility.yul\":3596:3614   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3588:3594   */\n      dup2\n        /* \"#utility.yul\":3585:3615   */\n      gt\n        /* \"#utility.yul\":3582:3699   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":3618:3697   */\n      tag_188\n      tag_133\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3582:3699   */\n    tag_187:\n        /* \"#utility.yul\":3731:3846   */\n      tag_189\n        /* \"#utility.yul\":3838:3845   */\n      dup8\n        /* \"#utility.yul\":3829:3835   */\n      dup3\n        /* \"#utility.yul\":3818:3827   */\n      dup9\n        /* \"#utility.yul\":3814:3836   */\n      add\n        /* \"#utility.yul\":3731:3846   */\n      tag_137\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3713:3846   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":3509:3856   */\n      pop\n        /* \"#utility.yul\":3923:3925   */\n      0x20\n        /* \"#utility.yul\":3912:3921   */\n      dup6\n        /* \"#utility.yul\":3908:3926   */\n      add\n        /* \"#utility.yul\":3895:3927   */\n      calldataload\n        /* \"#utility.yul\":3954:3972   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3946:3952   */\n      dup2\n        /* \"#utility.yul\":3943:3973   */\n      gt\n        /* \"#utility.yul\":3940:4057   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3976:4055   */\n      tag_191\n      tag_133\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3940:4057   */\n    tag_190:\n        /* \"#utility.yul\":4089:4213   */\n      tag_192\n        /* \"#utility.yul\":4205:4212   */\n      dup8\n        /* \"#utility.yul\":4196:4202   */\n      dup3\n        /* \"#utility.yul\":4185:4194   */\n      dup9\n        /* \"#utility.yul\":4181:4203   */\n      add\n        /* \"#utility.yul\":4089:4213   */\n      tag_140\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4071:4213   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3866:4223   */\n      pop\n        /* \"#utility.yul\":3138:4230   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4236:4883   */\n    tag_20:\n        /* \"#utility.yul\":4366:4372   */\n      0x00\n        /* \"#utility.yul\":4374:4380   */\n      dup1\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4411:4420   */\n      dup4\n        /* \"#utility.yul\":4402:4409   */\n      dup6\n        /* \"#utility.yul\":4398:4421   */\n      sub\n        /* \"#utility.yul\":4394:4426   */\n      slt\n        /* \"#utility.yul\":4391:4510   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":4429:4508   */\n      tag_195\n      tag_132\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4391:4510   */\n    tag_194:\n        /* \"#utility.yul\":4577:4578   */\n      0x00\n        /* \"#utility.yul\":4566:4575   */\n      dup4\n        /* \"#utility.yul\":4562:4579   */\n      add\n        /* \"#utility.yul\":4549:4580   */\n      calldataload\n        /* \"#utility.yul\":4607:4625   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4599:4605   */\n      dup2\n        /* \"#utility.yul\":4596:4626   */\n      gt\n        /* \"#utility.yul\":4593:4710   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":4629:4708   */\n      tag_197\n      tag_133\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4593:4710   */\n    tag_196:\n        /* \"#utility.yul\":4742:4866   */\n      tag_198\n        /* \"#utility.yul\":4858:4865   */\n      dup6\n        /* \"#utility.yul\":4849:4855   */\n      dup3\n        /* \"#utility.yul\":4838:4847   */\n      dup7\n        /* \"#utility.yul\":4834:4856   */\n      add\n        /* \"#utility.yul\":4742:4866   */\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4724:4866   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4520:4876   */\n      pop\n        /* \"#utility.yul\":4236:4883   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4889:5015   */\n    tag_141:\n        /* \"#utility.yul\":4926:4933   */\n      0x00\n        /* \"#utility.yul\":4966:5008   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4959:4964   */\n      dup3\n        /* \"#utility.yul\":4955:5009   */\n      and\n        /* \"#utility.yul\":4944:5009   */\n      swap1\n      pop\n        /* \"#utility.yul\":4889:5015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5117   */\n    tag_142:\n        /* \"#utility.yul\":5058:5065   */\n      0x00\n        /* \"#utility.yul\":5087:5111   */\n      tag_201\n        /* \"#utility.yul\":5105:5110   */\n      dup3\n        /* \"#utility.yul\":5087:5111   */\n      tag_141\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5076:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5123:5245   */\n    tag_143:\n        /* \"#utility.yul\":5196:5220   */\n      tag_203\n        /* \"#utility.yul\":5214:5219   */\n      dup2\n        /* \"#utility.yul\":5196:5220   */\n      tag_142\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5189:5194   */\n      dup2\n        /* \"#utility.yul\":5186:5221   */\n      eq\n        /* \"#utility.yul\":5176:5239   */\n      tag_204\n      jumpi\n        /* \"#utility.yul\":5235:5236   */\n      0x00\n        /* \"#utility.yul\":5232:5233   */\n      dup1\n        /* \"#utility.yul\":5225:5237   */\n      revert\n        /* \"#utility.yul\":5176:5239   */\n    tag_204:\n        /* \"#utility.yul\":5123:5245   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5251:5390   */\n    tag_144:\n        /* \"#utility.yul\":5297:5302   */\n      0x00\n        /* \"#utility.yul\":5335:5341   */\n      dup2\n        /* \"#utility.yul\":5322:5342   */\n      calldataload\n        /* \"#utility.yul\":5313:5342   */\n      swap1\n      pop\n        /* \"#utility.yul\":5351:5384   */\n      tag_206\n        /* \"#utility.yul\":5378:5383   */\n      dup2\n        /* \"#utility.yul\":5351:5384   */\n      tag_143\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5251:5390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5396:5486   */\n    tag_145:\n        /* \"#utility.yul\":5430:5437   */\n      0x00\n        /* \"#utility.yul\":5473:5478   */\n      dup2\n        /* \"#utility.yul\":5466:5479   */\n      iszero\n        /* \"#utility.yul\":5459:5480   */\n      iszero\n        /* \"#utility.yul\":5448:5480   */\n      swap1\n      pop\n        /* \"#utility.yul\":5396:5486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5492:5608   */\n    tag_146:\n        /* \"#utility.yul\":5562:5583   */\n      tag_209\n        /* \"#utility.yul\":5577:5582   */\n      dup2\n        /* \"#utility.yul\":5562:5583   */\n      tag_145\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5555:5560   */\n      dup2\n        /* \"#utility.yul\":5552:5584   */\n      eq\n        /* \"#utility.yul\":5542:5602   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":5598:5599   */\n      0x00\n        /* \"#utility.yul\":5595:5596   */\n      dup1\n        /* \"#utility.yul\":5588:5600   */\n      revert\n        /* \"#utility.yul\":5542:5602   */\n    tag_210:\n        /* \"#utility.yul\":5492:5608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5747   */\n    tag_147:\n        /* \"#utility.yul\":5657:5662   */\n      0x00\n        /* \"#utility.yul\":5695:5701   */\n      dup2\n        /* \"#utility.yul\":5682:5702   */\n      calldataload\n        /* \"#utility.yul\":5673:5702   */\n      swap1\n      pop\n        /* \"#utility.yul\":5711:5741   */\n      tag_212\n        /* \"#utility.yul\":5735:5740   */\n      dup2\n        /* \"#utility.yul\":5711:5741   */\n      tag_146\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5614:5747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5753:6221   */\n    tag_25:\n        /* \"#utility.yul\":5818:5824   */\n      0x00\n        /* \"#utility.yul\":5826:5832   */\n      dup1\n        /* \"#utility.yul\":5875:5877   */\n      0x40\n        /* \"#utility.yul\":5863:5872   */\n      dup4\n        /* \"#utility.yul\":5854:5861   */\n      dup6\n        /* \"#utility.yul\":5850:5873   */\n      sub\n        /* \"#utility.yul\":5846:5878   */\n      slt\n        /* \"#utility.yul\":5843:5962   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5881:5960   */\n      tag_215\n      tag_132\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5843:5962   */\n    tag_214:\n        /* \"#utility.yul\":6001:6002   */\n      0x00\n        /* \"#utility.yul\":6026:6079   */\n      tag_216\n        /* \"#utility.yul\":6071:6078   */\n      dup6\n        /* \"#utility.yul\":6062:6068   */\n      dup3\n        /* \"#utility.yul\":6051:6060   */\n      dup7\n        /* \"#utility.yul\":6047:6069   */\n      add\n        /* \"#utility.yul\":6026:6079   */\n      tag_144\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6016:6079   */\n      swap3\n      pop\n        /* \"#utility.yul\":5972:6089   */\n      pop\n        /* \"#utility.yul\":6128:6130   */\n      0x20\n        /* \"#utility.yul\":6154:6204   */\n      tag_217\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6154:6204   */\n      tag_147\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6144:6204   */\n      swap2\n      pop\n        /* \"#utility.yul\":6099:6214   */\n      pop\n        /* \"#utility.yul\":5753:6221   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6227:6407   */\n    tag_36:\n        /* \"#utility.yul\":6275:6352   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6272:6273   */\n      0x00\n        /* \"#utility.yul\":6265:6353   */\n      mstore\n        /* \"#utility.yul\":6372:6376   */\n      0x32\n        /* \"#utility.yul\":6369:6370   */\n      0x04\n        /* \"#utility.yul\":6362:6377   */\n      mstore\n        /* \"#utility.yul\":6396:6400   */\n      0x24\n        /* \"#utility.yul\":6393:6394   */\n      0x00\n        /* \"#utility.yul\":6386:6401   */\n      revert\n        /* \"#utility.yul\":6413:6531   */\n    tag_148:\n        /* \"#utility.yul\":6500:6524   */\n      tag_220\n        /* \"#utility.yul\":6518:6523   */\n      dup2\n        /* \"#utility.yul\":6500:6524   */\n      tag_142\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6495:6498   */\n      dup3\n        /* \"#utility.yul\":6488:6525   */\n      mstore\n        /* \"#utility.yul\":6413:6531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6537:6646   */\n    tag_149:\n        /* \"#utility.yul\":6618:6639   */\n      tag_222\n        /* \"#utility.yul\":6633:6638   */\n      dup2\n        /* \"#utility.yul\":6618:6639   */\n      tag_145\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6613:6616   */\n      dup3\n        /* \"#utility.yul\":6606:6640   */\n      mstore\n        /* \"#utility.yul\":6537:6646   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6652:6972   */\n    tag_57:\n        /* \"#utility.yul\":6767:6771   */\n      0x00\n        /* \"#utility.yul\":6805:6807   */\n      0x40\n        /* \"#utility.yul\":6794:6803   */\n      dup3\n        /* \"#utility.yul\":6790:6808   */\n      add\n        /* \"#utility.yul\":6782:6808   */\n      swap1\n      pop\n        /* \"#utility.yul\":6818:6889   */\n      tag_224\n        /* \"#utility.yul\":6886:6887   */\n      0x00\n        /* \"#utility.yul\":6875:6884   */\n      dup4\n        /* \"#utility.yul\":6871:6888   */\n      add\n        /* \"#utility.yul\":6862:6868   */\n      dup6\n        /* \"#utility.yul\":6818:6889   */\n      tag_148\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6899:6965   */\n      tag_225\n        /* \"#utility.yul\":6961:6963   */\n      0x20\n        /* \"#utility.yul\":6950:6959   */\n      dup4\n        /* \"#utility.yul\":6946:6964   */\n      add\n        /* \"#utility.yul\":6937:6943   */\n      dup5\n        /* \"#utility.yul\":6899:6965   */\n      tag_149\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6652:6972   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6978:7188   */\n    tag_59:\n        /* \"#utility.yul\":7065:7069   */\n      0x00\n        /* \"#utility.yul\":7103:7105   */\n      0x20\n        /* \"#utility.yul\":7092:7101   */\n      dup3\n        /* \"#utility.yul\":7088:7106   */\n      add\n        /* \"#utility.yul\":7080:7106   */\n      swap1\n      pop\n        /* \"#utility.yul\":7116:7181   */\n      tag_227\n        /* \"#utility.yul\":7178:7179   */\n      0x00\n        /* \"#utility.yul\":7167:7176   */\n      dup4\n        /* \"#utility.yul\":7163:7180   */\n      add\n        /* \"#utility.yul\":7154:7160   */\n      dup5\n        /* \"#utility.yul\":7116:7181   */\n      tag_149\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6978:7188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7194:7374   */\n    tag_63:\n        /* \"#utility.yul\":7242:7319   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7239:7240   */\n      0x00\n        /* \"#utility.yul\":7232:7320   */\n      mstore\n        /* \"#utility.yul\":7339:7343   */\n      0x21\n        /* \"#utility.yul\":7336:7337   */\n      0x04\n        /* \"#utility.yul\":7329:7344   */\n      mstore\n        /* \"#utility.yul\":7363:7367   */\n      0x24\n        /* \"#utility.yul\":7360:7361   */\n      0x00\n        /* \"#utility.yul\":7353:7368   */\n      revert\n        /* \"#utility.yul\":7380:7499   */\n    tag_150:\n        /* \"#utility.yul\":7473:7474   */\n      0x04\n        /* \"#utility.yul\":7466:7471   */\n      dup2\n        /* \"#utility.yul\":7463:7475   */\n      lt\n        /* \"#utility.yul\":7453:7493   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":7489:7490   */\n      0x00\n        /* \"#utility.yul\":7486:7487   */\n      dup1\n        /* \"#utility.yul\":7479:7491   */\n      revert\n        /* \"#utility.yul\":7453:7493   */\n    tag_230:\n        /* \"#utility.yul\":7380:7499   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7505:7684   */\n    tag_151:\n        /* \"#utility.yul\":7571:7576   */\n      0x00\n        /* \"#utility.yul\":7609:7615   */\n      dup2\n        /* \"#utility.yul\":7596:7616   */\n      calldataload\n        /* \"#utility.yul\":7587:7616   */\n      swap1\n      pop\n        /* \"#utility.yul\":7625:7678   */\n      tag_232\n        /* \"#utility.yul\":7672:7677   */\n      dup2\n        /* \"#utility.yul\":7625:7678   */\n      tag_150\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7505:7684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7690:8059   */\n    tag_65:\n        /* \"#utility.yul\":7769:7775   */\n      0x00\n        /* \"#utility.yul\":7818:7820   */\n      0x20\n        /* \"#utility.yul\":7806:7815   */\n      dup3\n        /* \"#utility.yul\":7797:7804   */\n      dup5\n        /* \"#utility.yul\":7793:7816   */\n      sub\n        /* \"#utility.yul\":7789:7821   */\n      slt\n        /* \"#utility.yul\":7786:7905   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":7824:7903   */\n      tag_235\n      tag_132\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7786:7905   */\n    tag_234:\n        /* \"#utility.yul\":7944:7945   */\n      0x00\n        /* \"#utility.yul\":7969:8042   */\n      tag_236\n        /* \"#utility.yul\":8034:8041   */\n      dup5\n        /* \"#utility.yul\":8025:8031   */\n      dup3\n        /* \"#utility.yul\":8014:8023   */\n      dup6\n        /* \"#utility.yul\":8010:8032   */\n      add\n        /* \"#utility.yul\":7969:8042   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7959:8042   */\n      swap2\n      pop\n        /* \"#utility.yul\":7915:8052   */\n      pop\n        /* \"#utility.yul\":7690:8059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8065:8394   */\n    tag_71:\n        /* \"#utility.yul\":8124:8130   */\n      0x00\n        /* \"#utility.yul\":8173:8175   */\n      0x20\n        /* \"#utility.yul\":8161:8170   */\n      dup3\n        /* \"#utility.yul\":8152:8159   */\n      dup5\n        /* \"#utility.yul\":8148:8171   */\n      sub\n        /* \"#utility.yul\":8144:8176   */\n      slt\n        /* \"#utility.yul\":8141:8260   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":8179:8258   */\n      tag_239\n      tag_132\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8141:8260   */\n    tag_238:\n        /* \"#utility.yul\":8299:8300   */\n      0x00\n        /* \"#utility.yul\":8324:8377   */\n      tag_240\n        /* \"#utility.yul\":8369:8376   */\n      dup5\n        /* \"#utility.yul\":8360:8366   */\n      dup3\n        /* \"#utility.yul\":8349:8358   */\n      dup6\n        /* \"#utility.yul\":8345:8367   */\n      add\n        /* \"#utility.yul\":8324:8377   */\n      tag_144\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8314:8377   */\n      swap2\n      pop\n        /* \"#utility.yul\":8270:8387   */\n      pop\n        /* \"#utility.yul\":8065:8394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161104e6100606000396000610290015261104e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d92146100b1578063c4e8fcb5146100e1575b600080fd5b61006b60048036038101906100669190610c3c565b6100fd565b6040516100789190610cc4565b60405180910390f35b61009b60048036038101906100969190610d35565b610191565b6040516100a89190610cc4565b60405180910390f35b6100cb60048036038101906100c69190610db6565b610231565b6040516100d89190610cc4565b60405180910390f35b6100fb60048036038101906100f69190610e99565b61028e565b005b6000336000526000602052604060002054610140577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600083839050905060005b8181101561017f5761017485858381811061016957610168610ed9565b5b905060c00201610450565b80600101905061014b565b50634ce34aa260e01b91505092915050565b60003360005260006020526040600020546101d4577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600085859050905060005b81811015610213576102088787838181106101fd576101fc610ed9565b5b905060c00201610450565b8060010190506101df565b5061021e8484610664565b63899e104c60e01b915050949350505050565b6000336000526000602052604060002054610274577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b61027e8383610664565b638df25d9260e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036103a85781816040517f924e341e00000000000000000000000000000000000000000000000000000000815260040161039f929190610f26565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2826040516104449190610f4f565b60405180910390a25050565b6001600381111561046457610463610f6a565b5b8160000160208101906104779190610fbe565b600381111561048957610488610f6a565b5b036104d9576104d48160200160208101906104a49190610feb565b8260400160208101906104b79190610feb565b8360600160208101906104ca9190610feb565b8460a0013561080c565b610661565b600260038111156104ed576104ec610f6a565b5b8160000160208101906105009190610fbe565b600381111561051257610511610f6a565b5b036105a05760018160a0013514610555576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059b81602001602081019061056b9190610feb565b82604001602081019061057e9190610feb565b8360600160208101906105919190610feb565b846080013561097f565b610660565b6003808111156105b3576105b2610f6a565b5b8160000160208101906105c69190610fbe565b60038111156105d8576105d7610f6a565b5b0361062d576106288160200160208101906105f39190610feb565b8260400160208101906106069190610feb565b8360600160208101906106199190610feb565b84608001358560a00135610a93565b61065f565b6040517f7932f1fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50565b8082807f2eb2c2d60000000000000000000000000000000000000000000000000000000060205260005b838110156107ff57823582018035803b6106d0577f5f15d672000000000000000000000000000000000000000000000000000000006000528060045260246000fd5b60a08201356020810260c0018060808501351460a06060860135141681850135831416158015610724577feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fd5b602088019750608060208601602437604083026040018060a00160a45260008160c401528060c4018160a0880160c43760008082602060008a5af1806107ec573d156107b1576020601f3d010460208304816003028183111561079857610200828302848502030460038385030201810190505b5a6020820110156107ad573d6000803e3d6000fd5b5050505b7fafc445e2000000000000000000000000000000000000000000000000000000006000528660045260c0606452608451602001608452816000fd5b505050505050505060018101905061068e565b5060806040525050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661096d5780873b15151661096c578061093e5781610904573d156108c5576020601f3d01046020840481600302818311156108ac57610200828302848502030460038385030201810190505b5a6020820110156108c1573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005286600452856024528460445260006064528360845260a46000fd5b7f98891923000000000000000000000000000000000000000000000000000000006000528660045285602452846044528360645260846000fd5b7f5f15d672000000000000000000000000000000000000000000000000000000006000528660045260246000fd5b5b82604052600060605250505050505050565b833b6109b3577f5f15d672000000000000000000000000000000000000000000000000000000006000528360045260246000fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000006000528360045282602452816044526000806064600080895af180610a82573d15610a43576020601f3d0104602083048160030281831115610a2a57610200828302848502030460038385030201810190505b5a602082011015610a3f573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005285600452846024528360445282606452600160845260a46000fd5b816040526000606052505050505050565b843b610ac7577f5f15d672000000000000000000000000000000000000000000000000000000006000528460045260246000fd5b60405160805160a05160c0517ff242432a000000000000000000000000000000000000000000000000000000006000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610bac573d15610b6e576020601f3d0104602086048160030281831115610b5557610200828302848502030460038385030201810190505b5a602082011015610b6a573d6000803e3d6000fd5b5050505b7ff486bc8700000000000000000000000000000000000000000000000000000000600052896004528860245287604452866064528560845260a46000fd5b836080528260a0528160c05284604052600060605250505050505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bfc57610bfb610bd7565b5b8235905067ffffffffffffffff811115610c1957610c18610bdc565b5b6020830191508360c0820283011115610c3557610c34610be1565b5b9250929050565b60008060208385031215610c5357610c52610bcd565b5b600083013567ffffffffffffffff811115610c7157610c70610bd2565b5b610c7d85828601610be6565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cbe81610c89565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b60008083601f840112610cf557610cf4610bd7565b5b8235905067ffffffffffffffff811115610d1257610d11610bdc565b5b602083019150836020820283011115610d2e57610d2d610be1565b5b9250929050565b60008060008060408587031215610d4f57610d4e610bcd565b5b600085013567ffffffffffffffff811115610d6d57610d6c610bd2565b5b610d7987828801610be6565b9450945050602085013567ffffffffffffffff811115610d9c57610d9b610bd2565b5b610da887828801610cdf565b925092505092959194509250565b60008060208385031215610dcd57610dcc610bcd565b5b600083013567ffffffffffffffff811115610deb57610dea610bd2565b5b610df785828601610cdf565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008115159050919050565b610e7681610e61565b8114610e8157600080fd5b50565b600081359050610e9381610e6d565b92915050565b60008060408385031215610eb057610eaf610bcd565b5b6000610ebe85828601610e4c565b9250506020610ecf85828601610e84565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610f1181610e23565b82525050565b610f2081610e61565b82525050565b6000604082019050610f3b6000830185610f08565b610f486020830184610f17565b9392505050565b6000602082019050610f646000830184610f17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa657600080fd5b50565b600081359050610fb881610f99565b92915050565b600060208284031215610fd457610fd3610bcd565b5b6000610fe284828501610fa9565b91505092915050565b60006020828403121561100157611000610bcd565b5b600061100f84828501610e4c565b9150509291505056fea26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x104E PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x290 ADD MSTORE PUSH2 0x104E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CE34AA2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x899E104C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC4E8FCB5 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x140 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F JUMPI PUSH2 0x174 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14B JUMP JUMPDEST POP PUSH4 0x4CE34AA2 PUSH1 0xE0 SHL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D4 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH2 0x208 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST POP PUSH2 0x21E DUP5 DUP5 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x899E104C PUSH1 0xE0 SHL SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x274 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x8DF25D92 PUSH1 0xE0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x3A8 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP3 SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4D9 JUMPI PUSH2 0x4D4 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x80C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x5A0 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD CALLDATALOAD EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x62D JUMPI PUSH2 0x628 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FF JUMPI DUP3 CALLDATALOAD DUP3 ADD DUP1 CALLDATALOAD DUP1 EXTCODESIZE PUSH2 0x6D0 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP2 MUL PUSH1 0xC0 ADD DUP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD EQ PUSH1 0xA0 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND DUP2 DUP6 ADD CALLDATALOAD DUP4 EQ AND ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x80 PUSH1 0x20 DUP7 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x40 DUP4 MUL PUSH1 0x40 ADD DUP1 PUSH1 0xA0 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 DUP2 PUSH1 0xC4 ADD MSTORE DUP1 PUSH1 0xC4 ADD DUP2 PUSH1 0xA0 DUP9 ADD PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 PUSH1 0x0 DUP11 GAS CALL DUP1 PUSH2 0x7EC JUMPI RETURNDATASIZE ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x7AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0xC0 PUSH1 0x64 MSTORE PUSH1 0x84 MLOAD PUSH1 0x20 ADD PUSH1 0x84 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x80 PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND PUSH2 0x96D JUMPI DUP1 DUP8 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x96C JUMPI DUP1 PUSH2 0x93E JUMPI DUP2 PUSH2 0x904 JUMPI RETURNDATASIZE ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP5 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x0 PUSH1 0x64 MSTORE DUP4 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0x84 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x9B3 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 PUSH2 0xA82 JUMPI RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP6 PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE DUP4 PUSH1 0x44 MSTORE DUP3 PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xAC7 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP5 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP8 PUSH1 0x4 MSTORE DUP7 PUSH1 0x24 MSTORE DUP6 PUSH1 0x44 MSTORE DUP5 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE PUSH1 0x0 PUSH1 0xA4 MSTORE PUSH1 0x0 DUP1 PUSH1 0xC4 PUSH1 0x0 DUP1 DUP14 GAS CALL DUP1 PUSH2 0xBAC JUMPI RETURNDATASIZE ISZERO PUSH2 0xB6E JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP7 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP10 PUSH1 0x4 MSTORE DUP9 PUSH1 0x24 MSTORE DUP8 PUSH1 0x44 MSTORE DUP7 PUSH1 0x64 MSTORE DUP6 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE DUP2 PUSH1 0xC0 MSTORE DUP5 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xC0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D DUP6 DUP3 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBE DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xD79 DUP8 DUP3 DUP9 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP8 DUP3 DUP9 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5B DUP2 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBE DUP6 DUP3 DUP7 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP5 DUP3 DUP6 ADD PUSH2 0xFA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100F DUP5 DUP3 DUP6 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD CALLDATASIZE SWAP3 0x4F 0x4D 0xBB INVALID PUSH26 0x561A1FC04E45947433C8FCBA59787FFD458BB59436AA02226473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "1078:9135:0:-:0;;;2751:102;;;;;;;;;;2836:10;2822:24;;;;;;;;;;1078:9135;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_performERC1155BatchTransfers_1500": {
									"entryPoint": 1636,
									"id": 1500,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_performERC1155Transfer_1490": {
									"entryPoint": 2707,
									"id": 1490,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_performERC20Transfer_1460": {
									"entryPoint": 2060,
									"id": 1460,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_performERC721Transfer_1474": {
									"entryPoint": 2431,
									"id": 1474,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transfer_277": {
									"entryPoint": 1104,
									"id": 277,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@executeBatch1155_106": {
									"entryPoint": 561,
									"id": 106,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@executeWithBatch1155_158": {
									"entryPoint": 401,
									"id": 158,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@execute_82": {
									"entryPoint": 253,
									"id": 82,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateChannel_200": {
									"entryPoint": 654,
									"id": 200,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_ConduitItemType_$1067": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptrt_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_enum$_ConduitItemType_$1067": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_ConduitItemType_$1067": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8397:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "669:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "679:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "860:478:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "909:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "911:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "911:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "911:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "888:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "896:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "884:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "884:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "903:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:35:10"
															},
															"nodeType": "YulIf",
															"src": "870:122:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1001:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1011:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1074:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1076:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1076:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1076:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1046:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1054:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1043:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:30:10"
															},
															"nodeType": "YulIf",
															"src": "1040:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1182:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1190:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1178:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1166:8:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1249:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1251:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1251:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "1214:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1228:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1236:4:10",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1224:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1224:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1207:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:41:10"
															},
															"nodeType": "YulIf",
															"src": "1204:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "835:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "843:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "853:6:10",
														"type": ""
													}
												],
												"src": "735:603:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:493:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1526:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1528:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1528:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1528:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1501:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1510:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:32:10"
															},
															"nodeType": "YulIf",
															"src": "1490:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1619:347:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1634:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1665:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1676:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1661:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1661:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1648:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1638:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1726:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1728:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1728:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1728:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1706:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1695:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "1692:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1823:133:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1928:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1939:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1924:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1924:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1948:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1841:82:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1841:115:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1823:6:10"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1831:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1442:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1453:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1473:6:10",
														"type": ""
													}
												],
												"src": "1344:629:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2023:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2033:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2048:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2044:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2033:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2005:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2015:7:10",
														"type": ""
													}
												],
												"src": "1979:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2197:52:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2214:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2236:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2219:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2207:36:10"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2185:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2192:3:10",
														"type": ""
													}
												],
												"src": "2134:115:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:122:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2373:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2369:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2361:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2397:41:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:69:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2323:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2335:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2346:4:10",
														"type": ""
													}
												],
												"src": "2255:218:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:478:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2703:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2705:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2682:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2690:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2678:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2697:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2674:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:35:10"
															},
															"nodeType": "YulIf",
															"src": "2664:122:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2795:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2818:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2805:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2868:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "2870:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2870:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2870:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2840:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2837:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:30:10"
															},
															"nodeType": "YulIf",
															"src": "2834:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2960:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2984:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2960:8:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3045:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3008:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3022:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3030:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3018:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3018:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3038:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:41:10"
															},
															"nodeType": "YulIf",
															"src": "2998:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2621:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2629:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2637:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2647:6:10",
														"type": ""
													}
												],
												"src": "2520:612:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:860:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3416:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3418:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3418:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3418:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3391:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:32:10"
															},
															"nodeType": "YulIf",
															"src": "3380:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3509:347:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3524:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3555:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3566:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3551:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3551:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3538:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3538:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3528:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3616:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3618:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3618:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3618:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3596:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3585:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3585:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3582:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3713:133:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3818:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3829:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3814:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3814:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3838:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3731:82:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:115:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3713:6:10"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3721:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3866:357:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3881:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3912:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3923:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3908:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3908:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3895:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3895:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3885:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3974:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3976:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3976:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3976:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3946:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3954:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3943:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3940:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4071:142:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4185:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4181:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4089:91:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:124:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4071:6:10"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4079:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptrt_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3316:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3327:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3339:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3347:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3355:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3363:6:10",
														"type": ""
													}
												],
												"src": "3138:1092:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4381:502:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4427:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4429:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4429:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4429:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4402:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4411:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:32:10"
															},
															"nodeType": "YulIf",
															"src": "4391:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4520:356:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4566:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4577:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4562:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4562:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4549:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4627:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4629:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4629:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4629:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4599:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4607:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4596:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "4593:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:142:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4838:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4849:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4834:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4834:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4858:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4742:91:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:124:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:10"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4732:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4343:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4354:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4366:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4374:6:10",
														"type": ""
													}
												],
												"src": "4236:647:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4934:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4944:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4959:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4966:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4955:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4944:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4916:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4926:7:10",
														"type": ""
													}
												],
												"src": "4889:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5066:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5076:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5105:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5087:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5076:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5048:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5058:7:10",
														"type": ""
													}
												],
												"src": "5021:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5166:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5223:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5232:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5235:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5225:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5225:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5225:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5189:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5214:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5196:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5196:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5186:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5186:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5179:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5179:43:10"
															},
															"nodeType": "YulIf",
															"src": "5176:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5159:5:10",
														"type": ""
													}
												],
												"src": "5123:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5303:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5313:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5335:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5322:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5313:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5378:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5351:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5351:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5281:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5289:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5297:5:10",
														"type": ""
													}
												],
												"src": "5251:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5438:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5448:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5473:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5466:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5466:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5459:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5459:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5448:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5420:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5430:7:10",
														"type": ""
													}
												],
												"src": "5396:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5532:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5586:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5595:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5598:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5588:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5588:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5588:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5555:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5577:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5562:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5562:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5552:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5552:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5545:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:40:10"
															},
															"nodeType": "YulIf",
															"src": "5542:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5525:5:10",
														"type": ""
													}
												],
												"src": "5492:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5663:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5673:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5695:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5682:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5682:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5673:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5735:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5711:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5711:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5641:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5649:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5657:5:10",
														"type": ""
													}
												],
												"src": "5614:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5833:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5879:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5881:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5881:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5881:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5854:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5863:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5850:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5850:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5846:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5846:32:10"
															},
															"nodeType": "YulIf",
															"src": "5843:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5972:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5987:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5991:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6016:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6051:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6062:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6047:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6047:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6071:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6026:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6026:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6016:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6099:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6114:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6128:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6118:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6144:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6154:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6154:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6144:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5795:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5806:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5818:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5826:6:10",
														"type": ""
													}
												],
												"src": "5753:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6255:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6275:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6265:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6369:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6372:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6362:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6393:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6396:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6386:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6227:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6478:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6495:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6518:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6500:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6488:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6466:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6473:3:10",
														"type": ""
													}
												],
												"src": "6413:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6596:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6613:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6633:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6618:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6618:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6606:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6606:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6606:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6584:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6591:3:10",
														"type": ""
													}
												],
												"src": "6537:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6772:200:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6782:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6794:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6805:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6790:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6782:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6875:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6886:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6871:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6818:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6818:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6818:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6937:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6946:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6899:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6899:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6736:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6748:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6756:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6767:4:10",
														"type": ""
													}
												],
												"src": "6652:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7070:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7080:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7088:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7080:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7154:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7167:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7178:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7163:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7116:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7116:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7116:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7042:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7054:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7065:4:10",
														"type": ""
													}
												],
												"src": "6978:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7222:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7239:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7242:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7232:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7232:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7232:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7336:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7339:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7329:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7353:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7194:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7443:56:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7477:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7486:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7489:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7479:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7479:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7479:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7466:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7473:1:10",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7463:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7463:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7456:20:10"
															},
															"nodeType": "YulIf",
															"src": "7453:40:10"
														}
													]
												},
												"name": "validator_revert_t_enum$_ConduitItemType_$1067",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7436:5:10",
														"type": ""
													}
												],
												"src": "7380:119:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7577:107:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7587:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7609:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7596:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7596:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7587:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_ConduitItemType_$1067",
																	"nodeType": "YulIdentifier",
																	"src": "7625:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7625:53:10"
														}
													]
												},
												"name": "abi_decode_t_enum$_ConduitItemType_$1067",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7555:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7563:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7571:5:10",
														"type": ""
													}
												],
												"src": "7505:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7776:283:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7822:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7824:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7824:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7824:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7797:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7806:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7793:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7818:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7789:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:32:10"
															},
															"nodeType": "YulIf",
															"src": "7786:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "7915:137:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7930:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7944:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7934:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7959:83:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8014:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8025:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8010:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8010:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8034:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_ConduitItemType_$1067",
																			"nodeType": "YulIdentifier",
																			"src": "7969:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:73:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7959:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_ConduitItemType_$1067",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7746:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7757:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7769:6:10",
														"type": ""
													}
												],
												"src": "7690:369:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8131:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8177:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8179:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8179:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8179:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8152:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8161:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8148:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8173:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8144:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:32:10"
															},
															"nodeType": "YulIf",
															"src": "8141:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8270:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8285:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8289:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8314:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8349:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8360:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8345:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8345:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8369:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8324:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8324:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8314:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8101:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8112:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8124:6:10",
														"type": ""
													}
												],
												"src": "8065:329:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct ConduitTransfer[]\n    function abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0xc0)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // struct ConduitBatch1155Transfer[]\n    function abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptrt_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_enum$_ConduitItemType_$1067(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_ConduitItemType_$1067(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_ConduitItemType_$1067(value)\n    }\n\n    function abi_decode_tuple_t_enum$_ConduitItemType_$1067(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_ConduitItemType_$1067(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"18": [
									{
										"length": 32,
										"start": 656
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d92146100b1578063c4e8fcb5146100e1575b600080fd5b61006b60048036038101906100669190610c3c565b6100fd565b6040516100789190610cc4565b60405180910390f35b61009b60048036038101906100969190610d35565b610191565b6040516100a89190610cc4565b60405180910390f35b6100cb60048036038101906100c69190610db6565b610231565b6040516100d89190610cc4565b60405180910390f35b6100fb60048036038101906100f69190610e99565b61028e565b005b6000336000526000602052604060002054610140577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600083839050905060005b8181101561017f5761017485858381811061016957610168610ed9565b5b905060c00201610450565b80600101905061014b565b50634ce34aa260e01b91505092915050565b60003360005260006020526040600020546101d4577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600085859050905060005b81811015610213576102088787838181106101fd576101fc610ed9565b5b905060c00201610450565b8060010190506101df565b5061021e8484610664565b63899e104c60e01b915050949350505050565b6000336000526000602052604060002054610274577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b61027e8383610664565b638df25d9260e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036103a85781816040517f924e341e00000000000000000000000000000000000000000000000000000000815260040161039f929190610f26565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2826040516104449190610f4f565b60405180910390a25050565b6001600381111561046457610463610f6a565b5b8160000160208101906104779190610fbe565b600381111561048957610488610f6a565b5b036104d9576104d48160200160208101906104a49190610feb565b8260400160208101906104b79190610feb565b8360600160208101906104ca9190610feb565b8460a0013561080c565b610661565b600260038111156104ed576104ec610f6a565b5b8160000160208101906105009190610fbe565b600381111561051257610511610f6a565b5b036105a05760018160a0013514610555576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059b81602001602081019061056b9190610feb565b82604001602081019061057e9190610feb565b8360600160208101906105919190610feb565b846080013561097f565b610660565b6003808111156105b3576105b2610f6a565b5b8160000160208101906105c69190610fbe565b60038111156105d8576105d7610f6a565b5b0361062d576106288160200160208101906105f39190610feb565b8260400160208101906106069190610feb565b8360600160208101906106199190610feb565b84608001358560a00135610a93565b61065f565b6040517f7932f1fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50565b8082807f2eb2c2d60000000000000000000000000000000000000000000000000000000060205260005b838110156107ff57823582018035803b6106d0577f5f15d672000000000000000000000000000000000000000000000000000000006000528060045260246000fd5b60a08201356020810260c0018060808501351460a06060860135141681850135831416158015610724577feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fd5b602088019750608060208601602437604083026040018060a00160a45260008160c401528060c4018160a0880160c43760008082602060008a5af1806107ec573d156107b1576020601f3d010460208304816003028183111561079857610200828302848502030460038385030201810190505b5a6020820110156107ad573d6000803e3d6000fd5b5050505b7fafc445e2000000000000000000000000000000000000000000000000000000006000528660045260c0606452608451602001608452816000fd5b505050505050505060018101905061068e565b5060806040525050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661096d5780873b15151661096c578061093e5781610904573d156108c5576020601f3d01046020840481600302818311156108ac57610200828302848502030460038385030201810190505b5a6020820110156108c1573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005286600452856024528460445260006064528360845260a46000fd5b7f98891923000000000000000000000000000000000000000000000000000000006000528660045285602452846044528360645260846000fd5b7f5f15d672000000000000000000000000000000000000000000000000000000006000528660045260246000fd5b5b82604052600060605250505050505050565b833b6109b3577f5f15d672000000000000000000000000000000000000000000000000000000006000528360045260246000fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000006000528360045282602452816044526000806064600080895af180610a82573d15610a43576020601f3d0104602083048160030281831115610a2a57610200828302848502030460038385030201810190505b5a602082011015610a3f573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005285600452846024528360445282606452600160845260a46000fd5b816040526000606052505050505050565b843b610ac7577f5f15d672000000000000000000000000000000000000000000000000000000006000528460045260246000fd5b60405160805160a05160c0517ff242432a000000000000000000000000000000000000000000000000000000006000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610bac573d15610b6e576020601f3d0104602086048160030281831115610b5557610200828302848502030460038385030201810190505b5a602082011015610b6a573d6000803e3d6000fd5b5050505b7ff486bc8700000000000000000000000000000000000000000000000000000000600052896004528860245287604452866064528560845260a46000fd5b836080528260a0528160c05284604052600060605250505050505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bfc57610bfb610bd7565b5b8235905067ffffffffffffffff811115610c1957610c18610bdc565b5b6020830191508360c0820283011115610c3557610c34610be1565b5b9250929050565b60008060208385031215610c5357610c52610bcd565b5b600083013567ffffffffffffffff811115610c7157610c70610bd2565b5b610c7d85828601610be6565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cbe81610c89565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b60008083601f840112610cf557610cf4610bd7565b5b8235905067ffffffffffffffff811115610d1257610d11610bdc565b5b602083019150836020820283011115610d2e57610d2d610be1565b5b9250929050565b60008060008060408587031215610d4f57610d4e610bcd565b5b600085013567ffffffffffffffff811115610d6d57610d6c610bd2565b5b610d7987828801610be6565b9450945050602085013567ffffffffffffffff811115610d9c57610d9b610bd2565b5b610da887828801610cdf565b925092505092959194509250565b60008060208385031215610dcd57610dcc610bcd565b5b600083013567ffffffffffffffff811115610deb57610dea610bd2565b5b610df785828601610cdf565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008115159050919050565b610e7681610e61565b8114610e8157600080fd5b50565b600081359050610e9381610e6d565b92915050565b60008060408385031215610eb057610eaf610bcd565b5b6000610ebe85828601610e4c565b9250506020610ecf85828601610e84565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610f1181610e23565b82525050565b610f2081610e61565b82525050565b6000604082019050610f3b6000830185610f08565b610f486020830184610f17565b9392505050565b6000602082019050610f646000830184610f17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa657600080fd5b50565b600081359050610fb881610f99565b92915050565b600060208284031215610fd457610fd3610bcd565b5b6000610fe284828501610fa9565b91505092915050565b60006020828403121561100157611000610bcd565b5b600061100f84828501610e4c565b9150509291505056fea26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CE34AA2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x899E104C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC4E8FCB5 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x140 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F JUMPI PUSH2 0x174 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14B JUMP JUMPDEST POP PUSH4 0x4CE34AA2 PUSH1 0xE0 SHL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D4 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH2 0x208 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST POP PUSH2 0x21E DUP5 DUP5 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x899E104C PUSH1 0xE0 SHL SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x274 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x8DF25D92 PUSH1 0xE0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x3A8 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP3 SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4D9 JUMPI PUSH2 0x4D4 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x80C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x5A0 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD CALLDATALOAD EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x62D JUMPI PUSH2 0x628 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FF JUMPI DUP3 CALLDATALOAD DUP3 ADD DUP1 CALLDATALOAD DUP1 EXTCODESIZE PUSH2 0x6D0 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP2 MUL PUSH1 0xC0 ADD DUP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD EQ PUSH1 0xA0 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND DUP2 DUP6 ADD CALLDATALOAD DUP4 EQ AND ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x80 PUSH1 0x20 DUP7 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x40 DUP4 MUL PUSH1 0x40 ADD DUP1 PUSH1 0xA0 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 DUP2 PUSH1 0xC4 ADD MSTORE DUP1 PUSH1 0xC4 ADD DUP2 PUSH1 0xA0 DUP9 ADD PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 PUSH1 0x0 DUP11 GAS CALL DUP1 PUSH2 0x7EC JUMPI RETURNDATASIZE ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x7AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0xC0 PUSH1 0x64 MSTORE PUSH1 0x84 MLOAD PUSH1 0x20 ADD PUSH1 0x84 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x80 PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND PUSH2 0x96D JUMPI DUP1 DUP8 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x96C JUMPI DUP1 PUSH2 0x93E JUMPI DUP2 PUSH2 0x904 JUMPI RETURNDATASIZE ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP5 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x0 PUSH1 0x64 MSTORE DUP4 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0x84 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x9B3 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 PUSH2 0xA82 JUMPI RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP6 PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE DUP4 PUSH1 0x44 MSTORE DUP3 PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xAC7 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP5 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP8 PUSH1 0x4 MSTORE DUP7 PUSH1 0x24 MSTORE DUP6 PUSH1 0x44 MSTORE DUP5 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE PUSH1 0x0 PUSH1 0xA4 MSTORE PUSH1 0x0 DUP1 PUSH1 0xC4 PUSH1 0x0 DUP1 DUP14 GAS CALL DUP1 PUSH2 0xBAC JUMPI RETURNDATASIZE ISZERO PUSH2 0xB6E JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP7 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP10 PUSH1 0x4 MSTORE DUP9 PUSH1 0x24 MSTORE DUP8 PUSH1 0x44 MSTORE DUP7 PUSH1 0x64 MSTORE DUP6 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE DUP2 PUSH1 0xC0 MSTORE DUP5 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xC0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D DUP6 DUP3 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBE DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xD79 DUP8 DUP3 DUP9 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP8 DUP3 DUP9 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5B DUP2 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBE DUP6 DUP3 DUP7 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP5 DUP3 DUP6 ADD PUSH2 0xFA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100F DUP5 DUP3 DUP6 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD CALLDATASIZE SWAP3 0x4F 0x4D 0xBB INVALID PUSH26 0x561A1FC04E45947433C8FCBA59787FFD458BB59436AA02226473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "1078:9135:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:774;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6540:1132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5137:482;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7905:603;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3602:774;3732:17;1695:8;1671:22;1664:40;1816:14;1795:19;1788:43;2037:17;2013:22;2003:52;1997:59;1970:615;;2267:29;2242:23;2235:62;2406:8;2379:25;2372:43;2544:26;2519:23;2512:59;1970:615;3839:30:::1;3872:9;;:16;;3839:49;;3943:9;3938:309;3962:22;3958:1;:26;3938:309;;;4077:23;4087:9;;4097:1;4087:12;;;;;;;:::i;:::-;;;;;;;4077:9;:23::i;:::-;4219:3;;;;;3938:309;;;;4348:21;;;4335:34;;3755:621;3602:774:::0;;;;:::o;6540:1132::-;6733:17;1695:8;1671:22;1664:40;1816:14;1795:19;1788:43;2037:17;2013:22;2003:52;1997:59;1970:615;;2267:29;2242:23;2235:62;2406:8;2379:25;2372:43;2544:26;2519:23;2512:59;1970:615;6836:30:::1;6869:17;;:24;;6836:57;;6957:9;6952:317;6976:22;6972:1;:26;6952:317;;;7091:31;7101:17;;7119:1;7101:20;;;;;;;:::i;:::-;;;;;;;7091:9;:31::i;:::-;7241:3;;;;;6952:317;;;;7484:45;7514:14;;7484:29;:45::i;:::-;7631:34;;;7618:47;;6752:920;6540:1132:::0;;;;;;:::o;5137:482::-;5272:17;1695:8;1671:22;1664:40;1816:14;1795:19;1788:43;2037:17;2013:22;2003:52;1997:59;1970:615;;2267:29;2242:23;2235:62;2406:8;2379:25;2372:43;2544:26;2519:23;2512:59;1970:615;5435:45:::1;5465:14;;5435:29;:45::i;:::-;5582:30;;;5569:43;;5137:482:::0;;;;:::o;7905:603::-;8074:11;8060:25;;:10;:25;;;8056:82;;8108:19;;;;;;;;;;;;;;8056:82;8253:6;8231:28;;:9;:18;8241:7;8231:18;;;;;;;;;;;;;;;;;;;;;;;;;:28;;;8227:106;;8306:7;8315:6;8282:40;;;;;;;;;;;;:::i;:::-;;;;;;;;8227:106;8409:6;8388:9;:18;8398:7;8388:18;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;8485:7;8470:31;;;8494:6;8470:31;;;;;;:::i;:::-;;;;;;;;7905:603;;:::o;8814:1397::-;8980:21;8963:38;;;;;;;;:::i;:::-;;:4;:13;;;;;;;;;;:::i;:::-;:38;;;;;;;;:::i;:::-;;;8959:1246;;9304:66;9326:4;:10;;;;;;;;;;:::i;:::-;9338:4;:9;;;;;;;;;;:::i;:::-;9349:4;:7;;;;;;;;;;:::i;:::-;9358:4;:11;;;9304:21;:66::i;:::-;8959:1246;;;9408:22;9391:39;;;;;;;;:::i;:::-;;:4;:13;;;;;;;;;;:::i;:::-;:39;;;;;;;;:::i;:::-;;;9387:818;;9535:1;9520:4;:11;;;:16;9516:91;;9563:29;;;;;;;;;;;;;;9516:91;9659:149;9699:4;:10;;;;;;;;;;:::i;:::-;9727:4;:9;;;;;;;;;;:::i;:::-;9754:4;:7;;;;;;;;;;:::i;:::-;9779:4;:15;;;9659:22;:149::i;:::-;9387:818;;;9846:23;9829:40;;;;;;;;:::i;:::-;;:4;:13;;;;;;;;;;:::i;:::-;:40;;;;;;;;:::i;:::-;;;9825:380;;9924:179;9965:4;:10;;;;;;;;;;:::i;:::-;9993:4;:9;;;;;;;;;;:::i;:::-;10020:4;:7;;;;;;;;;;:::i;:::-;10045:4;:15;;;10078:4;:11;;;9924:23;:179::i;:::-;9825:380;;;10177:17;;;;;;;;;;;;;;9825:380;9387:818;8959:1246;8814:1397;:::o;23697:11483:8:-;23926:21;24213;24493:18;24763:39;24709:36;24685:131;24910:1;24879:9896;24932:3;24929:1;24926:10;24879:9896;;;25311:18;25298:32;25264:12;25239:109;25445:10;25432:24;25549:5;25537:18;25527:270;;25612:26;25586:24;25579:60;25695:5;25667:26;25660:41;25755:23;25729:24;25722:57;25527:270;25939:42;25927:10;25923:59;25889:111;26231:7;26220:9;26216:23;26144:50;26119:138;27544:21;27398:40;27346:10;27301:175;27251:259;27215:380;27043:42;26897:40;26845:10;26800:175;26750:259;26714:401;26631:990;26556:21;26544:10;26540:38;26527:52;26488:9;26456:149;26371:1272;26343:1318;27752:15;27749:392;;;27884:41;27822:36;27790:157;28062:39;28000:36;27968:155;27749:392;28269:7;28249:18;28245:32;28223:54;;28532:41;28473:36;28461:10;28457:53;28408:27;28374:217;28820:8;28809:9;28805:24;28795:8;28791:39;29098:17;29031:41;29002:135;28943:37;28915:240;29431:1;29370:17;29301:43;29272:137;29244:206;29659:17;29596:41;29571:123;29966:17;29901:42;29889:10;29885:59;29825:38;29791:210;30379:1;30356;30279:16;30198:36;30175:1;30148:5;30121;30095:303;30471:7;30461:4300;;30634:16;30631:2996;;;31106:7;31062:13;31044:16;31040:36;31007:132;31800:7;31782:16;31778:30;31936:15;31923:11;31919:33;32073:10;32056:15;32053:31;32050:979;;;32875:26;32780:10;32768;32764:27;32657:15;32592;32539:179;32490:343;32445:494;32358:11;32305:10;32288:15;32284:32;32239:168;32198:775;32160:4;32123:880;32115:888;;32050:979;33289:5;33272:14;33266:4;33262:25;33259:36;33256:349;;;33425:16;33422:1;33419;33404:38;33562:16;33559:1;33552:27;33256:349;30651:2976;;;30631:2996;33756:50;33729:1;33697:131;33943:5;33897:44;33890:59;34122:45;34060:36;34028:161;34446:40;34440:47;34403:7;34370:143;34304:40;34272:263;34726:16;34723:1;34716:27;30461:4300;24984:9791;;;;;;;;24967:1;24964;24960:9;24955:14;;24879:9896;;;24883:42;35139:24;35116:21;35109:55;23901:11273;;;23697:11483;;:::o;1345:9615::-;1771:21;1765:28;1919;1891:26;1884:64;1997:4;1968:27;1961:41;2049:2;2022:25;2015:37;2103:6;2072:29;2065:45;2797:7;2778:1;2735:25;2691:26;2672:1;2649:5;2626;2604:214;3295:10;3242:16;3235:24;3209:2;3191:16;3188:24;3184:1;3180;3174:8;3171:15;3167:46;3143:134;2927:392;3680:16;3673:24;3666:32;3657:7;3653:46;3643:7110;;4001:7;3991:5;3979:18;3972:26;3965:34;3961:48;3951:6582;;4090:7;4080:6132;;4189:10;4179:4759;;4379:16;4376:3322;;;4946:7;4894:13;4876:16;4872:36;4831:156;5352:7;5340:10;5336:24;5504:15;5491:11;5487:33;5657:10;5640:15;5637:31;5634:1293;;;6741:26;6630:10;6618;6614:27;6491:15;6418;6357:203;6300:391;6247:566;6144:11;6034:10;5965:15;5908:186;5855:346;5806:1049;5760:4;5715:1178;5707:1186;;5634:1293;7219:5;7202:14;7196:4;7192:25;7189:36;7186:482;;;7417:16;7414:1;7411;7396:38;7617:16;7614:1;7607:27;7186:482;4396:3302;;;4376:3322;7921:43;7846:41;7806:188;8140:5;8063:43;8023:152;8320:4;8244:42;8204:150;8432:2;8390:40;8383:52;8513:1;8471:40;8464:51;8662:6;8584:44;8544:154;8842:40;8767:41;8727:185;4179:4759;9227:49;9150:47;9114:188;9442:5;9363:49;9327:146;9612:4;9534:48;9498:144;9779:2;9703:46;9667:140;9948:6;9868:50;9832:148;10118:46;10041:47;10005:185;4080:6132;10348:26;10322:24;10315:60;10431:5;10403:26;10396:41;10491:23;10465:24;10458:57;3951:6582;3643:7110;10854:10;10831:21;10824:41;10942:1;10932:8;10925:19;1573:9381;;;1345:9615;;;;:::o;11564:4914::-;11883:5;11871:18;11861:254;;11942:26;11916:24;11909:60;12021:5;11993:26;11986:41;12077:23;12051:24;12044:57;11861:254;12313:21;12307:28;12459:29;12430:27;12423:66;12539:4;12509:28;12502:42;12592:2;12564:26;12557:38;12643:10;12615:26;12608:46;12933:1;12914;12870:26;12825:27;12806:1;12783:5;12760;12738:210;13013:7;13003:3268;;13164:16;13161:2328;;;13606:7;13566:13;13548:16;13544:36;13515:120;13917:7;13905:10;13901:24;14045:15;14032:11;14028:33;14174:10;14157:15;14154:31;14151:769;;;14782:26;14695:10;14683;14679:27;14621:15;14604;14600:37;14555:189;14514:328;14435:11;14386:10;14369:15;14365:32;14324:156;14287:585;14253:4;14220:678;14212:686;;14151:769;15164:5;15147:14;15141:4;15137:25;15134:36;15131:340;;;15299:16;15296:1;15293;15278:38;15432:16;15429:1;15422:27;15131:340;13181:2308;;;13161:2328;15664:43;15601:41;15573:152;15794:5;15749:43;15742:58;15868:4;15824:42;15817:56;15939:2;15897:40;15890:52;16008:10;15966:40;15959:60;16089:1;16043:44;16036:55;16199:40;16136:41;16108:149;13003:3268;16372:10;16349:21;16342:41;16460:1;16450:8;16443:19;11798:4674;;11564:4914;;;;:::o;17126:5620::-;17471:5;17459:18;17449:254;;17530:26;17504:24;17497:60;17609:5;17581:26;17574:41;17665:23;17639:24;17632:57;17449:254;17895:21;17889:28;17952:8;17946:15;17996:8;17990:15;18040:8;18034:15;18215:34;18165:32;18141:122;18318:4;18283:33;18276:47;18376:2;18343:31;18336:43;18432:10;18399:31;18392:51;18500:6;18463:35;18456:51;18602:43;18544:40;18520:139;18721:1;18679:40;18672:51;19012:1;18993;18944:31;18894:32;18875:1;18852:5;18829;18807:220;19092:7;19082:3273;;19243:16;19240:2328;;;19685:7;19645:13;19627:16;19623:36;19594:120;19996:7;19984:10;19980:24;20124:15;20111:11;20107:33;20253:10;20236:15;20233:31;20230:769;;;20861:26;20774:10;20762;20758:27;20700:15;20683;20679:37;20634:189;20593:328;20514:11;20465:10;20448:15;20444:32;20403:156;20366:585;20332:4;20299:678;20291:686;;20230:769;21243:5;21226:14;21220:4;21216:25;21213:36;21210:340;;;21378:16;21375:1;21372;21357:38;21511:16;21508:1;21501:27;21210:340;19260:2308;;;19240:2328;21743:43;21680:41;21652:152;21873:5;21828:43;21821:58;21947:4;21903:42;21896:56;22018:2;21976:40;21969:52;22087:10;22045:40;22038:60;22168:6;22122:44;22115:60;22283:40;22220:41;22192:149;19082:3273;22386:8;22376;22369:26;22447:8;22437;22430:26;22508:8;22498;22491:26;22640:10;22617:21;22610:41;22728:1;22718:8;22711:19;17386:5354;;;;;17126:5620;;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;735:603;843:8;853:6;903:3;896:4;888:6;884:17;880:27;870:122;;911:79;;:::i;:::-;870:122;1024:6;1011:20;1001:30;;1054:18;1046:6;1043:30;1040:117;;;1076:79;;:::i;:::-;1040:117;1190:4;1182:6;1178:17;1166:29;;1244:3;1236:4;1228:6;1224:17;1214:8;1210:32;1207:41;1204:128;;;1251:79;;:::i;:::-;1204:128;735:603;;;;;:::o;1344:629::-;1465:6;1473;1522:2;1510:9;1501:7;1497:23;1493:32;1490:119;;;1528:79;;:::i;:::-;1490:119;1676:1;1665:9;1661:17;1648:31;1706:18;1698:6;1695:30;1692:117;;;1728:79;;:::i;:::-;1692:117;1841:115;1948:7;1939:6;1928:9;1924:22;1841:115;:::i;:::-;1823:133;;;;1619:347;1344:629;;;;;:::o;1979:149::-;2015:7;2055:66;2048:5;2044:78;2033:89;;1979:149;;;:::o;2134:115::-;2219:23;2236:5;2219:23;:::i;:::-;2214:3;2207:36;2134:115;;:::o;2255:218::-;2346:4;2384:2;2373:9;2369:18;2361:26;;2397:69;2463:1;2452:9;2448:17;2439:6;2397:69;:::i;:::-;2255:218;;;;:::o;2520:612::-;2637:8;2647:6;2697:3;2690:4;2682:6;2678:17;2674:27;2664:122;;2705:79;;:::i;:::-;2664:122;2818:6;2805:20;2795:30;;2848:18;2840:6;2837:30;2834:117;;;2870:79;;:::i;:::-;2834:117;2984:4;2976:6;2972:17;2960:29;;3038:3;3030:4;3022:6;3018:17;3008:8;3004:32;3001:41;2998:128;;;3045:79;;:::i;:::-;2998:128;2520:612;;;;;:::o;3138:1092::-;3339:6;3347;3355;3363;3412:2;3400:9;3391:7;3387:23;3383:32;3380:119;;;3418:79;;:::i;:::-;3380:119;3566:1;3555:9;3551:17;3538:31;3596:18;3588:6;3585:30;3582:117;;;3618:79;;:::i;:::-;3582:117;3731:115;3838:7;3829:6;3818:9;3814:22;3731:115;:::i;:::-;3713:133;;;;3509:347;3923:2;3912:9;3908:18;3895:32;3954:18;3946:6;3943:30;3940:117;;;3976:79;;:::i;:::-;3940:117;4089:124;4205:7;4196:6;4185:9;4181:22;4089:124;:::i;:::-;4071:142;;;;3866:357;3138:1092;;;;;;;:::o;4236:647::-;4366:6;4374;4423:2;4411:9;4402:7;4398:23;4394:32;4391:119;;;4429:79;;:::i;:::-;4391:119;4577:1;4566:9;4562:17;4549:31;4607:18;4599:6;4596:30;4593:117;;;4629:79;;:::i;:::-;4593:117;4742:124;4858:7;4849:6;4838:9;4834:22;4742:124;:::i;:::-;4724:142;;;;4520:356;4236:647;;;;;:::o;4889:126::-;4926:7;4966:42;4959:5;4955:54;4944:65;;4889:126;;;:::o;5021:96::-;5058:7;5087:24;5105:5;5087:24;:::i;:::-;5076:35;;5021:96;;;:::o;5123:122::-;5196:24;5214:5;5196:24;:::i;:::-;5189:5;5186:35;5176:63;;5235:1;5232;5225:12;5176:63;5123:122;:::o;5251:139::-;5297:5;5335:6;5322:20;5313:29;;5351:33;5378:5;5351:33;:::i;:::-;5251:139;;;;:::o;5396:90::-;5430:7;5473:5;5466:13;5459:21;5448:32;;5396:90;;;:::o;5492:116::-;5562:21;5577:5;5562:21;:::i;:::-;5555:5;5552:32;5542:60;;5598:1;5595;5588:12;5542:60;5492:116;:::o;5614:133::-;5657:5;5695:6;5682:20;5673:29;;5711:30;5735:5;5711:30;:::i;:::-;5614:133;;;;:::o;5753:468::-;5818:6;5826;5875:2;5863:9;5854:7;5850:23;5846:32;5843:119;;;5881:79;;:::i;:::-;5843:119;6001:1;6026:53;6071:7;6062:6;6051:9;6047:22;6026:53;:::i;:::-;6016:63;;5972:117;6128:2;6154:50;6196:7;6187:6;6176:9;6172:22;6154:50;:::i;:::-;6144:60;;6099:115;5753:468;;;;;:::o;6227:180::-;6275:77;6272:1;6265:88;6372:4;6369:1;6362:15;6396:4;6393:1;6386:15;6413:118;6500:24;6518:5;6500:24;:::i;:::-;6495:3;6488:37;6413:118;;:::o;6537:109::-;6618:21;6633:5;6618:21;:::i;:::-;6613:3;6606:34;6537:109;;:::o;6652:320::-;6767:4;6805:2;6794:9;6790:18;6782:26;;6818:71;6886:1;6875:9;6871:17;6862:6;6818:71;:::i;:::-;6899:66;6961:2;6950:9;6946:18;6937:6;6899:66;:::i;:::-;6652:320;;;;;:::o;6978:210::-;7065:4;7103:2;7092:9;7088:18;7080:26;;7116:65;7178:1;7167:9;7163:17;7154:6;7116:65;:::i;:::-;6978:210;;;;:::o;7194:180::-;7242:77;7239:1;7232:88;7339:4;7336:1;7329:15;7363:4;7360:1;7353:15;7380:119;7473:1;7466:5;7463:12;7453:40;;7489:1;7486;7479:12;7453:40;7380:119;:::o;7505:179::-;7571:5;7609:6;7596:20;7587:29;;7625:53;7672:5;7625:53;:::i;:::-;7505:179;;;;:::o;7690:369::-;7769:6;7818:2;7806:9;7797:7;7793:23;7789:32;7786:119;;;7824:79;;:::i;:::-;7786:119;7944:1;7969:73;8034:7;8025:6;8014:9;8010:22;7969:73;:::i;:::-;7959:83;;7915:137;7690:369;;;;:::o;8065:329::-;8124:6;8173:2;8161:9;8152:7;8148:23;8144:32;8141:119;;;8179:79;;:::i;:::-;8141:119;8299:1;8324:53;8369:7;8360:6;8349:9;8345:22;8324:53;:::i;:::-;8314:63;;8270:117;8065:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "834800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"execute((uint8,address,address,address,uint256,uint256)[])": "infinite",
								"executeBatch1155((address,address,address,uint256[],uint256[])[])": "infinite",
								"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "infinite",
								"updateChannel(address,bool)": "infinite"
							},
							"internal": {
								"_transfer(struct ConduitTransfer calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2751,
									"end": 2853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2836,
									"end": 2846,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2822,
									"end": 2846,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1078,
									"end": 10213,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
									".code": [
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "4CE34AA2"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "899E104C"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "8DF25D92"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "C4E8FCB5"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3602,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3602,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3602,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6540,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6540,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6540,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5137,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5137,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7905,
											"end": 8508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7905,
											"end": 8508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2519,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3881,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3881,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3872,
											"end": 3888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3984,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4087,
											"end": 4096,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4096,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4087,
											"end": 4099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4077,
											"end": 4100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4077,
											"end": 4100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4219,
											"end": 4222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 4247,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4CE34AA2"
										},
										{
											"begin": 4348,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4348,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4335,
											"end": 4369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 4376,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6733,
											"end": 6750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2519,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6886,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6886,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6836,
											"end": 6893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6998,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6972,
											"end": 6973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6972,
											"end": 6998,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7101,
											"end": 7118,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7118,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7120,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 7101,
											"end": 7121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7091,
											"end": 7122,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7091,
											"end": 7122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7091,
											"end": 7122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7244,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7241,
											"end": 7244,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7244,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 7269,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7514,
											"end": 7528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7484,
											"end": 7529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7484,
											"end": 7529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7484,
											"end": 7529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7631,
											"end": 7665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "899E104C"
										},
										{
											"begin": 7631,
											"end": 7665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7631,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7665,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 7672,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6540,
											"end": 7672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2406,
											"end": 2414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2379,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2570,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2519,
											"end": 2542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1970,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5465,
											"end": 5479,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5465,
											"end": 5479,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5435,
											"end": 5480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5435,
											"end": 5480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5582,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8DF25D92"
										},
										{
											"begin": 5582,
											"end": 5612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5582,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5569,
											"end": 5612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8085,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8070,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8056,
											"end": 8138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "6D5769BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8138,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8056,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8241,
											"end": 8248,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8231,
											"end": 8249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8227,
											"end": 8333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8306,
											"end": 8313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8315,
											"end": 8321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "924E341E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8282,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8282,
											"end": 8322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8227,
											"end": 8333,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8227,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8398,
											"end": 8405,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8388,
											"end": 8415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "AE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2"
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8470,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8470,
											"end": 8501,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7905,
											"end": 8508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 10211,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8814,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8963,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8963,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8963,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8963,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8963,
											"end": 9001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9304,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9326,
											"end": 9336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9338,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9338,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9349,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9349,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9369,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 9358,
											"end": 9369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9358,
											"end": 9369,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9304,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9304,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9304,
											"end": 9370,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9304,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9408,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9391,
											"end": 9430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9391,
											"end": 9404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9391,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9391,
											"end": 9430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9430,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9535,
											"end": 9536,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9531,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 9520,
											"end": 9531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9531,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9516,
											"end": 9607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "EFCC00B100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9607,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 9516,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9699,
											"end": 9703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9699,
											"end": 9709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9727,
											"end": 9736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9758,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9754,
											"end": 9761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9754,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9779,
											"end": 9794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9794,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9659,
											"end": 9808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9808,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9659,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9846,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9829,
											"end": 9869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 9829,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9829,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9829,
											"end": 9869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9829,
											"end": 9869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9965,
											"end": 9969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9965,
											"end": 9975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9965,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 9997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9993,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9993,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10020,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10020,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10045,
											"end": 10049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10078,
											"end": 10082,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10078,
											"end": 10089,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 10078,
											"end": 10089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10078,
											"end": 10089,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9924,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 10103,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9924,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "PUSH",
											"source": 0,
											"value": "7932F1FC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10194,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9825,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9387,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8959,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 10211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8814,
											"end": 10211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23697,
											"end": 35180,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 23697,
											"end": 35180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23926,
											"end": 23947,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24213,
											"end": 24234,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24493,
											"end": 24511,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24763,
											"end": 24802,
											"name": "PUSH",
											"source": 8,
											"value": "2EB2C2D600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24709,
											"end": 24745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24685,
											"end": 24816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24910,
											"end": 24911,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24932,
											"end": 24935,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24929,
											"end": 24930,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24926,
											"end": 24936,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25311,
											"end": 25329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25298,
											"end": 25330,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 25264,
											"end": 25276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25239,
											"end": 25348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25445,
											"end": 25455,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25432,
											"end": 25456,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 25549,
											"end": 25554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25537,
											"end": 25555,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 25527,
											"end": 25797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 25527,
											"end": 25797,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25612,
											"end": 25638,
											"name": "PUSH",
											"source": 8,
											"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25586,
											"end": 25610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25579,
											"end": 25639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25695,
											"end": 25700,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 25667,
											"end": 25693,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 25660,
											"end": 25701,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25755,
											"end": 25778,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 25729,
											"end": 25753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25722,
											"end": 25779,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 25527,
											"end": 25797,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 25527,
											"end": 25797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25939,
											"end": 25981,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 25927,
											"end": 25937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25923,
											"end": 25982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25889,
											"end": 26000,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 26231,
											"end": 26238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 26220,
											"end": 26229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26216,
											"end": 26239,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 26144,
											"end": 26194,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 26119,
											"end": 26257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27544,
											"end": 27565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 27398,
											"end": 27438,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 27346,
											"end": 27356,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 27301,
											"end": 27476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 27251,
											"end": 27510,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 27215,
											"end": 27595,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 27043,
											"end": 27085,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 26897,
											"end": 26937,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 26845,
											"end": 26855,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 26800,
											"end": 26975,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26750,
											"end": 27009,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 26714,
											"end": 27115,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26631,
											"end": 27621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 26556,
											"end": 26577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26544,
											"end": 26554,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 26540,
											"end": 26578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26527,
											"end": 26579,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 26488,
											"end": 26497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 26456,
											"end": 26605,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26371,
											"end": 27643,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 26343,
											"end": 27661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27752,
											"end": 27767,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 27749,
											"end": 28141,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 27749,
											"end": 28141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 27749,
											"end": 28141,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 27884,
											"end": 27925,
											"name": "PUSH",
											"source": 8,
											"value": "EBA2084C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27822,
											"end": 27858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27790,
											"end": 27947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28062,
											"end": 28101,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 28000,
											"end": 28036,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 27968,
											"end": 28123,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 27749,
											"end": 28141,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 27749,
											"end": 28141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 28269,
											"end": 28276,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28249,
											"end": 28267,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 28245,
											"end": 28277,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28223,
											"end": 28277,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 28223,
											"end": 28277,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 28532,
											"end": 28573,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 28473,
											"end": 28509,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 28461,
											"end": 28471,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 28457,
											"end": 28510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28408,
											"end": 28435,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 28374,
											"end": 28591,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 28820,
											"end": 28828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 28809,
											"end": 28818,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 28805,
											"end": 28829,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 28795,
											"end": 28803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 28791,
											"end": 28830,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29098,
											"end": 29115,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29031,
											"end": 29072,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 29002,
											"end": 29137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28943,
											"end": 28980,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 28915,
											"end": 29155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29431,
											"end": 29432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 29370,
											"end": 29387,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29301,
											"end": 29344,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 29272,
											"end": 29409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29244,
											"end": 29450,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29659,
											"end": 29676,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 29596,
											"end": 29637,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 29571,
											"end": 29694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29966,
											"end": 29983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 29901,
											"end": 29943,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 29889,
											"end": 29899,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 29885,
											"end": 29944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29825,
											"end": 29863,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 29791,
											"end": 30001,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 30379,
											"end": 30380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30356,
											"end": 30357,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30279,
											"end": 30295,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 30198,
											"end": 30234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 30175,
											"end": 30176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 30148,
											"end": 30153,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 30121,
											"end": 30126,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 30095,
											"end": 30398,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 30471,
											"end": 30478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 30461,
											"end": 34761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 30461,
											"end": 34761,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 30634,
											"end": 30650,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 30631,
											"end": 33627,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 30631,
											"end": 33627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 30631,
											"end": 33627,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 31106,
											"end": 31113,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31062,
											"end": 31075,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 31044,
											"end": 31060,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 31040,
											"end": 31076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 31007,
											"end": 31139,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 31800,
											"end": 31807,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 31782,
											"end": 31798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 31778,
											"end": 31808,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 31936,
											"end": 31951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 31923,
											"end": 31934,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 31919,
											"end": 31952,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 32073,
											"end": 32083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32056,
											"end": 32071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32053,
											"end": 32084,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 32050,
											"end": 33029,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 32050,
											"end": 33029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 32050,
											"end": 33029,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 32875,
											"end": 32901,
											"name": "PUSH",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 32780,
											"end": 32790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 32768,
											"end": 32778,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32764,
											"end": 32791,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 32657,
											"end": 32672,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 32592,
											"end": 32607,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 32539,
											"end": 32718,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 32490,
											"end": 32833,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 32445,
											"end": 32939,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 32358,
											"end": 32369,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 32305,
											"end": 32315,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 32288,
											"end": 32303,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 32284,
											"end": 32316,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 32239,
											"end": 32407,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 32198,
											"end": 32973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32160,
											"end": 32164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 32123,
											"end": 33003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 32115,
											"end": 33003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 32115,
											"end": 33003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 32050,
											"end": 33029,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 32050,
											"end": 33029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33289,
											"end": 33294,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 33272,
											"end": 33286,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 33266,
											"end": 33270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 33262,
											"end": 33287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 33259,
											"end": 33295,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 33256,
											"end": 33605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 33256,
											"end": 33605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 33256,
											"end": 33605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 33425,
											"end": 33441,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 33422,
											"end": 33423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33419,
											"end": 33420,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 33404,
											"end": 33442,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 33562,
											"end": 33578,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 33559,
											"end": 33560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33552,
											"end": 33579,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 33256,
											"end": 33605,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 33256,
											"end": 33605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 30651,
											"end": 33627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30651,
											"end": 33627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30651,
											"end": 33627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 30631,
											"end": 33627,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 30631,
											"end": 33627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 33756,
											"end": 33806,
											"name": "PUSH",
											"source": 8,
											"value": "AFC445E200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33729,
											"end": 33730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 33697,
											"end": 33828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 33943,
											"end": 33948,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 33897,
											"end": 33941,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 33890,
											"end": 33949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34122,
											"end": 34167,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 34060,
											"end": 34096,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 34028,
											"end": 34189,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34446,
											"end": 34486,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 34440,
											"end": 34487,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 34403,
											"end": 34410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 34370,
											"end": 34513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 34304,
											"end": 34344,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 34272,
											"end": 34535,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 34726,
											"end": 34742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 34723,
											"end": 34724,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 34716,
											"end": 34743,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 30461,
											"end": 34761,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 30461,
											"end": 34761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24984,
											"end": 34775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24967,
											"end": 24968,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 24964,
											"end": 24965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24960,
											"end": 24969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24955,
											"end": 24969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24955,
											"end": 24969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 24879,
											"end": 34775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24883,
											"end": 24925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 35139,
											"end": 35163,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 35116,
											"end": 35137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 35109,
											"end": 35164,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23901,
											"end": 35174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23901,
											"end": 35174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23901,
											"end": 35174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23697,
											"end": 35180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23697,
											"end": 35180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23697,
											"end": 35180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1793,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1947,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1891,
											"end": 1917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 1995,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 2002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2022,
											"end": 2047,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2015,
											"end": 2052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2760,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2691,
											"end": 2717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2673,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2654,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2626,
											"end": 2631,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2818,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3258,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3235,
											"end": 3259,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3188,
											"end": 3212,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3171,
											"end": 3186,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3213,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3277,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 3319,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3696,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3673,
											"end": 3697,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3699,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3643,
											"end": 10753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 3998,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3961,
											"end": 4009,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3951,
											"end": 10533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4080,
											"end": 10212,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4179,
											"end": 8938,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4379,
											"end": 4395,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 7698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4376,
											"end": 7698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4876,
											"end": 4892,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4987,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5340,
											"end": 5350,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5504,
											"end": 5519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5502,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5667,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5640,
											"end": 5655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5668,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 6927,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5634,
											"end": 6927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6741,
											"end": 6767,
											"name": "PUSH",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6630,
											"end": 6640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6614,
											"end": 6641,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6491,
											"end": 6506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6418,
											"end": 6433,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6357,
											"end": 6560,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6300,
											"end": 6691,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6247,
											"end": 6813,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6144,
											"end": 6155,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6034,
											"end": 6044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5965,
											"end": 5980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 6094,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5855,
											"end": 6201,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5806,
											"end": 6855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5715,
											"end": 6893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 6893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5707,
											"end": 6893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 6927,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5634,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7224,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7225,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7186,
											"end": 7668,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7186,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 7186,
											"end": 7668,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7417,
											"end": 7433,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7617,
											"end": 7633,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7186,
											"end": 7668,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 7186,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 7698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 7698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4396,
											"end": 7698,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 7698,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4376,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 7964,
											"name": "PUSH",
											"source": 8,
											"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7846,
											"end": 7887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7806,
											"end": 7994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8140,
											"end": 8145,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8063,
											"end": 8106,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8023,
											"end": 8175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8286,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8204,
											"end": 8354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8434,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8390,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8383,
											"end": 8435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8471,
											"end": 8511,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8464,
											"end": 8515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8668,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8628,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8544,
											"end": 8698,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8882,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 8767,
											"end": 8808,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8912,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 8938,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4179,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9276,
											"name": "PUSH",
											"source": 8,
											"value": "9889192300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9150,
											"end": 9197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9114,
											"end": 9302,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9442,
											"end": 9447,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9363,
											"end": 9412,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9327,
											"end": 9473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9612,
											"end": 9616,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9582,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9498,
											"end": 9642,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9779,
											"end": 9781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9749,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9667,
											"end": 9807,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9948,
											"end": 9954,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9868,
											"end": 9918,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9832,
											"end": 9980,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10118,
											"end": 10164,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10041,
											"end": 10088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10190,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4080,
											"end": 10212,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4080,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10374,
											"name": "PUSH",
											"source": 8,
											"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10375,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10431,
											"end": 10436,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10403,
											"end": 10429,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10396,
											"end": 10437,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10491,
											"end": 10514,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10465,
											"end": 10489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 10515,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 10533,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 3951,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 10753,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3643,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10854,
											"end": 10864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10824,
											"end": 10865,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10942,
											"end": 10943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10932,
											"end": 10940,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10925,
											"end": 10944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 10954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 10954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 10954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 10960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11883,
											"end": 11888,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 12115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 11861,
											"end": 12115,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11942,
											"end": 11968,
											"name": "PUSH",
											"source": 8,
											"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11916,
											"end": 11940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11909,
											"end": 11969,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12021,
											"end": 12026,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12019,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11986,
											"end": 12027,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12077,
											"end": 12100,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12051,
											"end": 12075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12044,
											"end": 12101,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 12115,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 11861,
											"end": 12115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12313,
											"end": 12334,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12307,
											"end": 12335,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12459,
											"end": 12488,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12430,
											"end": 12457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12489,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12539,
											"end": 12543,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12509,
											"end": 12537,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12502,
											"end": 12544,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12592,
											"end": 12594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12590,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12557,
											"end": 12595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12643,
											"end": 12653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12615,
											"end": 12641,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12608,
											"end": 12654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12914,
											"end": 12915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12870,
											"end": 12896,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12825,
											"end": 12852,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12806,
											"end": 12807,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12783,
											"end": 12788,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 12760,
											"end": 12765,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12738,
											"end": 12948,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 13003,
											"end": 16271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13180,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13161,
											"end": 15489,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13161,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 13161,
											"end": 15489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13606,
											"end": 13613,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13566,
											"end": 13579,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13548,
											"end": 13564,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13544,
											"end": 13580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13515,
											"end": 13635,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13917,
											"end": 13924,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13905,
											"end": 13915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13901,
											"end": 13925,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14045,
											"end": 14060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14032,
											"end": 14043,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 14028,
											"end": 14061,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14174,
											"end": 14184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14157,
											"end": 14172,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14154,
											"end": 14185,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14151,
											"end": 14920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14151,
											"end": 14920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 14151,
											"end": 14920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14782,
											"end": 14808,
											"name": "PUSH",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 14695,
											"end": 14705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14683,
											"end": 14693,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14679,
											"end": 14706,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14621,
											"end": 14636,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14604,
											"end": 14619,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14600,
											"end": 14637,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14555,
											"end": 14744,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14514,
											"end": 14842,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14435,
											"end": 14446,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 14386,
											"end": 14396,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14369,
											"end": 14384,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14365,
											"end": 14397,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14324,
											"end": 14480,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14287,
											"end": 14872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14253,
											"end": 14257,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14220,
											"end": 14898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14212,
											"end": 14898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14212,
											"end": 14898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14151,
											"end": 14920,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 14151,
											"end": 14920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15169,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15137,
											"end": 15162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15134,
											"end": 15170,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15131,
											"end": 15471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15131,
											"end": 15471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 15131,
											"end": 15471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15315,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15296,
											"end": 15297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15293,
											"end": 15294,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15278,
											"end": 15316,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 15432,
											"end": 15448,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15449,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15131,
											"end": 15471,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 15131,
											"end": 15471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 15489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 15489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13181,
											"end": 15489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13161,
											"end": 15489,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 13161,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15664,
											"end": 15707,
											"name": "PUSH",
											"source": 8,
											"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15601,
											"end": 15642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15573,
											"end": 15725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15794,
											"end": 15799,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15792,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15742,
											"end": 15800,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15868,
											"end": 15872,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15824,
											"end": 15866,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15817,
											"end": 15873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15939,
											"end": 15941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 15937,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 15890,
											"end": 15942,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16008,
											"end": 16018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15966,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 15959,
											"end": 16019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16089,
											"end": 16090,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16087,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 16036,
											"end": 16091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16239,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 16136,
											"end": 16177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16108,
											"end": 16257,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13003,
											"end": 16271,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 13003,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16372,
											"end": 16382,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16349,
											"end": 16370,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16342,
											"end": 16383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16460,
											"end": 16461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16450,
											"end": 16458,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 16443,
											"end": 16462,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 16472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11798,
											"end": 16472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11564,
											"end": 16478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17471,
											"end": 17476,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17477,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 17449,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 17449,
											"end": 17703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17530,
											"end": 17556,
											"name": "PUSH",
											"source": 8,
											"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17504,
											"end": 17528,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17609,
											"end": 17614,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17581,
											"end": 17607,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17574,
											"end": 17615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17665,
											"end": 17688,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17639,
											"end": 17663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17632,
											"end": 17689,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17449,
											"end": 17703,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 17449,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17895,
											"end": 17916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17889,
											"end": 17917,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17952,
											"end": 17960,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 17946,
											"end": 17961,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17996,
											"end": 18004,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 17990,
											"end": 18005,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18040,
											"end": 18048,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 18034,
											"end": 18049,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 18215,
											"end": 18249,
											"name": "PUSH",
											"source": 8,
											"value": "F242432A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18165,
											"end": 18197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18318,
											"end": 18322,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 18283,
											"end": 18316,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18276,
											"end": 18323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18376,
											"end": 18378,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 18343,
											"end": 18374,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 18336,
											"end": 18379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18432,
											"end": 18442,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18399,
											"end": 18430,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 18392,
											"end": 18443,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18500,
											"end": 18506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18463,
											"end": 18498,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18456,
											"end": 18507,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18602,
											"end": 18645,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 18544,
											"end": 18584,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 18520,
											"end": 18659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18721,
											"end": 18722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18679,
											"end": 18719,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 18672,
											"end": 18723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19012,
											"end": 19013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18993,
											"end": 18994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18944,
											"end": 18975,
											"name": "PUSH",
											"source": 8,
											"value": "C4"
										},
										{
											"begin": 18894,
											"end": 18926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18875,
											"end": 18876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18852,
											"end": 18857,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 18829,
											"end": 18834,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 18807,
											"end": 19027,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 19092,
											"end": 19099,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19082,
											"end": 22355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 19082,
											"end": 22355,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19243,
											"end": 19259,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 19240,
											"end": 21568,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19240,
											"end": 21568,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 19240,
											"end": 21568,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19685,
											"end": 19692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19645,
											"end": 19658,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 19627,
											"end": 19643,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 19623,
											"end": 19659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19594,
											"end": 19714,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19996,
											"end": 20003,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19984,
											"end": 19994,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 19980,
											"end": 20004,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20124,
											"end": 20139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20111,
											"end": 20122,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 20107,
											"end": 20140,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20253,
											"end": 20263,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20236,
											"end": 20251,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20233,
											"end": 20264,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20230,
											"end": 20999,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20230,
											"end": 20999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 20230,
											"end": 20999,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20861,
											"end": 20887,
											"name": "PUSH",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 20774,
											"end": 20784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20762,
											"end": 20772,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20758,
											"end": 20785,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20700,
											"end": 20715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20683,
											"end": 20698,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20679,
											"end": 20716,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20634,
											"end": 20823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20593,
											"end": 20921,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20514,
											"end": 20525,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 20465,
											"end": 20475,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20448,
											"end": 20463,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20444,
											"end": 20476,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20403,
											"end": 20559,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20366,
											"end": 20951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20332,
											"end": 20336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20299,
											"end": 20977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20291,
											"end": 20977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20291,
											"end": 20977,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20230,
											"end": 20999,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 20230,
											"end": 20999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21243,
											"end": 21248,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 21226,
											"end": 21240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21220,
											"end": 21224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21216,
											"end": 21241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21213,
											"end": 21249,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21210,
											"end": 21550,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21210,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 21210,
											"end": 21550,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21378,
											"end": 21394,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21375,
											"end": 21376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21372,
											"end": 21373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21357,
											"end": 21395,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 21511,
											"end": 21527,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 21508,
											"end": 21509,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21501,
											"end": 21528,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 21210,
											"end": 21550,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 21210,
											"end": 21550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19260,
											"end": 21568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19260,
											"end": 21568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19260,
											"end": 21568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19240,
											"end": 21568,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 19240,
											"end": 21568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21743,
											"end": 21786,
											"name": "PUSH",
											"source": 8,
											"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21680,
											"end": 21721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21652,
											"end": 21804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21873,
											"end": 21878,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 21828,
											"end": 21871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 21821,
											"end": 21879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21947,
											"end": 21951,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 21903,
											"end": 21945,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 21896,
											"end": 21952,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22018,
											"end": 22020,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 21976,
											"end": 22016,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 21969,
											"end": 22021,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22097,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22045,
											"end": 22085,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 22038,
											"end": 22098,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22168,
											"end": 22174,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 22122,
											"end": 22166,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 22115,
											"end": 22175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22283,
											"end": 22323,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 22220,
											"end": 22261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22192,
											"end": 22341,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 19082,
											"end": 22355,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 19082,
											"end": 22355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22386,
											"end": 22394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22376,
											"end": 22384,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 22369,
											"end": 22395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22447,
											"end": 22455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22437,
											"end": 22445,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 22430,
											"end": 22456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22508,
											"end": 22516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22498,
											"end": 22506,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 22491,
											"end": 22517,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22640,
											"end": 22650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22617,
											"end": 22638,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 22610,
											"end": 22651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22728,
											"end": 22729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22718,
											"end": 22726,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 22711,
											"end": 22730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 22740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 22740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 22740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 22740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17386,
											"end": 22740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 22746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 843,
											"end": 851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 903,
											"end": 906,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 896,
											"end": 900,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 888,
											"end": 894,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 884,
											"end": 901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 880,
											"end": 907,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 870,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 870,
											"end": 992,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 911,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 911,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 911,
											"end": 990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 911,
											"end": 990,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 911,
											"end": 990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 870,
											"end": 992,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 870,
											"end": 992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1031,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1054,
											"end": 1072,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1043,
											"end": 1073,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1157,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1040,
											"end": 1157,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1076,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1076,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1155,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1076,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1157,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1040,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1194,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1244,
											"end": 1247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1228,
											"end": 1234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1241,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1214,
											"end": 1222,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1248,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1332,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1204,
											"end": 1332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1251,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1251,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1204,
											"end": 1332,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1204,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 735,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1510,
											"end": 1519,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1508,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1520,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1525,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1609,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1490,
											"end": 1609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1528,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1528,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1607,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1528,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1609,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 1490,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1648,
											"end": 1679,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1728,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1728,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1807,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1728,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1948,
											"end": 1955,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 1946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1841,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 1956,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1841,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1823,
											"end": 1956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1619,
											"end": 1966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2128,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1979,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2044,
											"end": 2122,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2128,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2249,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2134,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2236,
											"end": 2241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2219,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2242,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 2219,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2207,
											"end": 2243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2397,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2466,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2397,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2255,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2701,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2705,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 2705,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2784,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2705,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2664,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2818,
											"end": 2824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2825,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2837,
											"end": 2867,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2870,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2870,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2834,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 2989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2960,
											"end": 2989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2960,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3018,
											"end": 3035,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3004,
											"end": 3036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3042,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2998,
											"end": 3126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3045,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3045,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3126,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2998,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3415,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3380,
											"end": 3499,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3418,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3418,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3499,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3380,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3538,
											"end": 3569,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3588,
											"end": 3594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3585,
											"end": 3615,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3618,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3618,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3618,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3582,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3818,
											"end": 3827,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3731,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3731,
											"end": 3846,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 3731,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3846,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3846,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3713,
											"end": 3846,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3895,
											"end": 3927,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3946,
											"end": 3952,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3943,
											"end": 3973,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4057,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3940,
											"end": 4057,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3976,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3976,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4055,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 3976,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 4057,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 3940,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 4205,
											"end": 4212,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4194,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4089,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4213,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 4089,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4071,
											"end": 4213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 4223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 4230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4380,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4421,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4394,
											"end": 4426,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4510,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4391,
											"end": 4510,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4429,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 4429,
											"end": 4508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4429,
											"end": 4508,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4429,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4510,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4391,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4562,
											"end": 4579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4580,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4625,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4626,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4593,
											"end": 4710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 4629,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4629,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4710,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4593,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4858,
											"end": 4865,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4847,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4834,
											"end": 4856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4742,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4742,
											"end": 4866,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4742,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4866,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4866,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4724,
											"end": 4866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4520,
											"end": 4876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4236,
											"end": 4883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5015,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 4889,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4926,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 5008,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4955,
											"end": 5009,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5021,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5058,
											"end": 5065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5105,
											"end": 5110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 5087,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5087,
											"end": 5111,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 5087,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5245,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5123,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 5196,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5220,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 5196,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5189,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5186,
											"end": 5221,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 5176,
											"end": 5239,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5236,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5237,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5239,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 5176,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5297,
											"end": 5302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5378,
											"end": 5383,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 5351,
											"end": 5384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 5351,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5251,
											"end": 5390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5486,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5396,
											"end": 5486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5466,
											"end": 5479,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5480,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5396,
											"end": 5486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5608,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5492,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5577,
											"end": 5582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 5562,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5583,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5562,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5552,
											"end": 5584,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5588,
											"end": 5600,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5682,
											"end": 5702,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 5735,
											"end": 5740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 5711,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5711,
											"end": 5741,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 5711,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5818,
											"end": 5824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5877,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5863,
											"end": 5872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5854,
											"end": 5861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5873,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5846,
											"end": 5878,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5843,
											"end": 5962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 5881,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 5881,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5962,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 5843,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6001,
											"end": 6002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6071,
											"end": 6078,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6068,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6051,
											"end": 6060,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 6026,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6026,
											"end": 6079,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6026,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6079,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6154,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6154,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6154,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6154,
											"end": 6204,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 6154,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6099,
											"end": 6214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 6221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6407,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6227,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6275,
											"end": 6352,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6362,
											"end": 6377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6396,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6393,
											"end": 6394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6401,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6531,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6413,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6518,
											"end": 6523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6500,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6524,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6500,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6525,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6413,
											"end": 6531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6646,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6537,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6633,
											"end": 6638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6618,
											"end": 6639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6639,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 6618,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6613,
											"end": 6616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6640,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6807,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 6808,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6782,
											"end": 6808,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6818,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6884,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6871,
											"end": 6888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6818,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 6818,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6818,
											"end": 6889,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 6818,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6961,
											"end": 6963,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 6899,
											"end": 6965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 6965,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6899,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7092,
											"end": 7101,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7176,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7160,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 7116,
											"end": 7181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7116,
											"end": 7181,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 7116,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6978,
											"end": 7188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7194,
											"end": 7374,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 7194,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7242,
											"end": 7319,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7239,
											"end": 7240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7320,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7339,
											"end": 7343,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 7336,
											"end": 7337,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7329,
											"end": 7344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7363,
											"end": 7367,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7368,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7380,
											"end": 7499,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 7380,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7466,
											"end": 7471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7475,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7453,
											"end": 7493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7491,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7493,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 7453,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7380,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7380,
											"end": 7499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7571,
											"end": 7576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7616,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 7672,
											"end": 7677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 7625,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 7625,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7806,
											"end": 7815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7797,
											"end": 7804,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7793,
											"end": 7816,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7821,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7905,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7786,
											"end": 7905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7824,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 7824,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7824,
											"end": 7903,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7824,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7905,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7786,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7944,
											"end": 7945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 8034,
											"end": 8041,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 7969,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 8042,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7969,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7959,
											"end": 8042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7915,
											"end": 8052,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 8059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8152,
											"end": 8159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8171,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8176,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8260,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8141,
											"end": 8260,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 8179,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8141,
											"end": 8260,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8141,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8299,
											"end": 8300,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 8369,
											"end": 8376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8358,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8345,
											"end": 8367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 8324,
											"end": 8377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8377,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 8324,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"conduit/Conduit.sol",
								"conduit/ConduitController.sol",
								"conduit/lib/ConduitConstants.sol",
								"conduit/lib/ConduitEnums.sol",
								"conduit/lib/ConduitStructs.sol",
								"interfaces/ConduitControllerInterface.sol",
								"interfaces/ConduitInterface.sol",
								"interfaces/TokenTransferrerErrors.sol",
								"lib/TokenTransferrer.sol",
								"lib/TokenTransferrerConstants.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
							"updateChannel(address,bool)": "c4e8fcb5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch item transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 item transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the item transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"Conduit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"In the constructor, set the deployer as the controller.\"},\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"This contract serves as an originator for \\\"proxied\\\" transfers. Each         conduit is deployed and controlled by a \\\"conduit controller\\\" that can         add and remove \\\"channels\\\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately \\u2014 be extremely         cautious with what conduits you give token approvals to!*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"conduit/Conduit.sol\":\"Conduit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"conduit/Conduit.sol\":{\"keccak256\":\"0xd0a8666160c7c2c1bd74ee4144b0aed727b8a5ee4b3ef9502011bc3e96edd969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9932acb889d618604c52dfa4f241e5f3f793cf489459bb9b858fc768e05b59b\",\"dweb:/ipfs/QmX5UQnq55ZbxLinZPnbrRfNqg96dugYxkkj628PTh2ZGn\"]},\"conduit/lib/ConduitConstants.sol\":{\"keccak256\":\"0x4b70ada07bfe97fc4cf18e23fbf82831c80ab2251b3ef455b4d0012a980c6f76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71255bb8a6927f7e65d7462b3971eec603ad7e0d72d9a4a4288d2d738ff5a085\",\"dweb:/ipfs/Qma6uCkQdMLE9dKcCTJ9HiChewSPAf3a6mybHSXm9tKxiF\"]},\"conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"interfaces/ConduitInterface.sol\":{\"keccak256\":\"0xbfcd43fd8c0f3eccfb6b5c10a4c4b794f3004ff08152116f8b1ea6512af336e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0409357d577d488ad2ce54d258888cb1001f23d52b8140a19abc873cff15a2e\",\"dweb:/ipfs/QmYPuHK15VEziDVrdCSxFcBFbgHGE9K3BTSmbz1nAjtLBH\"]},\"interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]},\"lib/TokenTransferrer.sol\":{\"keccak256\":\"0xfcfa2be72ad8a3c2c096f9dc892b7040b9efc13315fc283ffe1a407d1c974ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce58309f3fddfed9f7b779e3cb99aa629335bd11a3387d9ea52261f87ac1219c\",\"dweb:/ipfs/QmRVH8o3Q7ybgerhqduSGrH9gVemfe2BZbGhTfvBABNtbq\"]},\"lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xb55807b4999544c4e336a9ea22a963ed50620522b5406d0cd8d5b6d790a2a322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730aa2bca27798a700577ddedd5e7ec4c28d6ade0cefcceb3431af89d65946ed\",\"dweb:/ipfs/QmQeaMEM6e7oTeoa3fjWf1F3Hs2CEh49GK4qN6p4rbaBeR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 22,
								"contract": "conduit/Conduit.sol:Conduit",
								"label": "_channels",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "In the constructor, set the deployer as the controller."
							},
							"execute((uint8,address,address,address,uint256,uint256)[])": {
								"notice": "Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."
							},
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": {
								"notice": "Execute a sequence of batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."
							},
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": {
								"notice": "Execute a sequence of transfers, both single ERC20/721/1155 item         transfers as well as batch 1155 item transfers. Only a caller         with an open channel can call this function. Note that channels         are expected to implement reentrancy protection if desired, and         that cross-channel reentrancy may be possible if the conduit has         multiple open channels at once. Also note that channels are         expected to implement checks against transferring any zero-amount         items if that constraint is desired."
							},
							"updateChannel(address,bool)": {
								"notice": "Open or close a given channel. Only callable by the controller."
							}
						},
						"notice": "This contract serves as an originator for \"proxied\" transfers. Each         conduit is deployed and controlled by a \"conduit controller\" that can         add and remove \"channels\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately — be extremely         cautious with what conduits you give token approvals to!*",
						"version": 1
					}
				}
			},
			"conduit/ConduitController.sol": {
				"ConduitController": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "CallerIsNotNewPotentialOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "CallerIsNotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ChannelOutOfRange",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ConduitAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCreator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "NewPotentialOwnerAlreadySet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "NewPotentialOwnerIsZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoConduit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "NoPotentialOwnerCurrentlySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"name": "NewConduit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "PotentialOwnerUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "cancelOwnershipTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"name": "createConduit",
							"outputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "channelIndex",
									"type": "uint256"
								}
							],
							"name": "getChannel",
							"outputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"name": "getChannelStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getChannels",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "channels",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"name": "getConduit",
							"outputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConduitCodeHashes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "creationCodeHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "runtimeCodeHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getPotentialOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "potentialOwner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getTotalChannels",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalChannels",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "updateChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "0age",
						"errors": {
							"CallerIsNotNewPotentialOwner(address)": [
								{
									"details": "Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question."
								}
							],
							"CallerIsNotOwner(address)": [
								{
									"details": "Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question."
								}
							],
							"ChannelOutOfRange(address)": [
								{
									"details": "Revert with an error when attempting to retrieve a channel using an      index that is out of range."
								}
							],
							"ConduitAlreadyExists(address)": [
								{
									"details": "Revert with an error when attempting to create a conduit that      already exists."
								}
							],
							"InvalidCreator()": [
								{
									"details": "Revert with an error when attempting to create a new conduit using a      conduit key where the first twenty bytes of the key do not match the      address of the caller."
								}
							],
							"InvalidInitialOwner()": [
								{
									"details": "Revert with an error when attempting to create a new conduit when no      initial owner address is supplied."
								}
							],
							"NewPotentialOwnerAlreadySet(address,address)": [
								{
									"details": "Revert with an error when attempting to set a new potential owner      that is already set."
								}
							],
							"NewPotentialOwnerIsZeroAddress(address)": [
								{
									"details": "Revert with an error when attempting to register a new potential      owner and supplying the null address."
								}
							],
							"NoConduit()": [
								{
									"details": "Revert with an error when attempting to interact with a conduit that      does not yet exist."
								}
							],
							"NoPotentialOwnerCurrentlySet(address)": [
								{
									"details": "Revert with an error when attempting to cancel ownership transfer      when no new potential owner is currently set."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership(address)": {
								"params": {
									"conduit": "The conduit for which to accept ownership."
								}
							},
							"cancelOwnershipTransfer(address)": {
								"params": {
									"conduit": "The conduit for which to cancel ownership transfer."
								}
							},
							"constructor": {
								"details": "Initialize contract by deploying a conduit and setting the creation      code and runtime code hashes as immutable arguments."
							},
							"createConduit(bytes32,address)": {
								"params": {
									"conduitKey": "The conduit key used to deploy the conduit. Note that                     the first twenty bytes of the conduit key must match                     the caller of this contract.",
									"initialOwner": "The initial owner to set for the new conduit."
								},
								"returns": {
									"conduit": "The address of the newly deployed conduit."
								}
							},
							"getChannel(address,uint256)": {
								"params": {
									"channelIndex": "The index of the channel in question.",
									"conduit": "The conduit for which to retrieve the open channel."
								},
								"returns": {
									"channel": "The open channel, if any, at the specified channel index."
								}
							},
							"getChannelStatus(address,address)": {
								"params": {
									"channel": "The channel for which to retrieve the status.",
									"conduit": "The conduit for which to retrieve the channel status."
								},
								"returns": {
									"isOpen": "The status of the channel on the given conduit."
								}
							},
							"getChannels(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve open channels."
								},
								"returns": {
									"channels": "An array of open channels on the given conduit."
								}
							},
							"getConduit(bytes32)": {
								"params": {
									"conduitKey": "The conduit key used to derive the conduit."
								},
								"returns": {
									"conduit": "The derived address of the conduit.",
									"exists": " A boolean indicating whether the derived conduit has been                 deployed or not."
								}
							},
							"getConduitCodeHashes()": {
								"details": "Retrieve the conduit creation code and runtime code hashes."
							},
							"getKey(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the associated conduit                key."
								},
								"returns": {
									"conduitKey": "The conduit key used to deploy the supplied conduit."
								}
							},
							"getPotentialOwner(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the potential owner."
								},
								"returns": {
									"potentialOwner": "The potential owner, if any, for the conduit."
								}
							},
							"getTotalChannels(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the total channel count."
								},
								"returns": {
									"totalChannels": "The total number of open channels for the conduit."
								}
							},
							"ownerOf(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the associated owner."
								},
								"returns": {
									"owner": "The owner of the supplied conduit."
								}
							},
							"transferOwnership(address,address)": {
								"params": {
									"conduit": "The conduit for which to initiate ownership transfer.",
									"newPotentialOwner": "The new potential owner of the conduit."
								}
							},
							"updateChannel(address,address,bool)": {
								"params": {
									"channel": "The channel to open or close on the conduit.",
									"conduit": "The conduit for which to open or close the channel.",
									"isOpen": "A boolean indicating whether to open or close the channel."
								}
							}
						},
						"title": "ConduitController",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"conduit/ConduitController.sol\":556:19978  contract ConduitController is ConduitControllerInterface {... */\n  mstore(0x40, 0xc0)\n    /* \"conduit/ConduitController.sol\":1121:1569  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"conduit/ConduitController.sol\":1262:1288  type(Conduit).creationCode */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  tag_4\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  0x20\n  dup3\n  add\n  dup2\n  sub\n  dup3\n  mstore\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  0x40\n  mstore\n  pop\n    /* \"conduit/ConduitController.sol\":1252:1289  keccak256(type(Conduit).creationCode) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"conduit/ConduitController.sol\":1222:1289  _CONDUIT_CREATION_CODE_HASH = keccak256(type(Conduit).creationCode) */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"conduit/ConduitController.sol\":1360:1379  Conduit zeroConduit */\n  0x00\n    /* \"conduit/ConduitController.sol\":1409:1410  0 */\n  dup1\n    /* \"conduit/ConduitController.sol\":1401:1411  bytes32(0) */\n  0x00\n  shl\n    /* \"conduit/ConduitController.sol\":1382:1415  new Conduit{ salt: bytes32(0) }() */\n  mload(0x40)\n  tag_6\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  dup2\n  swap1\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  0x00\n  create2\n  swap1\n  pop\n  dup1\n  iszero\n  dup1\n  iszero\n  tag_7\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_7:\n  pop\n    /* \"conduit/ConduitController.sol\":1360:1415  Conduit zeroConduit = new Conduit{ salt: bytes32(0) }() */\n  swap1\n  pop\n    /* \"conduit/ConduitController.sol\":1541:1552  zeroConduit */\n  dup1\n    /* \"conduit/ConduitController.sol\":1533:1562  address(zeroConduit).codehash */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodehash\n    /* \"conduit/ConduitController.sol\":1504:1562  _CONDUIT_RUNTIME_CODE_HASH = address(zeroConduit).codehash */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"conduit/ConduitController.sol\":1135:1569  {... */\n  pop\n    /* \"conduit/ConduitController.sol\":556:19978  contract ConduitController is ConduitControllerInterface {... */\n  jump(tag_8)\ntag_5:\n  dataSize(sub_1)\n  dup1\n  dataOffset(sub_1)\n  dup4\n  codecopy\n  add\n  swap1\n  jump\t// out\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xb5ec0f20465329e13a2d85270cb78f65c575ccff472e4a205299224e150cb7e2\")\n  0x00\n  assignImmutable(\"0x5123ab44a95b9e316b860f114ea520934458fa7bff216e60c6945263bff2b6f8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"conduit/ConduitController.sol\":556:19978  contract ConduitController is ConduitControllerInterface {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d435421\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x7b37e561\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x7b37e561\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8b9e028b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x906c87cc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x93790f44\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x6d435421\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6e9bfd9f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x794593bc\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x14afd79e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x14afd79e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x33bc8572\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e3f9580\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51710e45\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x027cc764\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a96ad39\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x13ad9cab\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"conduit/ConduitController.sol\":17000:17668  function getChannel(address conduit, uint256 channelIndex)... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":18493:18891  function getConduitCodeHashes()... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":5181:8161  function updateChannel(... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"conduit/ConduitController.sol\":12008:12335  function ownerOf(address conduit)... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":15483:15875  function getChannelStatus(address conduit, address channel)... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":16151:16525  function getTotalChannels(address conduit)... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":10764:11773  function acceptOwnership(address conduit) external override {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"conduit/ConduitController.sol\":8654:9577  function transferOwnership(address conduit, address newPotentialOwner)... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"conduit/ConduitController.sol\":13497:14281  function getConduit(bytes32 conduitKey)... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":2328:4454  function createConduit(bytes32 conduitKey, address initialOwner)... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":9841:10489  function cancelOwnershipTransfer(address conduit) external override {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"conduit/ConduitController.sol\":18043:18399  function getChannels(address conduit)... */\n    tag_14:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":14752:15126  function getPotentialOwner(address conduit)... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":12654:13033  function getKey(address conduit)... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"conduit/ConduitController.sol\":17000:17668  function getChannel(address conduit, uint256 channelIndex)... */\n    tag_23:\n        /* \"conduit/ConduitController.sol\":17123:17138  address channel */\n      0x00\n        /* \"conduit/ConduitController.sol\":17209:17238  _assertConduitExists(conduit) */\n      tag_85\n        /* \"conduit/ConduitController.sol\":17230:17237  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":17209:17229  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":17209:17238  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_85:\n        /* \"conduit/ConduitController.sol\":17327:17348  uint256 totalChannels */\n      0x00\n        /* \"conduit/ConduitController.sol\":17351:17360  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":17351:17369  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":17361:17368  conduit */\n      dup6\n        /* \"conduit/ConduitController.sol\":17351:17369  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":17351:17378  _conduits[conduit].channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":17351:17385  _conduits[conduit].channels.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":17327:17385  uint256 totalChannels = _conduits[conduit].channels.length */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":17475:17488  totalChannels */\n      dup1\n        /* \"conduit/ConduitController.sol\":17459:17471  channelIndex */\n      dup4\n        /* \"conduit/ConduitController.sol\":17459:17488  channelIndex >= totalChannels */\n      lt\n        /* \"conduit/ConduitController.sol\":17455:17548  if (channelIndex >= totalChannels) {... */\n      tag_87\n      jumpi\n        /* \"conduit/ConduitController.sol\":17529:17536  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":17511:17537  ChannelOutOfRange(conduit) */\n      mload(0x40)\n      0x6ceb340b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":17455:17548  if (channelIndex >= totalChannels) {... */\n    tag_87:\n        /* \"conduit/ConduitController.sol\":17620:17629  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":17620:17638  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":17630:17637  conduit */\n      dup6\n        /* \"conduit/ConduitController.sol\":17620:17638  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":17620:17647  _conduits[conduit].channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":17648:17660  channelIndex */\n      dup4\n        /* \"conduit/ConduitController.sol\":17620:17661  _conduits[conduit].channels[channelIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_89\n      jumpi\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n    tag_89:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":17610:17661  channel = _conduits[conduit].channels[channelIndex] */\n      swap2\n      pop\n        /* \"conduit/ConduitController.sol\":17144:17668  {... */\n      pop\n        /* \"conduit/ConduitController.sol\":17000:17668  function getChannel(address conduit, uint256 channelIndex)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":18493:18891  function getConduitCodeHashes()... */\n    tag_27:\n        /* \"conduit/ConduitController.sol\":18589:18613  bytes32 creationCodeHash */\n      0x00\n        /* \"conduit/ConduitController.sol\":18615:18638  bytes32 runtimeCodeHash */\n      dup1\n        /* \"conduit/ConduitController.sol\":18738:18765  _CONDUIT_CREATION_CODE_HASH */\n      immutable(\"0x5123ab44a95b9e316b860f114ea520934458fa7bff216e60c6945263bff2b6f8\")\n        /* \"conduit/ConduitController.sol\":18719:18765  creationCodeHash = _CONDUIT_CREATION_CODE_HASH */\n      swap2\n      pop\n        /* \"conduit/ConduitController.sol\":18858:18884  _CONDUIT_RUNTIME_CODE_HASH */\n      immutable(\"0xb5ec0f20465329e13a2d85270cb78f65c575ccff472e4a205299224e150cb7e2\")\n        /* \"conduit/ConduitController.sol\":18840:18884  runtimeCodeHash = _CONDUIT_RUNTIME_CODE_HASH */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":18493:18891  function getConduitCodeHashes()... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":5181:8161  function updateChannel(... */\n    tag_33:\n        /* \"conduit/ConduitController.sol\":5387:5423  _assertCallerIsConduitOwner(conduit) */\n      tag_95\n        /* \"conduit/ConduitController.sol\":5415:5422  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":5387:5414  _assertCallerIsConduitOwner */\n      tag_96\n        /* \"conduit/ConduitController.sol\":5387:5423  _assertCallerIsConduitOwner(conduit) */\n      jump\t// in\n    tag_95:\n        /* \"conduit/ConduitController.sol\":5502:5509  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":5485:5524  ConduitInterface(conduit).updateChannel */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc4e8fcb5\n        /* \"conduit/ConduitController.sol\":5525:5532  channel */\n      dup4\n        /* \"conduit/ConduitController.sol\":5534:5540  isOpen */\n      dup4\n        /* \"conduit/ConduitController.sol\":5485:5541  ConduitInterface(conduit).updateChannel(channel, isOpen) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_97:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n        /* \"conduit/ConduitController.sol\":5631:5674  ConduitProperties storage conduitProperties */\n      0x00\n        /* \"conduit/ConduitController.sol\":5677:5686  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":5677:5695  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":5687:5694  conduit */\n      dup6\n        /* \"conduit/ConduitController.sol\":5677:5695  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":5631:5695  ConduitProperties storage conduitProperties = _conduits[conduit] */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":5787:5814  uint256 channelIndexPlusOne */\n      0x00\n        /* \"conduit/ConduitController.sol\":5831:5848  conduitProperties */\n      dup2\n        /* \"conduit/ConduitController.sol\":5831:5870  conduitProperties.channelIndexesPlusOne */\n      0x04\n      add\n        /* \"conduit/ConduitController.sol\":5831:5879  conduitProperties.channelIndexesPlusOne[channel] */\n      0x00\n        /* \"conduit/ConduitController.sol\":5871:5878  channel */\n      dup6\n        /* \"conduit/ConduitController.sol\":5831:5879  conduitProperties.channelIndexesPlusOne[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"conduit/ConduitController.sol\":5787:5889  uint256 channelIndexPlusOne = (... */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":5977:6003  bool channelPreviouslyOpen */\n      0x00\n        /* \"conduit/ConduitController.sol\":6029:6030  0 */\n      dup1\n        /* \"conduit/ConduitController.sol\":6006:6025  channelIndexPlusOne */\n      dup3\n        /* \"conduit/ConduitController.sol\":6006:6030  channelIndexPlusOne != 0 */\n      eq\n      iszero\n        /* \"conduit/ConduitController.sol\":5977:6030  bool channelPreviouslyOpen = channelIndexPlusOne != 0 */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":6121:6127  isOpen */\n      dup4\n        /* \"conduit/ConduitController.sol\":6121:6153  isOpen && !channelPreviouslyOpen */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"conduit/ConduitController.sol\":6132:6153  channelPreviouslyOpen */\n      dup1\n        /* \"conduit/ConduitController.sol\":6131:6153  !channelPreviouslyOpen */\n      iszero\n        /* \"conduit/ConduitController.sol\":6121:6153  isOpen && !channelPreviouslyOpen */\n    tag_101:\n        /* \"conduit/ConduitController.sol\":6117:8155  if (isOpen && !channelPreviouslyOpen) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"conduit/ConduitController.sol\":6239:6256  conduitProperties */\n      dup3\n        /* \"conduit/ConduitController.sol\":6239:6265  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":6271:6278  channel */\n      dup6\n        /* \"conduit/ConduitController.sol\":6239:6279  conduitProperties.channels.push(channel) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":6442:6459  conduitProperties */\n      dup3\n        /* \"conduit/ConduitController.sol\":6442:6468  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":6442:6475  conduitProperties.channels.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":6373:6390  conduitProperties */\n      dup4\n        /* \"conduit/ConduitController.sol\":6373:6412  conduitProperties.channelIndexesPlusOne */\n      0x04\n      add\n        /* \"conduit/ConduitController.sol\":6373:6421  conduitProperties.channelIndexesPlusOne[channel] */\n      0x00\n        /* \"conduit/ConduitController.sol\":6413:6420  channel */\n      dup8\n        /* \"conduit/ConduitController.sol\":6373:6421  conduitProperties.channelIndexesPlusOne[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":6373:6489  conduitProperties.channelIndexesPlusOne[channel] = (... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":6117:8155  if (isOpen && !channelPreviouslyOpen) {... */\n      jump(tag_104)\n    tag_102:\n        /* \"conduit/ConduitController.sol\":6511:6517  isOpen */\n      dup4\n        /* \"conduit/ConduitController.sol\":6510:6517  !isOpen */\n      iszero\n        /* \"conduit/ConduitController.sol\":6510:6542  !isOpen && channelPreviouslyOpen */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"conduit/ConduitController.sol\":6521:6542  channelPreviouslyOpen */\n      dup1\n        /* \"conduit/ConduitController.sol\":6510:6542  !isOpen && channelPreviouslyOpen */\n    tag_105:\n        /* \"conduit/ConduitController.sol\":6506:8155  if (!isOpen && channelPreviouslyOpen) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"conduit/ConduitController.sol\":6717:6744  uint256 removedChannelIndex */\n      0x00\n        /* \"conduit/ConduitController.sol\":6963:6964  1 */\n      0x01\n        /* \"conduit/ConduitController.sol\":6941:6960  channelIndexPlusOne */\n      dup4\n        /* \"conduit/ConduitController.sol\":6941:6964  channelIndexPlusOne - 1 */\n      sub\n        /* \"conduit/ConduitController.sol\":6919:6964  removedChannelIndex = channelIndexPlusOne - 1 */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":7073:7098  uint256 finalChannelIndex */\n      0x00\n        /* \"conduit/ConduitController.sol\":7137:7138  1 */\n      0x01\n        /* \"conduit/ConduitController.sol\":7101:7118  conduitProperties */\n      dup6\n        /* \"conduit/ConduitController.sol\":7101:7127  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":7101:7134  conduitProperties.channels.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":7101:7138  conduitProperties.channels.length - 1 */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"conduit/ConduitController.sol\":7073:7138  uint256 finalChannelIndex = conduitProperties.channels.length - 1 */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":7256:7275  removedChannelIndex */\n      dup2\n        /* \"conduit/ConduitController.sol\":7235:7252  finalChannelIndex */\n      dup2\n        /* \"conduit/ConduitController.sol\":7235:7275  finalChannelIndex != removedChannelIndex */\n      eq\n        /* \"conduit/ConduitController.sol\":7231:7871  if (finalChannelIndex != removedChannelIndex) {... */\n      tag_109\n      jumpi\n        /* \"conduit/ConduitController.sol\":7375:7395  address finalChannel */\n      0x00\n        /* \"conduit/ConduitController.sol\":7420:7437  conduitProperties */\n      dup6\n        /* \"conduit/ConduitController.sol\":7420:7446  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":7447:7464  finalChannelIndex */\n      dup3\n        /* \"conduit/ConduitController.sol\":7420:7465  conduitProperties.channels[finalChannelIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_91\n      jump\t// in\n    tag_111:\n    tag_110:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":7375:7483  address finalChannel = (... */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":7632:7644  finalChannel */\n      dup1\n        /* \"conduit/ConduitController.sol\":7582:7599  conduitProperties */\n      dup7\n        /* \"conduit/ConduitController.sol\":7582:7608  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":7609:7628  removedChannelIndex */\n      dup5\n        /* \"conduit/ConduitController.sol\":7582:7629  conduitProperties.channels[removedChannelIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_91\n      jump\t// in\n    tag_114:\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":7582:7644  conduitProperties.channels[removedChannelIndex] = finalChannel */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":7819:7838  channelIndexPlusOne */\n      dup5\n        /* \"conduit/ConduitController.sol\":7741:7758  conduitProperties */\n      dup7\n        /* \"conduit/ConduitController.sol\":7741:7780  conduitProperties.channelIndexesPlusOne */\n      0x04\n      add\n        /* \"conduit/ConduitController.sol\":7741:7794  conduitProperties.channelIndexesPlusOne[finalChannel] */\n      0x00\n        /* \"conduit/ConduitController.sol\":7781:7793  finalChannel */\n      dup4\n        /* \"conduit/ConduitController.sol\":7741:7794  conduitProperties.channelIndexesPlusOne[finalChannel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":7741:7856  conduitProperties.channelIndexesPlusOne[finalChannel] = (... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":7277:7871  {... */\n      pop\n        /* \"conduit/ConduitController.sol\":7231:7871  if (finalChannelIndex != removedChannelIndex) {... */\n    tag_109:\n        /* \"conduit/ConduitController.sol\":7965:7982  conduitProperties */\n      dup5\n        /* \"conduit/ConduitController.sol\":7965:7991  conduitProperties.channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":7965:7997  conduitProperties.channels.pop() */\n      dup1\n      sload\n      dup1\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"conduit/ConduitController.sol\":8096:8113  conduitProperties */\n      dup5\n        /* \"conduit/ConduitController.sol\":8096:8135  conduitProperties.channelIndexesPlusOne */\n      0x04\n      add\n        /* \"conduit/ConduitController.sol\":8096:8144  conduitProperties.channelIndexesPlusOne[channel] */\n      0x00\n        /* \"conduit/ConduitController.sol\":8136:8143  channel */\n      dup9\n        /* \"conduit/ConduitController.sol\":8096:8144  conduitProperties.channelIndexesPlusOne[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":8089:8144  delete conduitProperties.channelIndexesPlusOne[channel] */\n      0x00\n      swap1\n      sstore\n        /* \"conduit/ConduitController.sol\":6544:8155  {... */\n      pop\n      pop\n        /* \"conduit/ConduitController.sol\":6506:8155  if (!isOpen && channelPreviouslyOpen) {... */\n    tag_106:\n        /* \"conduit/ConduitController.sol\":6117:8155  if (isOpen && !channelPreviouslyOpen) {... */\n    tag_104:\n        /* \"conduit/ConduitController.sol\":5299:8161  {... */\n      pop\n      pop\n      pop\n        /* \"conduit/ConduitController.sol\":5181:8161  function updateChannel(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":12008:12335  function ownerOf(address conduit)... */\n    tag_37:\n        /* \"conduit/ConduitController.sol\":12106:12119  address owner */\n      0x00\n        /* \"conduit/ConduitController.sol\":12190:12219  _assertConduitExists(conduit) */\n      tag_121\n        /* \"conduit/ConduitController.sol\":12211:12218  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":12190:12210  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":12190:12219  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_121:\n        /* \"conduit/ConduitController.sol\":12304:12313  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":12304:12322  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":12314:12321  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":12304:12322  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":12304:12328  _conduits[conduit].owner */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":12296:12328  owner = _conduits[conduit].owner */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":12008:12335  function ownerOf(address conduit)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":15483:15875  function getChannelStatus(address conduit, address channel)... */\n    tag_42:\n        /* \"conduit/ConduitController.sol\":15607:15618  bool isOpen */\n      0x00\n        /* \"conduit/ConduitController.sol\":15689:15718  _assertConduitExists(conduit) */\n      tag_123\n        /* \"conduit/ConduitController.sol\":15710:15717  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":15689:15709  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":15689:15718  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_123:\n        /* \"conduit/ConduitController.sol\":15867:15868  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":15814:15823  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":15814:15832  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":15824:15831  conduit */\n      dup6\n        /* \"conduit/ConduitController.sol\":15814:15832  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":15814:15854  _conduits[conduit].channelIndexesPlusOne */\n      0x04\n      add\n        /* \"conduit/ConduitController.sol\":15814:15863  _conduits[conduit].channelIndexesPlusOne[channel] */\n      0x00\n        /* \"conduit/ConduitController.sol\":15855:15862  channel */\n      dup5\n        /* \"conduit/ConduitController.sol\":15814:15863  _conduits[conduit].channelIndexesPlusOne[channel] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"conduit/ConduitController.sol\":15814:15868  _conduits[conduit].channelIndexesPlusOne[channel] != 0 */\n      eq\n      iszero\n        /* \"conduit/ConduitController.sol\":15805:15868  isOpen = _conduits[conduit].channelIndexesPlusOne[channel] != 0 */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":15483:15875  function getChannelStatus(address conduit, address channel)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":16151:16525  function getTotalChannels(address conduit)... */\n    tag_47:\n        /* \"conduit/ConduitController.sol\":16258:16279  uint256 totalChannels */\n      0x00\n        /* \"conduit/ConduitController.sol\":16350:16379  _assertConduitExists(conduit) */\n      tag_125\n        /* \"conduit/ConduitController.sol\":16371:16378  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":16350:16370  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":16350:16379  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_125:\n        /* \"conduit/ConduitController.sol\":16484:16493  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":16484:16502  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":16494:16501  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":16484:16502  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":16484:16511  _conduits[conduit].channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":16484:16518  _conduits[conduit].channels.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":16468:16518  totalChannels = _conduits[conduit].channels.length */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":16151:16525  function getTotalChannels(address conduit)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":10764:11773  function acceptOwnership(address conduit) external override {... */\n    tag_52:\n        /* \"conduit/ConduitController.sol\":10889:10918  _assertConduitExists(conduit) */\n      tag_127\n        /* \"conduit/ConduitController.sol\":10910:10917  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":10889:10909  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":10889:10918  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_127:\n        /* \"conduit/ConduitController.sol\":11025:11034  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":11025:11043  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":11035:11042  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":11025:11043  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":11025:11058  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":11011:11058  msg.sender != _conduits[conduit].potentialOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":11011:11021  msg.sender */\n      caller\n        /* \"conduit/ConduitController.sol\":11011:11058  msg.sender != _conduits[conduit].potentialOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"conduit/ConduitController.sol\":11007:11207  if (msg.sender != _conduits[conduit].potentialOwner) {... */\n      tag_128\n      jumpi\n        /* \"conduit/ConduitController.sol\":11188:11195  conduit */\n      dup1\n        /* \"conduit/ConduitController.sol\":11159:11196  CallerIsNotNewPotentialOwner(conduit) */\n      mload(0x40)\n      0x88c3a11500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":11007:11207  if (msg.sender != _conduits[conduit].potentialOwner) {... */\n    tag_128:\n        /* \"conduit/ConduitController.sol\":11331:11332  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":11301:11334  PotentialOwnerUpdated(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"conduit/ConduitController.sol\":11456:11457  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":11412:11421  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":11412:11430  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":11422:11429  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":11412:11430  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":11412:11445  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":11412:11458  _conduits[conduit].potentialOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":11643:11653  msg.sender */\n      caller\n        /* \"conduit/ConduitController.sol\":11550:11663  OwnershipTransferred(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":11605:11614  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":11605:11623  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":11615:11622  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":11605:11623  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":11605:11629  _conduits[conduit].owner */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":11550:11663  OwnershipTransferred(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":11584:11591  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":11550:11663  OwnershipTransferred(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"conduit/ConduitController.sol\":11756:11766  msg.sender */\n      caller\n        /* \"conduit/ConduitController.sol\":11729:11738  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":11729:11747  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":11739:11746  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":11729:11747  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":11729:11753  _conduits[conduit].owner */\n      0x01\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":11729:11766  _conduits[conduit].owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":10764:11773  function acceptOwnership(address conduit) external override {... */\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":8654:9577  function transferOwnership(address conduit, address newPotentialOwner)... */\n    tag_55:\n        /* \"conduit/ConduitController.sol\":8851:8887  _assertCallerIsConduitOwner(conduit) */\n      tag_131\n        /* \"conduit/ConduitController.sol\":8879:8886  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":8851:8878  _assertCallerIsConduitOwner */\n      tag_96\n        /* \"conduit/ConduitController.sol\":8851:8887  _assertCallerIsConduitOwner(conduit) */\n      jump\t// in\n    tag_131:\n        /* \"conduit/ConduitController.sol\":9000:9001  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":8971:9002  newPotentialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":8971:8988  newPotentialOwner */\n      dup2\n        /* \"conduit/ConduitController.sol\":8971:9002  newPotentialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"conduit/ConduitController.sol\":8967:9075  if (newPotentialOwner == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"conduit/ConduitController.sol\":9056:9063  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":9025:9064  NewPotentialOwnerIsZeroAddress(conduit) */\n      mload(0x40)\n      0xa388d26300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":8967:9075  if (newPotentialOwner == address(0)) {... */\n    tag_132:\n        /* \"conduit/ConduitController.sol\":9172:9181  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":9172:9190  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":9182:9189  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":9172:9190  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":9172:9205  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":9151:9205  newPotentialOwner == _conduits[conduit].potentialOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":9151:9168  newPotentialOwner */\n      dup2\n        /* \"conduit/ConduitController.sol\":9151:9205  newPotentialOwner == _conduits[conduit].potentialOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"conduit/ConduitController.sol\":9147:9294  if (newPotentialOwner == _conduits[conduit].potentialOwner) {... */\n      tag_134\n      jumpi\n        /* \"conduit/ConduitController.sol\":9256:9263  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":9265:9282  newPotentialOwner */\n      dup2\n        /* \"conduit/ConduitController.sol\":9228:9283  NewPotentialOwnerAlreadySet(conduit, newPotentialOwner) */\n      mload(0x40)\n      0xcbc080ca00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":9147:9294  if (newPotentialOwner == _conduits[conduit].potentialOwner) {... */\n    tag_134:\n        /* \"conduit/ConduitController.sol\":9410:9427  newPotentialOwner */\n      dup1\n        /* \"conduit/ConduitController.sol\":9388:9428  PotentialOwnerUpdated(newPotentialOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"conduit/ConduitController.sol\":9553:9570  newPotentialOwner */\n      dup1\n        /* \"conduit/ConduitController.sol\":9517:9526  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":9517:9535  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":9527:9534  conduit */\n      dup5\n        /* \"conduit/ConduitController.sol\":9517:9535  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":9517:9550  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":9517:9570  _conduits[conduit].potentialOwner = newPotentialOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":8654:9577  function transferOwnership(address conduit, address newPotentialOwner)... */\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":13497:14281  function getConduit(bytes32 conduitKey)... */\n    tag_59:\n        /* \"conduit/ConduitController.sol\":13601:13616  address conduit */\n      0x00\n        /* \"conduit/ConduitController.sol\":13618:13629  bool exists */\n      dup1\n        /* \"conduit/ConduitController.sol\":13895:13899  0xff */\n      0xff\n        /* \"conduit/ConduitController.sol\":13888:13900  bytes1(0xff) */\n      0xf8\n      shl\n        /* \"conduit/ConduitController.sol\":13938:13942  this */\n      address\n        /* \"conduit/ConduitController.sol\":13973:13983  conduitKey */\n      dup5\n        /* \"conduit/ConduitController.sol\":14013:14040  _CONDUIT_CREATION_CODE_HASH */\n      immutable(\"0x5123ab44a95b9e316b860f114ea520934458fa7bff216e60c6945263bff2b6f8\")\n        /* \"conduit/ConduitController.sol\":13842:14066  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_138\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"conduit/ConduitController.sol\":13807:14088  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"conduit/ConduitController.sol\":13778:14106  uint256(... */\n      0x00\n      shr\n        /* \"conduit/ConduitController.sol\":13722:14130  conduit = address(... */\n      swap2\n      pop\n        /* \"conduit/ConduitController.sol\":14247:14273  _CONDUIT_RUNTIME_CODE_HASH */\n      immutable(\"0xb5ec0f20465329e13a2d85270cb78f65c575ccff472e4a205299224e150cb7e2\")\n        /* \"conduit/ConduitController.sol\":14227:14234  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":14227:14243  conduit.codehash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodehash\n        /* \"conduit/ConduitController.sol\":14227:14273  conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH */\n      eq\n        /* \"conduit/ConduitController.sol\":14217:14274  exists = (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH) */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":13497:14281  function getConduit(bytes32 conduitKey)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":2328:4454  function createConduit(bytes32 conduitKey, address initialOwner)... */\n    tag_65:\n        /* \"conduit/ConduitController.sol\":2444:2459  address conduit */\n      0x00\n        /* \"conduit/ConduitController.sol\":2562:2563  0 */\n      dup1\n        /* \"conduit/ConduitController.sol\":2538:2564  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":2538:2550  initialOwner */\n      dup3\n        /* \"conduit/ConduitController.sol\":2538:2564  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"conduit/ConduitController.sol\":2534:2619  if (initialOwner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"conduit/ConduitController.sol\":2587:2608  InvalidInitialOwner() */\n      mload(0x40)\n      0x99faaa0400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":2534:2619  if (initialOwner == address(0)) {... */\n    tag_141:\n        /* \"conduit/ConduitController.sol\":2753:2763  msg.sender */\n      caller\n        /* \"conduit/ConduitController.sol\":2712:2763  address(uint160(bytes20(conduitKey))) != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":2736:2746  conduitKey */\n      dup4\n        /* \"conduit/ConduitController.sol\":2720:2748  uint160(bytes20(conduitKey)) */\n      0x60\n      shr\n        /* \"conduit/ConduitController.sol\":2712:2763  address(uint160(bytes20(conduitKey))) != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"conduit/ConduitController.sol\":2708:2889  if (address(uint160(bytes20(conduitKey))) != msg.sender) {... */\n      tag_142\n      jumpi\n        /* \"conduit/ConduitController.sol\":2862:2878  InvalidCreator() */\n      mload(0x40)\n      0xcb6e534400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":2708:2889  if (address(uint160(bytes20(conduitKey))) != msg.sender) {... */\n    tag_142:\n        /* \"conduit/ConduitController.sol\":3149:3153  0xff */\n      0xff\n        /* \"conduit/ConduitController.sol\":3142:3154  bytes1(0xff) */\n      0xf8\n      shl\n        /* \"conduit/ConduitController.sol\":3192:3196  this */\n      address\n        /* \"conduit/ConduitController.sol\":3227:3237  conduitKey */\n      dup5\n        /* \"conduit/ConduitController.sol\":3267:3294  _CONDUIT_CREATION_CODE_HASH */\n      immutable(\"0x5123ab44a95b9e316b860f114ea520934458fa7bff216e60c6945263bff2b6f8\")\n        /* \"conduit/ConduitController.sol\":3096:3320  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_143\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"conduit/ConduitController.sol\":3061:3342  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"conduit/ConduitController.sol\":3032:3360  uint256(... */\n      0x00\n      shr\n        /* \"conduit/ConduitController.sol\":2976:3384  conduit = address(... */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":3499:3525  _CONDUIT_RUNTIME_CODE_HASH */\n      immutable(\"0xb5ec0f20465329e13a2d85270cb78f65c575ccff472e4a205299224e150cb7e2\")\n        /* \"conduit/ConduitController.sol\":3479:3486  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":3479:3495  conduit.codehash */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodehash\n        /* \"conduit/ConduitController.sol\":3479:3525  conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH */\n      sub\n        /* \"conduit/ConduitController.sol\":3475:3668  if (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH) {... */\n      tag_144\n      jumpi\n        /* \"conduit/ConduitController.sol\":3649:3656  conduit */\n      dup1\n        /* \"conduit/ConduitController.sol\":3628:3657  ConduitAlreadyExists(conduit) */\n      mload(0x40)\n      0x6328ccb200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":3475:3668  if (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH) {... */\n    tag_144:\n        /* \"conduit/ConduitController.sol\":3774:3784  conduitKey */\n      dup3\n        /* \"conduit/ConduitController.sol\":3755:3788  new Conduit{ salt: conduitKey }() */\n      mload(0x40)\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      dup2\n      swap1\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create2\n      swap1\n      pop\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n        /* \"conduit/ConduitController.sol\":3870:3913  ConduitProperties storage conduitProperties */\n      0x00\n        /* \"conduit/ConduitController.sol\":3916:3925  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":3916:3934  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":3926:3933  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":3916:3934  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":3870:3934  ConduitProperties storage conduitProperties = _conduits[conduit] */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":4042:4054  initialOwner */\n      dup3\n        /* \"conduit/ConduitController.sol\":4016:4033  conduitProperties */\n      dup2\n        /* \"conduit/ConduitController.sol\":4016:4039  conduitProperties.owner */\n      0x01\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":4016:4054  conduitProperties.owner = initialOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":4169:4179  conduitKey */\n      dup4\n        /* \"conduit/ConduitController.sol\":4145:4162  conduitProperties */\n      dup2\n        /* \"conduit/ConduitController.sol\":4145:4166  conduitProperties.key */\n      0x00\n      add\n        /* \"conduit/ConduitController.sol\":4145:4179  conduitProperties.key = conduitKey */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":4267:4298  NewConduit(conduit, conduitKey) */\n      0x4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15\n        /* \"conduit/ConduitController.sol\":4278:4285  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":4287:4297  conduitKey */\n      dup6\n        /* \"conduit/ConduitController.sol\":4267:4298  NewConduit(conduit, conduitKey) */\n      mload(0x40)\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"conduit/ConduitController.sol\":4434:4446  initialOwner */\n      dup3\n        /* \"conduit/ConduitController.sol\":4392:4447  OwnershipTransferred(conduit, address(0), initialOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":4430:4431  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":4392:4447  OwnershipTransferred(conduit, address(0), initialOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":4413:4420  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":4392:4447  OwnershipTransferred(conduit, address(0), initialOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"conduit/ConduitController.sol\":2465:4454  {... */\n      pop\n        /* \"conduit/ConduitController.sol\":2328:4454  function createConduit(bytes32 conduitKey, address initialOwner)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":9841:10489  function cancelOwnershipTransfer(address conduit) external override {... */\n    tag_69:\n        /* \"conduit/ConduitController.sol\":9997:10033  _assertCallerIsConduitOwner(conduit) */\n      tag_152\n        /* \"conduit/ConduitController.sol\":10025:10032  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":9997:10024  _assertCallerIsConduitOwner */\n      tag_96\n        /* \"conduit/ConduitController.sol\":9997:10033  _assertCallerIsConduitOwner(conduit) */\n      jump\t// in\n    tag_152:\n        /* \"conduit/ConduitController.sol\":10158:10159  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":10113:10160  _conduits[conduit].potentialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":10113:10122  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":10113:10131  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":10123:10130  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":10113:10131  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":10113:10146  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":10113:10160  _conduits[conduit].potentialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"conduit/ConduitController.sol\":10109:10231  if (_conduits[conduit].potentialOwner == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"conduit/ConduitController.sol\":10212:10219  conduit */\n      dup1\n        /* \"conduit/ConduitController.sol\":10183:10220  NoPotentialOwnerCurrentlySet(conduit) */\n      mload(0x40)\n      0x6b01361600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":10109:10231  if (_conduits[conduit].potentialOwner == address(0)) {... */\n    tag_153:\n        /* \"conduit/ConduitController.sol\":10355:10356  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":10325:10358  PotentialOwnerUpdated(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"conduit/ConduitController.sol\":10480:10481  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":10436:10445  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":10436:10454  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":10446:10453  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":10436:10454  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":10436:10469  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n        /* \"conduit/ConduitController.sol\":10436:10482  _conduits[conduit].potentialOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"conduit/ConduitController.sol\":9841:10489  function cancelOwnershipTransfer(address conduit) external override {... */\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":18043:18399  function getChannels(address conduit)... */\n    tag_72:\n        /* \"conduit/ConduitController.sol\":18145:18170  address[] memory channels */\n      0x60\n        /* \"conduit/ConduitController.sol\":18241:18270  _assertConduitExists(conduit) */\n      tag_156\n        /* \"conduit/ConduitController.sol\":18262:18269  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":18241:18261  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":18241:18270  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_156:\n        /* \"conduit/ConduitController.sol\":18365:18374  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":18365:18383  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":18375:18382  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":18365:18383  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":18365:18392  _conduits[conduit].channels */\n      0x03\n      add\n        /* \"conduit/ConduitController.sol\":18354:18392  channels = _conduits[conduit].channels */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":18043:18399  function getChannels(address conduit)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":14752:15126  function getPotentialOwner(address conduit)... */\n    tag_77:\n        /* \"conduit/ConduitController.sol\":14860:14882  address potentialOwner */\n      0x00\n        /* \"conduit/ConduitController.sol\":14953:14982  _assertConduitExists(conduit) */\n      tag_160\n        /* \"conduit/ConduitController.sol\":14974:14981  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":14953:14973  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":14953:14982  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_160:\n        /* \"conduit/ConduitController.sol\":15086:15095  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":15086:15104  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":15096:15103  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":15086:15104  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":15086:15119  _conduits[conduit].potentialOwner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":15069:15119  potentialOwner = _conduits[conduit].potentialOwner */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":14752:15126  function getPotentialOwner(address conduit)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":12654:13033  function getKey(address conduit)... */\n    tag_81:\n        /* \"conduit/ConduitController.sol\":12751:12769  bytes32 conduitKey */\n      0x00\n        /* \"conduit/ConduitController.sol\":12872:12881  _conduits */\n      dup1\n        /* \"conduit/ConduitController.sol\":12872:12890  _conduits[conduit] */\n      0x00\n        /* \"conduit/ConduitController.sol\":12882:12889  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":12872:12890  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":12872:12894  _conduits[conduit].key */\n      0x00\n      add\n      sload\n        /* \"conduit/ConduitController.sol\":12859:12894  conduitKey = _conduits[conduit].key */\n      swap1\n      pop\n        /* \"conduit/ConduitController.sol\":12980:12981  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":12972:12982  bytes32(0) */\n      dup1\n      shl\n        /* \"conduit/ConduitController.sol\":12958:12968  conduitKey */\n      dup2\n        /* \"conduit/ConduitController.sol\":12958:12982  conduitKey == bytes32(0) */\n      sub\n        /* \"conduit/ConduitController.sol\":12954:13027  if (conduitKey == bytes32(0)) {... */\n      tag_162\n      jumpi\n        /* \"conduit/ConduitController.sol\":13005:13016  NoConduit() */\n      mload(0x40)\n      0x4ca8209000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":12954:13027  if (conduitKey == bytes32(0)) {... */\n    tag_162:\n        /* \"conduit/ConduitController.sol\":12654:13033  function getKey(address conduit)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":19688:19976  function _assertConduitExists(address conduit) private view {... */\n    tag_86:\n        /* \"conduit/ConduitController.sol\":19870:19871  0 */\n      0x00\n        /* \"conduit/ConduitController.sol\":19862:19872  bytes32(0) */\n      dup1\n      shl\n        /* \"conduit/ConduitController.sol\":19836:19845  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":19836:19854  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":19846:19853  conduit */\n      dup4\n        /* \"conduit/ConduitController.sol\":19836:19854  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":19836:19858  _conduits[conduit].key */\n      0x00\n      add\n      sload\n        /* \"conduit/ConduitController.sol\":19836:19872  _conduits[conduit].key == bytes32(0) */\n      sub\n        /* \"conduit/ConduitController.sol\":19832:19970  if (_conduits[conduit].key == bytes32(0)) {... */\n      tag_164\n      jumpi\n        /* \"conduit/ConduitController.sol\":19948:19959  NoConduit() */\n      mload(0x40)\n      0x4ca8209000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":19832:19970  if (_conduits[conduit].key == bytes32(0)) {... */\n    tag_164:\n        /* \"conduit/ConduitController.sol\":19688:19976  function _assertConduitExists(address conduit) private view {... */\n      pop\n      jump\t// out\n        /* \"conduit/ConduitController.sol\":19092:19515  function _assertCallerIsConduitOwner(address conduit) private view {... */\n    tag_96:\n        /* \"conduit/ConduitController.sol\":19224:19253  _assertConduitExists(conduit) */\n      tag_166\n        /* \"conduit/ConduitController.sol\":19245:19252  conduit */\n      dup2\n        /* \"conduit/ConduitController.sol\":19224:19244  _assertConduitExists */\n      tag_86\n        /* \"conduit/ConduitController.sol\":19224:19253  _assertConduitExists(conduit) */\n      jump\t// in\n    tag_166:\n        /* \"conduit/ConduitController.sol\":19358:19367  _conduits */\n      0x00\n        /* \"conduit/ConduitController.sol\":19358:19376  _conduits[conduit] */\n      dup1\n        /* \"conduit/ConduitController.sol\":19368:19375  conduit */\n      dup3\n        /* \"conduit/ConduitController.sol\":19358:19376  _conduits[conduit] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"conduit/ConduitController.sol\":19358:19382  _conduits[conduit].owner */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":19344:19382  msg.sender != _conduits[conduit].owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"conduit/ConduitController.sol\":19344:19354  msg.sender */\n      caller\n        /* \"conduit/ConduitController.sol\":19344:19382  msg.sender != _conduits[conduit].owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"conduit/ConduitController.sol\":19340:19509  if (msg.sender != _conduits[conduit].owner) {... */\n      tag_167\n      jumpi\n        /* \"conduit/ConduitController.sol\":19490:19497  conduit */\n      dup1\n        /* \"conduit/ConduitController.sol\":19473:19498  CallerIsNotOwner(conduit) */\n      mload(0x40)\n      0xd4ed9a1700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"conduit/ConduitController.sol\":19340:19509  if (msg.sender != _conduits[conduit].owner) {... */\n    tag_167:\n        /* \"conduit/ConduitController.sol\":19092:19515  function _assertCallerIsConduitOwner(address conduit) private view {... */\n      pop\n      jump\t// out\n    tag_147:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_170:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_172:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_173:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_212\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_172\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_174:\n        /* \"#utility.yul\":641:665   */\n      tag_214\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_173\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_215:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_175:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_217\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_174\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_176:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_177:\n        /* \"#utility.yul\":997:1021   */\n      tag_220\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_176\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_221:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_178:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_223\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_177\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_226\n      tag_170\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1290:1409   */\n    tag_225:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_227\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_175\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_228\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_178\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_179:\n        /* \"#utility.yul\":1764:1788   */\n      tag_230\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_173\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_232\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_179\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2106   */\n    tag_180:\n        /* \"#utility.yul\":2066:2073   */\n      0x00\n        /* \"#utility.yul\":2095:2100   */\n      dup2\n        /* \"#utility.yul\":2084:2100   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2112:2230   */\n    tag_181:\n        /* \"#utility.yul\":2199:2223   */\n      tag_235\n        /* \"#utility.yul\":2217:2222   */\n      dup2\n        /* \"#utility.yul\":2199:2223   */\n      tag_180\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2194:2197   */\n      dup3\n        /* \"#utility.yul\":2187:2224   */\n      mstore\n        /* \"#utility.yul\":2112:2230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2568   */\n    tag_29:\n        /* \"#utility.yul\":2357:2361   */\n      0x00\n        /* \"#utility.yul\":2395:2397   */\n      0x40\n        /* \"#utility.yul\":2384:2393   */\n      dup3\n        /* \"#utility.yul\":2380:2398   */\n      add\n        /* \"#utility.yul\":2372:2398   */\n      swap1\n      pop\n        /* \"#utility.yul\":2408:2479   */\n      tag_237\n        /* \"#utility.yul\":2476:2477   */\n      0x00\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2461:2478   */\n      add\n        /* \"#utility.yul\":2452:2458   */\n      dup6\n        /* \"#utility.yul\":2408:2479   */\n      tag_181\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2489:2561   */\n      tag_238\n        /* \"#utility.yul\":2557:2559   */\n      0x20\n        /* \"#utility.yul\":2546:2555   */\n      dup4\n        /* \"#utility.yul\":2542:2560   */\n      add\n        /* \"#utility.yul\":2533:2539   */\n      dup5\n        /* \"#utility.yul\":2489:2561   */\n      tag_181\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2236:2568   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2574:2664   */\n    tag_182:\n        /* \"#utility.yul\":2608:2615   */\n      0x00\n        /* \"#utility.yul\":2651:2656   */\n      dup2\n        /* \"#utility.yul\":2644:2657   */\n      iszero\n        /* \"#utility.yul\":2637:2658   */\n      iszero\n        /* \"#utility.yul\":2626:2658   */\n      swap1\n      pop\n        /* \"#utility.yul\":2574:2664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2670:2786   */\n    tag_183:\n        /* \"#utility.yul\":2740:2761   */\n      tag_241\n        /* \"#utility.yul\":2755:2760   */\n      dup2\n        /* \"#utility.yul\":2740:2761   */\n      tag_182\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2733:2738   */\n      dup2\n        /* \"#utility.yul\":2730:2762   */\n      eq\n        /* \"#utility.yul\":2720:2780   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2776:2777   */\n      0x00\n        /* \"#utility.yul\":2773:2774   */\n      dup1\n        /* \"#utility.yul\":2766:2778   */\n      revert\n        /* \"#utility.yul\":2720:2780   */\n    tag_242:\n        /* \"#utility.yul\":2670:2786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2792:2925   */\n    tag_184:\n        /* \"#utility.yul\":2835:2840   */\n      0x00\n        /* \"#utility.yul\":2873:2879   */\n      dup2\n        /* \"#utility.yul\":2860:2880   */\n      calldataload\n        /* \"#utility.yul\":2851:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2889:2919   */\n      tag_244\n        /* \"#utility.yul\":2913:2918   */\n      dup2\n        /* \"#utility.yul\":2889:2919   */\n      tag_183\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2792:2925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3544   */\n    tag_32:\n        /* \"#utility.yul\":3005:3011   */\n      0x00\n        /* \"#utility.yul\":3013:3019   */\n      dup1\n        /* \"#utility.yul\":3021:3027   */\n      0x00\n        /* \"#utility.yul\":3070:3072   */\n      0x60\n        /* \"#utility.yul\":3058:3067   */\n      dup5\n        /* \"#utility.yul\":3049:3056   */\n      dup7\n        /* \"#utility.yul\":3045:3068   */\n      sub\n        /* \"#utility.yul\":3041:3073   */\n      slt\n        /* \"#utility.yul\":3038:3157   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":3076:3155   */\n      tag_247\n      tag_170\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3038:3157   */\n    tag_246:\n        /* \"#utility.yul\":3196:3197   */\n      0x00\n        /* \"#utility.yul\":3221:3274   */\n      tag_248\n        /* \"#utility.yul\":3266:3273   */\n      dup7\n        /* \"#utility.yul\":3257:3263   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup8\n        /* \"#utility.yul\":3242:3264   */\n      add\n        /* \"#utility.yul\":3221:3274   */\n      tag_175\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3211:3274   */\n      swap4\n      pop\n        /* \"#utility.yul\":3167:3284   */\n      pop\n        /* \"#utility.yul\":3323:3325   */\n      0x20\n        /* \"#utility.yul\":3349:3402   */\n      tag_249\n        /* \"#utility.yul\":3394:3401   */\n      dup7\n        /* \"#utility.yul\":3385:3391   */\n      dup3\n        /* \"#utility.yul\":3374:3383   */\n      dup8\n        /* \"#utility.yul\":3370:3392   */\n      add\n        /* \"#utility.yul\":3349:3402   */\n      tag_175\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3339:3402   */\n      swap3\n      pop\n        /* \"#utility.yul\":3294:3412   */\n      pop\n        /* \"#utility.yul\":3451:3453   */\n      0x40\n        /* \"#utility.yul\":3477:3527   */\n      tag_250\n        /* \"#utility.yul\":3519:3526   */\n      dup7\n        /* \"#utility.yul\":3510:3516   */\n      dup3\n        /* \"#utility.yul\":3499:3508   */\n      dup8\n        /* \"#utility.yul\":3495:3517   */\n      add\n        /* \"#utility.yul\":3477:3527   */\n      tag_184\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3467:3527   */\n      swap2\n      pop\n        /* \"#utility.yul\":3422:3537   */\n      pop\n        /* \"#utility.yul\":2931:3544   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3550:3879   */\n    tag_36:\n        /* \"#utility.yul\":3609:3615   */\n      0x00\n        /* \"#utility.yul\":3658:3660   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup3\n        /* \"#utility.yul\":3637:3644   */\n      dup5\n        /* \"#utility.yul\":3633:3656   */\n      sub\n        /* \"#utility.yul\":3629:3661   */\n      slt\n        /* \"#utility.yul\":3626:3745   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3664:3743   */\n      tag_253\n      tag_170\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3626:3745   */\n    tag_252:\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3809:3862   */\n      tag_254\n        /* \"#utility.yul\":3854:3861   */\n      dup5\n        /* \"#utility.yul\":3845:3851   */\n      dup3\n        /* \"#utility.yul\":3834:3843   */\n      dup6\n        /* \"#utility.yul\":3830:3852   */\n      add\n        /* \"#utility.yul\":3809:3862   */\n      tag_175\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3799:3862   */\n      swap2\n      pop\n        /* \"#utility.yul\":3755:3872   */\n      pop\n        /* \"#utility.yul\":3550:3879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3885:4359   */\n    tag_41:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_257\n      tag_170\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3978:4097   */\n    tag_256:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_258\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_175\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4342   */\n      tag_259\n        /* \"#utility.yul\":4334:4341   */\n      dup6\n        /* \"#utility.yul\":4325:4331   */\n      dup3\n        /* \"#utility.yul\":4314:4323   */\n      dup7\n        /* \"#utility.yul\":4310:4332   */\n      add\n        /* \"#utility.yul\":4289:4342   */\n      tag_175\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4279:4342   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4352   */\n      pop\n        /* \"#utility.yul\":3885:4359   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4365:4474   */\n    tag_185:\n        /* \"#utility.yul\":4446:4467   */\n      tag_261\n        /* \"#utility.yul\":4461:4466   */\n      dup2\n        /* \"#utility.yul\":4446:4467   */\n      tag_182\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4441:4444   */\n      dup3\n        /* \"#utility.yul\":4434:4468   */\n      mstore\n        /* \"#utility.yul\":4365:4474   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4480:4690   */\n    tag_44:\n        /* \"#utility.yul\":4567:4571   */\n      0x00\n        /* \"#utility.yul\":4605:4607   */\n      0x20\n        /* \"#utility.yul\":4594:4603   */\n      dup3\n        /* \"#utility.yul\":4590:4608   */\n      add\n        /* \"#utility.yul\":4582:4608   */\n      swap1\n      pop\n        /* \"#utility.yul\":4618:4683   */\n      tag_263\n        /* \"#utility.yul\":4680:4681   */\n      0x00\n        /* \"#utility.yul\":4669:4678   */\n      dup4\n        /* \"#utility.yul\":4665:4682   */\n      add\n        /* \"#utility.yul\":4656:4662   */\n      dup5\n        /* \"#utility.yul\":4618:4683   */\n      tag_185\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4480:4690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4696:4814   */\n    tag_186:\n        /* \"#utility.yul\":4783:4807   */\n      tag_265\n        /* \"#utility.yul\":4801:4806   */\n      dup2\n        /* \"#utility.yul\":4783:4807   */\n      tag_176\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4778:4781   */\n      dup3\n        /* \"#utility.yul\":4771:4808   */\n      mstore\n        /* \"#utility.yul\":4696:4814   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4820:5042   */\n    tag_49:\n        /* \"#utility.yul\":4913:4917   */\n      0x00\n        /* \"#utility.yul\":4951:4953   */\n      0x20\n        /* \"#utility.yul\":4940:4949   */\n      dup3\n        /* \"#utility.yul\":4936:4954   */\n      add\n        /* \"#utility.yul\":4928:4954   */\n      swap1\n      pop\n        /* \"#utility.yul\":4964:5035   */\n      tag_267\n        /* \"#utility.yul\":5032:5033   */\n      0x00\n        /* \"#utility.yul\":5021:5030   */\n      dup4\n        /* \"#utility.yul\":5017:5034   */\n      add\n        /* \"#utility.yul\":5008:5014   */\n      dup5\n        /* \"#utility.yul\":4964:5035   */\n      tag_186\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4820:5042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5048:5170   */\n    tag_187:\n        /* \"#utility.yul\":5121:5145   */\n      tag_269\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5121:5145   */\n      tag_180\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5114:5119   */\n      dup2\n        /* \"#utility.yul\":5111:5146   */\n      eq\n        /* \"#utility.yul\":5101:5164   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5157:5158   */\n      dup1\n        /* \"#utility.yul\":5150:5162   */\n      revert\n        /* \"#utility.yul\":5101:5164   */\n    tag_270:\n        /* \"#utility.yul\":5048:5170   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5315   */\n    tag_188:\n        /* \"#utility.yul\":5222:5227   */\n      0x00\n        /* \"#utility.yul\":5260:5266   */\n      dup2\n        /* \"#utility.yul\":5247:5267   */\n      calldataload\n        /* \"#utility.yul\":5238:5267   */\n      swap1\n      pop\n        /* \"#utility.yul\":5276:5309   */\n      tag_272\n        /* \"#utility.yul\":5303:5308   */\n      dup2\n        /* \"#utility.yul\":5276:5309   */\n      tag_187\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5176:5315   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5321:5650   */\n    tag_58:\n        /* \"#utility.yul\":5380:5386   */\n      0x00\n        /* \"#utility.yul\":5429:5431   */\n      0x20\n        /* \"#utility.yul\":5417:5426   */\n      dup3\n        /* \"#utility.yul\":5408:5415   */\n      dup5\n        /* \"#utility.yul\":5404:5427   */\n      sub\n        /* \"#utility.yul\":5400:5432   */\n      slt\n        /* \"#utility.yul\":5397:5516   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":5435:5514   */\n      tag_275\n      tag_170\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5397:5516   */\n    tag_274:\n        /* \"#utility.yul\":5555:5556   */\n      0x00\n        /* \"#utility.yul\":5580:5633   */\n      tag_276\n        /* \"#utility.yul\":5625:5632   */\n      dup5\n        /* \"#utility.yul\":5616:5622   */\n      dup3\n        /* \"#utility.yul\":5605:5614   */\n      dup6\n        /* \"#utility.yul\":5601:5623   */\n      add\n        /* \"#utility.yul\":5580:5633   */\n      tag_188\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5570:5633   */\n      swap2\n      pop\n        /* \"#utility.yul\":5526:5643   */\n      pop\n        /* \"#utility.yul\":5321:5650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5656:5976   */\n    tag_61:\n        /* \"#utility.yul\":5771:5775   */\n      0x00\n        /* \"#utility.yul\":5809:5811   */\n      0x40\n        /* \"#utility.yul\":5798:5807   */\n      dup3\n        /* \"#utility.yul\":5794:5812   */\n      add\n        /* \"#utility.yul\":5786:5812   */\n      swap1\n      pop\n        /* \"#utility.yul\":5822:5893   */\n      tag_278\n        /* \"#utility.yul\":5890:5891   */\n      0x00\n        /* \"#utility.yul\":5879:5888   */\n      dup4\n        /* \"#utility.yul\":5875:5892   */\n      add\n        /* \"#utility.yul\":5866:5872   */\n      dup6\n        /* \"#utility.yul\":5822:5893   */\n      tag_179\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5903:5969   */\n      tag_279\n        /* \"#utility.yul\":5965:5967   */\n      0x20\n        /* \"#utility.yul\":5954:5963   */\n      dup4\n        /* \"#utility.yul\":5950:5968   */\n      add\n        /* \"#utility.yul\":5941:5947   */\n      dup5\n        /* \"#utility.yul\":5903:5969   */\n      tag_185\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5656:5976   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5982:6456   */\n    tag_64:\n        /* \"#utility.yul\":6050:6056   */\n      0x00\n        /* \"#utility.yul\":6058:6064   */\n      dup1\n        /* \"#utility.yul\":6107:6109   */\n      0x40\n        /* \"#utility.yul\":6095:6104   */\n      dup4\n        /* \"#utility.yul\":6086:6093   */\n      dup6\n        /* \"#utility.yul\":6082:6105   */\n      sub\n        /* \"#utility.yul\":6078:6110   */\n      slt\n        /* \"#utility.yul\":6075:6194   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6113:6192   */\n      tag_282\n      tag_170\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6075:6194   */\n    tag_281:\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6258:6311   */\n      tag_283\n        /* \"#utility.yul\":6303:6310   */\n      dup6\n        /* \"#utility.yul\":6294:6300   */\n      dup3\n        /* \"#utility.yul\":6283:6292   */\n      dup7\n        /* \"#utility.yul\":6279:6301   */\n      add\n        /* \"#utility.yul\":6258:6311   */\n      tag_188\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6248:6311   */\n      swap3\n      pop\n        /* \"#utility.yul\":6204:6321   */\n      pop\n        /* \"#utility.yul\":6360:6362   */\n      0x20\n        /* \"#utility.yul\":6386:6439   */\n      tag_284\n        /* \"#utility.yul\":6431:6438   */\n      dup6\n        /* \"#utility.yul\":6422:6428   */\n      dup3\n        /* \"#utility.yul\":6411:6420   */\n      dup7\n        /* \"#utility.yul\":6407:6429   */\n      add\n        /* \"#utility.yul\":6386:6439   */\n      tag_175\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6376:6439   */\n      swap2\n      pop\n        /* \"#utility.yul\":6331:6449   */\n      pop\n        /* \"#utility.yul\":5982:6456   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6462:6576   */\n    tag_189:\n        /* \"#utility.yul\":6529:6535   */\n      0x00\n        /* \"#utility.yul\":6563:6568   */\n      dup2\n        /* \"#utility.yul\":6557:6569   */\n      mload\n        /* \"#utility.yul\":6547:6569   */\n      swap1\n      pop\n        /* \"#utility.yul\":6462:6576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6582:6766   */\n    tag_190:\n        /* \"#utility.yul\":6681:6692   */\n      0x00\n        /* \"#utility.yul\":6715:6721   */\n      dup3\n        /* \"#utility.yul\":6710:6713   */\n      dup3\n        /* \"#utility.yul\":6703:6722   */\n      mstore\n        /* \"#utility.yul\":6755:6759   */\n      0x20\n        /* \"#utility.yul\":6750:6753   */\n      dup3\n        /* \"#utility.yul\":6746:6760   */\n      add\n        /* \"#utility.yul\":6731:6760   */\n      swap1\n      pop\n        /* \"#utility.yul\":6582:6766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6772:6904   */\n    tag_191:\n        /* \"#utility.yul\":6839:6843   */\n      0x00\n        /* \"#utility.yul\":6862:6865   */\n      dup2\n        /* \"#utility.yul\":6854:6865   */\n      swap1\n      pop\n        /* \"#utility.yul\":6892:6896   */\n      0x20\n        /* \"#utility.yul\":6887:6890   */\n      dup3\n        /* \"#utility.yul\":6883:6897   */\n      add\n        /* \"#utility.yul\":6875:6897   */\n      swap1\n      pop\n        /* \"#utility.yul\":6772:6904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6910:7018   */\n    tag_192:\n        /* \"#utility.yul\":6987:7011   */\n      tag_289\n        /* \"#utility.yul\":7005:7010   */\n      dup2\n        /* \"#utility.yul\":6987:7011   */\n      tag_173\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6982:6985   */\n      dup3\n        /* \"#utility.yul\":6975:7012   */\n      mstore\n        /* \"#utility.yul\":6910:7018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7203   */\n    tag_193:\n        /* \"#utility.yul\":7093:7103   */\n      0x00\n        /* \"#utility.yul\":7114:7160   */\n      tag_291\n        /* \"#utility.yul\":7156:7159   */\n      dup4\n        /* \"#utility.yul\":7148:7154   */\n      dup4\n        /* \"#utility.yul\":7114:7160   */\n      tag_192\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7192:7196   */\n      0x20\n        /* \"#utility.yul\":7187:7190   */\n      dup4\n        /* \"#utility.yul\":7183:7197   */\n      add\n        /* \"#utility.yul\":7169:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7024:7203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7209:7322   */\n    tag_194:\n        /* \"#utility.yul\":7279:7283   */\n      0x00\n        /* \"#utility.yul\":7311:7315   */\n      0x20\n        /* \"#utility.yul\":7306:7309   */\n      dup3\n        /* \"#utility.yul\":7302:7316   */\n      add\n        /* \"#utility.yul\":7294:7316   */\n      swap1\n      pop\n        /* \"#utility.yul\":7209:7322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:8090   */\n    tag_195:\n        /* \"#utility.yul\":7477:7480   */\n      0x00\n        /* \"#utility.yul\":7506:7560   */\n      tag_294\n        /* \"#utility.yul\":7554:7559   */\n      dup3\n        /* \"#utility.yul\":7506:7560   */\n      tag_189\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7576:7662   */\n      tag_295\n        /* \"#utility.yul\":7655:7661   */\n      dup2\n        /* \"#utility.yul\":7650:7653   */\n      dup6\n        /* \"#utility.yul\":7576:7662   */\n      tag_190\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7569:7662   */\n      swap4\n      pop\n        /* \"#utility.yul\":7686:7742   */\n      tag_296\n        /* \"#utility.yul\":7736:7741   */\n      dup4\n        /* \"#utility.yul\":7686:7742   */\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7765:7772   */\n      dup1\n        /* \"#utility.yul\":7796:7797   */\n      0x00\n        /* \"#utility.yul\":7781:8065   */\n    tag_297:\n        /* \"#utility.yul\":7806:7812   */\n      dup4\n        /* \"#utility.yul\":7803:7804   */\n      dup2\n        /* \"#utility.yul\":7800:7813   */\n      lt\n        /* \"#utility.yul\":7781:8065   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":7882:7888   */\n      dup2\n        /* \"#utility.yul\":7876:7889   */\n      mload\n        /* \"#utility.yul\":7909:7972   */\n      tag_300\n        /* \"#utility.yul\":7968:7971   */\n      dup9\n        /* \"#utility.yul\":7953:7966   */\n      dup3\n        /* \"#utility.yul\":7909:7972   */\n      tag_193\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7902:7972   */\n      swap8\n      pop\n        /* \"#utility.yul\":7995:8055   */\n      tag_301\n        /* \"#utility.yul\":8048:8054   */\n      dup4\n        /* \"#utility.yul\":7995:8055   */\n      tag_194\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7985:8055   */\n      swap3\n      pop\n        /* \"#utility.yul\":7841:8065   */\n      pop\n        /* \"#utility.yul\":7828:7829   */\n      0x01\n        /* \"#utility.yul\":7825:7826   */\n      dup2\n        /* \"#utility.yul\":7821:7830   */\n      add\n        /* \"#utility.yul\":7816:7830   */\n      swap1\n      pop\n        /* \"#utility.yul\":7781:8065   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":7785:7799   */\n      pop\n        /* \"#utility.yul\":8081:8084   */\n      dup6\n        /* \"#utility.yul\":8074:8084   */\n      swap4\n      pop\n        /* \"#utility.yul\":7482:8090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7358:8090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8096:8469   */\n    tag_74:\n        /* \"#utility.yul\":8239:8243   */\n      0x00\n        /* \"#utility.yul\":8277:8279   */\n      0x20\n        /* \"#utility.yul\":8266:8275   */\n      dup3\n        /* \"#utility.yul\":8262:8280   */\n      add\n        /* \"#utility.yul\":8254:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8326:8335   */\n      dup2\n        /* \"#utility.yul\":8320:8324   */\n      dup2\n        /* \"#utility.yul\":8316:8336   */\n      sub\n        /* \"#utility.yul\":8312:8313   */\n      0x00\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8314   */\n      add\n        /* \"#utility.yul\":8290:8337   */\n      mstore\n        /* \"#utility.yul\":8354:8462   */\n      tag_303\n        /* \"#utility.yul\":8457:8461   */\n      dup2\n        /* \"#utility.yul\":8448:8454   */\n      dup5\n        /* \"#utility.yul\":8354:8462   */\n      tag_195\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8346:8462   */\n      swap1\n      pop\n        /* \"#utility.yul\":8096:8469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8475:8697   */\n    tag_83:\n        /* \"#utility.yul\":8568:8572   */\n      0x00\n        /* \"#utility.yul\":8606:8608   */\n      0x20\n        /* \"#utility.yul\":8595:8604   */\n      dup3\n        /* \"#utility.yul\":8591:8609   */\n      add\n        /* \"#utility.yul\":8583:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8619:8690   */\n      tag_305\n        /* \"#utility.yul\":8687:8688   */\n      0x00\n        /* \"#utility.yul\":8676:8685   */\n      dup4\n        /* \"#utility.yul\":8672:8689   */\n      add\n        /* \"#utility.yul\":8663:8669   */\n      dup5\n        /* \"#utility.yul\":8619:8690   */\n      tag_181\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8475:8697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:8883   */\n    tag_91:\n        /* \"#utility.yul\":8751:8828   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8748:8749   */\n      0x00\n        /* \"#utility.yul\":8741:8829   */\n      mstore\n        /* \"#utility.yul\":8848:8852   */\n      0x32\n        /* \"#utility.yul\":8845:8846   */\n      0x04\n        /* \"#utility.yul\":8838:8853   */\n      mstore\n        /* \"#utility.yul\":8872:8876   */\n      0x24\n        /* \"#utility.yul\":8869:8870   */\n      0x00\n        /* \"#utility.yul\":8862:8877   */\n      revert\n        /* \"#utility.yul\":8889:9069   */\n    tag_196:\n        /* \"#utility.yul\":8937:9014   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8927:9015   */\n      mstore\n        /* \"#utility.yul\":9034:9038   */\n      0x11\n        /* \"#utility.yul\":9031:9032   */\n      0x04\n        /* \"#utility.yul\":9024:9039   */\n      mstore\n        /* \"#utility.yul\":9058:9062   */\n      0x24\n        /* \"#utility.yul\":9055:9056   */\n      0x00\n        /* \"#utility.yul\":9048:9063   */\n      revert\n        /* \"#utility.yul\":9075:9269   */\n    tag_108:\n        /* \"#utility.yul\":9115:9119   */\n      0x00\n        /* \"#utility.yul\":9135:9155   */\n      tag_309\n        /* \"#utility.yul\":9153:9154   */\n      dup3\n        /* \"#utility.yul\":9135:9155   */\n      tag_176\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9130:9155   */\n      swap2\n      pop\n        /* \"#utility.yul\":9169:9189   */\n      tag_310\n        /* \"#utility.yul\":9187:9188   */\n      dup4\n        /* \"#utility.yul\":9169:9189   */\n      tag_176\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":9164:9189   */\n      swap3\n      pop\n        /* \"#utility.yul\":9213:9214   */\n      dup3\n        /* \"#utility.yul\":9210:9211   */\n      dup3\n        /* \"#utility.yul\":9206:9215   */\n      sub\n        /* \"#utility.yul\":9198:9215   */\n      swap1\n      pop\n        /* \"#utility.yul\":9237:9238   */\n      dup2\n        /* \"#utility.yul\":9231:9235   */\n      dup2\n        /* \"#utility.yul\":9228:9239   */\n      gt\n        /* \"#utility.yul\":9225:9262   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":9242:9260   */\n      tag_312\n      tag_196\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":9225:9262   */\n    tag_311:\n        /* \"#utility.yul\":9075:9269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9275:9455   */\n    tag_118:\n        /* \"#utility.yul\":9323:9400   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9313:9401   */\n      mstore\n        /* \"#utility.yul\":9420:9424   */\n      0x31\n        /* \"#utility.yul\":9417:9418   */\n      0x04\n        /* \"#utility.yul\":9410:9425   */\n      mstore\n        /* \"#utility.yul\":9444:9448   */\n      0x24\n        /* \"#utility.yul\":9441:9442   */\n      0x00\n        /* \"#utility.yul\":9434:9449   */\n      revert\n        /* \"#utility.yul\":9461:9793   */\n    tag_136:\n        /* \"#utility.yul\":9582:9586   */\n      0x00\n        /* \"#utility.yul\":9620:9622   */\n      0x40\n        /* \"#utility.yul\":9609:9618   */\n      dup3\n        /* \"#utility.yul\":9605:9623   */\n      add\n        /* \"#utility.yul\":9597:9623   */\n      swap1\n      pop\n        /* \"#utility.yul\":9633:9704   */\n      tag_315\n        /* \"#utility.yul\":9701:9702   */\n      0x00\n        /* \"#utility.yul\":9690:9699   */\n      dup4\n        /* \"#utility.yul\":9686:9703   */\n      add\n        /* \"#utility.yul\":9677:9683   */\n      dup6\n        /* \"#utility.yul\":9633:9704   */\n      tag_179\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9714:9786   */\n      tag_316\n        /* \"#utility.yul\":9782:9784   */\n      0x20\n        /* \"#utility.yul\":9771:9780   */\n      dup4\n        /* \"#utility.yul\":9767:9785   */\n      add\n        /* \"#utility.yul\":9758:9764   */\n      dup5\n        /* \"#utility.yul\":9714:9786   */\n      tag_179\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9461:9793   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9799:9948   */\n    tag_197:\n        /* \"#utility.yul\":9835:9842   */\n      0x00\n        /* \"#utility.yul\":9875:9941   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9868:9873   */\n      dup3\n        /* \"#utility.yul\":9864:9942   */\n      and\n        /* \"#utility.yul\":9853:9942   */\n      swap1\n      pop\n        /* \"#utility.yul\":9799:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10032   */\n    tag_198:\n        /* \"#utility.yul\":9992:9999   */\n      0x00\n        /* \"#utility.yul\":10021:10026   */\n      dup2\n        /* \"#utility.yul\":10010:10026   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10038:10191   */\n    tag_199:\n        /* \"#utility.yul\":10141:10184   */\n      tag_320\n        /* \"#utility.yul\":10160:10183   */\n      tag_321\n        /* \"#utility.yul\":10177:10182   */\n      dup3\n        /* \"#utility.yul\":10160:10183   */\n      tag_197\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10141:10184   */\n      tag_198\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":10136:10139   */\n      dup3\n        /* \"#utility.yul\":10129:10185   */\n      mstore\n        /* \"#utility.yul\":10038:10191   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10291   */\n    tag_200:\n        /* \"#utility.yul\":10230:10238   */\n      0x00\n        /* \"#utility.yul\":10278:10283   */\n      dup2\n        /* \"#utility.yul\":10274:10276   */\n      0x60\n        /* \"#utility.yul\":10270:10284   */\n      shl\n        /* \"#utility.yul\":10249:10284   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10297:10391   */\n    tag_201:\n        /* \"#utility.yul\":10336:10343   */\n      0x00\n        /* \"#utility.yul\":10365:10385   */\n      tag_324\n        /* \"#utility.yul\":10379:10384   */\n      dup3\n        /* \"#utility.yul\":10365:10385   */\n      tag_200\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10354:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":10297:10391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10397:10497   */\n    tag_202:\n        /* \"#utility.yul\":10436:10443   */\n      0x00\n        /* \"#utility.yul\":10465:10491   */\n      tag_326\n        /* \"#utility.yul\":10485:10490   */\n      dup3\n        /* \"#utility.yul\":10465:10491   */\n      tag_201\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10454:10491   */\n      swap1\n      pop\n        /* \"#utility.yul\":10397:10497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10503:10660   */\n    tag_203:\n        /* \"#utility.yul\":10608:10653   */\n      tag_328\n        /* \"#utility.yul\":10628:10652   */\n      tag_329\n        /* \"#utility.yul\":10646:10651   */\n      dup3\n        /* \"#utility.yul\":10628:10652   */\n      tag_173\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":10608:10653   */\n      tag_202\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10603:10606   */\n      dup3\n        /* \"#utility.yul\":10596:10654   */\n      mstore\n        /* \"#utility.yul\":10503:10660   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10745   */\n    tag_204:\n        /* \"#utility.yul\":10705:10712   */\n      0x00\n        /* \"#utility.yul\":10734:10739   */\n      dup2\n        /* \"#utility.yul\":10723:10739   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10751:10908   */\n    tag_205:\n        /* \"#utility.yul\":10856:10901   */\n      tag_332\n        /* \"#utility.yul\":10876:10900   */\n      tag_333\n        /* \"#utility.yul\":10894:10899   */\n      dup3\n        /* \"#utility.yul\":10876:10900   */\n      tag_180\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10856:10901   */\n      tag_204\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10851:10854   */\n      dup3\n        /* \"#utility.yul\":10844:10902   */\n      mstore\n        /* \"#utility.yul\":10751:10908   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10914:11588   */\n    tag_139:\n        /* \"#utility.yul\":11108:11111   */\n      0x00\n        /* \"#utility.yul\":11123:11196   */\n      tag_335\n        /* \"#utility.yul\":11192:11195   */\n      dup3\n        /* \"#utility.yul\":11183:11189   */\n      dup8\n        /* \"#utility.yul\":11123:11196   */\n      tag_199\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11221:11222   */\n      0x01\n        /* \"#utility.yul\":11216:11219   */\n      dup3\n        /* \"#utility.yul\":11212:11223   */\n      add\n        /* \"#utility.yul\":11205:11223   */\n      swap2\n      pop\n        /* \"#utility.yul\":11233:11308   */\n      tag_336\n        /* \"#utility.yul\":11304:11307   */\n      dup3\n        /* \"#utility.yul\":11295:11301   */\n      dup7\n        /* \"#utility.yul\":11233:11308   */\n      tag_203\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11333:11335   */\n      0x14\n        /* \"#utility.yul\":11328:11331   */\n      dup3\n        /* \"#utility.yul\":11324:11336   */\n      add\n        /* \"#utility.yul\":11317:11336   */\n      swap2\n      pop\n        /* \"#utility.yul\":11346:11421   */\n      tag_337\n        /* \"#utility.yul\":11417:11420   */\n      dup3\n        /* \"#utility.yul\":11408:11414   */\n      dup6\n        /* \"#utility.yul\":11346:11421   */\n      tag_205\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11446:11448   */\n      0x20\n        /* \"#utility.yul\":11441:11444   */\n      dup3\n        /* \"#utility.yul\":11437:11449   */\n      add\n        /* \"#utility.yul\":11430:11449   */\n      swap2\n      pop\n        /* \"#utility.yul\":11459:11534   */\n      tag_338\n        /* \"#utility.yul\":11530:11533   */\n      dup3\n        /* \"#utility.yul\":11521:11527   */\n      dup5\n        /* \"#utility.yul\":11459:11534   */\n      tag_205\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11559:11561   */\n      0x20\n        /* \"#utility.yul\":11554:11557   */\n      dup3\n        /* \"#utility.yul\":11550:11562   */\n      add\n        /* \"#utility.yul\":11543:11562   */\n      swap2\n      pop\n        /* \"#utility.yul\":11579:11582   */\n      dup2\n        /* \"#utility.yul\":11572:11582   */\n      swap1\n      pop\n        /* \"#utility.yul\":10914:11588   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11594:11926   */\n    tag_150:\n        /* \"#utility.yul\":11715:11719   */\n      0x00\n        /* \"#utility.yul\":11753:11755   */\n      0x40\n        /* \"#utility.yul\":11742:11751   */\n      dup3\n        /* \"#utility.yul\":11738:11756   */\n      add\n        /* \"#utility.yul\":11730:11756   */\n      swap1\n      pop\n        /* \"#utility.yul\":11766:11837   */\n      tag_340\n        /* \"#utility.yul\":11834:11835   */\n      0x00\n        /* \"#utility.yul\":11823:11832   */\n      dup4\n        /* \"#utility.yul\":11819:11836   */\n      add\n        /* \"#utility.yul\":11810:11816   */\n      dup6\n        /* \"#utility.yul\":11766:11837   */\n      tag_179\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11847:11919   */\n      tag_341\n        /* \"#utility.yul\":11915:11917   */\n      0x20\n        /* \"#utility.yul\":11904:11913   */\n      dup4\n        /* \"#utility.yul\":11900:11918   */\n      add\n        /* \"#utility.yul\":11891:11897   */\n      dup5\n        /* \"#utility.yul\":11847:11919   */\n      tag_181\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11594:11926   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n          mstore(0x40, 0xa0)\n            /* \"conduit/Conduit.sol\":2751:2853  constructor() {... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n            /* \"conduit/Conduit.sol\":2836:2846  msg.sender */\n          caller\n            /* \"conduit/Conduit.sol\":2822:2846  _controller = msg.sender */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0x80\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          pop\n          pop\n            /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n          mload(0x80)\n          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n          0x00\n          assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n          return(0x00, dataSize(sub_0))\n        stop\n\n        sub_0: assembly {\n                /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n              mstore(0x40, 0x80)\n              callvalue\n              dup1\n              iszero\n              tag_1\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_1:\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x4ce34aa2\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x899e104c\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x8df25d92\n              eq\n              tag_5\n              jumpi\n              dup1\n              0xc4e8fcb5\n              eq\n              tag_6\n              jumpi\n            tag_2:\n              0x00\n              dup1\n              revert\n                /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n            tag_3:\n              tag_7\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_8\n              swap2\n              swap1\n              tag_9\n              jump\t// in\n            tag_8:\n              tag_10\n              jump\t// in\n            tag_7:\n              mload(0x40)\n              tag_11\n              swap2\n              swap1\n              tag_12\n              jump\t// in\n            tag_11:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n            tag_4:\n              tag_13\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_14\n              swap2\n              swap1\n              tag_15\n              jump\t// in\n            tag_14:\n              tag_16\n              jump\t// in\n            tag_13:\n              mload(0x40)\n              tag_17\n              swap2\n              swap1\n              tag_12\n              jump\t// in\n            tag_17:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n            tag_5:\n              tag_18\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_19\n              swap2\n              swap1\n              tag_20\n              jump\t// in\n            tag_19:\n              tag_21\n              jump\t// in\n            tag_18:\n              mload(0x40)\n              tag_22\n              swap2\n              swap1\n              tag_12\n              jump\t// in\n            tag_22:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n            tag_6:\n              tag_23\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_24\n              swap2\n              swap1\n              tag_25\n              jump\t// in\n            tag_24:\n              tag_26\n              jump\t// in\n            tag_23:\n              stop\n                /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n            tag_10:\n                /* \"conduit/Conduit.sol\":3732:3749  bytes4 magicValue */\n              0x00\n                /* \"conduit/Conduit.sol\":1695:1703  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n              0x00\n                /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n              0x20\n                /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n              mstore\n                /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n              0x40\n                /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n              keccak256\n                /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n              sload\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n              tag_28\n              jumpi\n                /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n              0x93daadf200000000000000000000000000000000000000000000000000000000\n                /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n              mstore\n                /* \"conduit/Conduit.sol\":2406:2414  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n              0x04\n                /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n              0x24\n                /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n              revert\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n            tag_28:\n                /* \"conduit/Conduit.sol\":3839:3869  uint256 totalStandardTransfers */\n              0x00\n                /* \"conduit/Conduit.sol\":3872:3881  transfers */\n              dup4\n              dup4\n                /* \"conduit/Conduit.sol\":3872:3888  transfers.length */\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":3839:3888  uint256 totalStandardTransfers = transfers.length */\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":3943:3952  uint256 i */\n              0x00\n                /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n            tag_30:\n                /* \"conduit/Conduit.sol\":3962:3984  totalStandardTransfers */\n              dup2\n                /* \"conduit/Conduit.sol\":3958:3959  i */\n              dup2\n                /* \"conduit/Conduit.sol\":3958:3984  i < totalStandardTransfers */\n              lt\n                /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n              iszero\n              tag_31\n              jumpi\n                /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n              tag_33\n                /* \"conduit/Conduit.sol\":4087:4096  transfers */\n              dup6\n              dup6\n                /* \"conduit/Conduit.sol\":4097:4098  i */\n              dup4\n                /* \"conduit/Conduit.sol\":4087:4099  transfers[i] */\n              dup2\n              dup2\n              lt\n              tag_34\n              jumpi\n              tag_35\n              tag_36\n              jump\t// in\n            tag_35:\n            tag_34:\n              swap1\n              pop\n              0xc0\n              mul\n              add\n                /* \"conduit/Conduit.sol\":4077:4086  _transfer */\n              tag_37\n                /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n              jump\t// in\n            tag_33:\n                /* \"conduit/Conduit.sol\":4219:4222  ++i */\n              dup1\n              0x01\n              add\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n              jump(tag_30)\n            tag_31:\n              pop\n                /* \"conduit/Conduit.sol\":4348:4369  this.execute.selector */\n              shl(0xe0, 0x4ce34aa2)\n                /* \"conduit/Conduit.sol\":4335:4369  magicValue = this.execute.selector */\n              swap2\n              pop\n                /* \"conduit/Conduit.sol\":3755:4376  {... */\n              pop\n                /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n            tag_16:\n                /* \"conduit/Conduit.sol\":6733:6750  bytes4 magicValue */\n              0x00\n                /* \"conduit/Conduit.sol\":1695:1703  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n              0x00\n                /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n              0x20\n                /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n              mstore\n                /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n              0x40\n                /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n              keccak256\n                /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n              sload\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n              tag_39\n              jumpi\n                /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n              0x93daadf200000000000000000000000000000000000000000000000000000000\n                /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n              mstore\n                /* \"conduit/Conduit.sol\":2406:2414  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n              0x04\n                /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n              0x24\n                /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n              revert\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n            tag_39:\n                /* \"conduit/Conduit.sol\":6836:6866  uint256 totalStandardTransfers */\n              0x00\n                /* \"conduit/Conduit.sol\":6869:6886  standardTransfers */\n              dup6\n              dup6\n                /* \"conduit/Conduit.sol\":6869:6893  standardTransfers.length */\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":6836:6893  uint256 totalStandardTransfers = standardTransfers.length */\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":6957:6966  uint256 i */\n              0x00\n                /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n            tag_41:\n                /* \"conduit/Conduit.sol\":6976:6998  totalStandardTransfers */\n              dup2\n                /* \"conduit/Conduit.sol\":6972:6973  i */\n              dup2\n                /* \"conduit/Conduit.sol\":6972:6998  i < totalStandardTransfers */\n              lt\n                /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n              iszero\n              tag_42\n              jumpi\n                /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n              tag_44\n                /* \"conduit/Conduit.sol\":7101:7118  standardTransfers */\n              dup8\n              dup8\n                /* \"conduit/Conduit.sol\":7119:7120  i */\n              dup4\n                /* \"conduit/Conduit.sol\":7101:7121  standardTransfers[i] */\n              dup2\n              dup2\n              lt\n              tag_45\n              jumpi\n              tag_46\n              tag_36\n              jump\t// in\n            tag_46:\n            tag_45:\n              swap1\n              pop\n              0xc0\n              mul\n              add\n                /* \"conduit/Conduit.sol\":7091:7100  _transfer */\n              tag_37\n                /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n              jump\t// in\n            tag_44:\n                /* \"conduit/Conduit.sol\":7241:7244  ++i */\n              dup1\n              0x01\n              add\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n              jump(tag_41)\n            tag_42:\n              pop\n                /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n              tag_47\n                /* \"conduit/Conduit.sol\":7514:7528  batchTransfers */\n              dup5\n              dup5\n                /* \"conduit/Conduit.sol\":7484:7513  _performERC1155BatchTransfers */\n              tag_48\n                /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n              jump\t// in\n            tag_47:\n                /* \"conduit/Conduit.sol\":7631:7665  this.executeWithBatch1155.selector */\n              shl(0xe0, 0x899e104c)\n                /* \"conduit/Conduit.sol\":7618:7665  magicValue = this.executeWithBatch1155.selector */\n              swap2\n              pop\n                /* \"conduit/Conduit.sol\":6752:7672  {... */\n              pop\n                /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n              swap5\n              swap4\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n            tag_21:\n                /* \"conduit/Conduit.sol\":5272:5289  bytes4 magicValue */\n              0x00\n                /* \"conduit/Conduit.sol\":1695:1703  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n              0x00\n                /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n              0x20\n                /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n              mstore\n                /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n              0x40\n                /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n              keccak256\n                /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n              sload\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n              tag_50\n              jumpi\n                /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n              0x93daadf200000000000000000000000000000000000000000000000000000000\n                /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n              mstore\n                /* \"conduit/Conduit.sol\":2406:2414  caller() */\n              caller\n                /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n              0x04\n                /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n              mstore\n                /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n              0x24\n                /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n              0x00\n                /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n              revert\n                /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n            tag_50:\n                /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n              tag_52\n                /* \"conduit/Conduit.sol\":5465:5479  batchTransfers */\n              dup4\n              dup4\n                /* \"conduit/Conduit.sol\":5435:5464  _performERC1155BatchTransfers */\n              tag_48\n                /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n              jump\t// in\n            tag_52:\n                /* \"conduit/Conduit.sol\":5582:5612  this.executeBatch1155.selector */\n              shl(0xe0, 0x8df25d92)\n                /* \"conduit/Conduit.sol\":5569:5612  magicValue = this.executeBatch1155.selector */\n              swap1\n              pop\n                /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n            tag_26:\n                /* \"conduit/Conduit.sol\":8074:8085  _controller */\n              immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n                /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"conduit/Conduit.sol\":8060:8070  msg.sender */\n              caller\n                /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n              tag_54\n              jumpi\n                /* \"conduit/Conduit.sol\":8108:8127  InvalidController() */\n              mload(0x40)\n              0x6d5769be00000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n            tag_54:\n                /* \"conduit/Conduit.sol\":8253:8259  isOpen */\n              dup1\n                /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n              iszero\n              iszero\n                /* \"conduit/Conduit.sol\":8231:8240  _channels */\n              0x00\n                /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n              dup1\n                /* \"conduit/Conduit.sol\":8241:8248  channel */\n              dup5\n                /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xff\n              and\n                /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n              iszero\n              iszero\n              sub\n                /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n              tag_55\n              jumpi\n                /* \"conduit/Conduit.sol\":8306:8313  channel */\n              dup2\n                /* \"conduit/Conduit.sol\":8315:8321  isOpen */\n              dup2\n                /* \"conduit/Conduit.sol\":8282:8322  ChannelStatusAlreadySet(channel, isOpen) */\n              mload(0x40)\n              0x924e341e00000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              tag_56\n              swap3\n              swap2\n              swap1\n              tag_57\n              jump\t// in\n            tag_56:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n            tag_55:\n                /* \"conduit/Conduit.sol\":8409:8415  isOpen */\n              dup1\n                /* \"conduit/Conduit.sol\":8388:8397  _channels */\n              0x00\n                /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n              dup1\n                /* \"conduit/Conduit.sol\":8398:8405  channel */\n              dup5\n                /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              0x00\n                /* \"conduit/Conduit.sol\":8388:8415  _channels[channel] = isOpen */\n              0x0100\n              exp\n              dup2\n              sload\n              dup2\n              0xff\n              mul\n              not\n              and\n              swap1\n              dup4\n              iszero\n              iszero\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"conduit/Conduit.sol\":8485:8492  channel */\n              dup2\n                /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2\n                /* \"conduit/Conduit.sol\":8494:8500  isOpen */\n              dup3\n                /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n              mload(0x40)\n              tag_58\n              swap2\n              swap1\n              tag_59\n              jump\t// in\n            tag_58:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log2\n                /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n              pop\n              pop\n              jump\t// out\n                /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n            tag_37:\n                /* \"conduit/Conduit.sol\":8980:9001  ConduitItemType.ERC20 */\n              0x01\n                /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n              0x03\n              dup2\n              gt\n              iszero\n              tag_61\n              jumpi\n              tag_62\n              tag_63\n              jump\t// in\n            tag_62:\n            tag_61:\n                /* \"conduit/Conduit.sol\":8963:8967  item */\n              dup2\n                /* \"conduit/Conduit.sol\":8963:8976  item.itemType */\n              0x00\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_64\n              swap2\n              swap1\n              tag_65\n              jump\t// in\n            tag_64:\n                /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n              0x03\n              dup2\n              gt\n              iszero\n              tag_66\n              jumpi\n              tag_67\n              tag_63\n              jump\t// in\n            tag_67:\n            tag_66:\n              sub\n                /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n              tag_68\n              jumpi\n                /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n              tag_69\n                /* \"conduit/Conduit.sol\":9326:9330  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9326:9336  item.token */\n              0x20\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_70\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_70:\n                /* \"conduit/Conduit.sol\":9338:9342  item */\n              dup3\n                /* \"conduit/Conduit.sol\":9338:9347  item.from */\n              0x40\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_72\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_72:\n                /* \"conduit/Conduit.sol\":9349:9353  item */\n              dup4\n                /* \"conduit/Conduit.sol\":9349:9356  item.to */\n              0x60\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_73\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_73:\n                /* \"conduit/Conduit.sol\":9358:9362  item */\n              dup5\n                /* \"conduit/Conduit.sol\":9358:9369  item.amount */\n              0xa0\n              add\n              calldataload\n                /* \"conduit/Conduit.sol\":9304:9325  _performERC20Transfer */\n              tag_74\n                /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n              jump\t// in\n            tag_69:\n                /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n              jump(tag_75)\n            tag_68:\n                /* \"conduit/Conduit.sol\":9408:9430  ConduitItemType.ERC721 */\n              0x02\n                /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n              0x03\n              dup2\n              gt\n              iszero\n              tag_76\n              jumpi\n              tag_77\n              tag_63\n              jump\t// in\n            tag_77:\n            tag_76:\n                /* \"conduit/Conduit.sol\":9391:9395  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9391:9404  item.itemType */\n              0x00\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_78\n              swap2\n              swap1\n              tag_65\n              jump\t// in\n            tag_78:\n                /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n              0x03\n              dup2\n              gt\n              iszero\n              tag_79\n              jumpi\n              tag_80\n              tag_63\n              jump\t// in\n            tag_80:\n            tag_79:\n              sub\n                /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n              tag_81\n              jumpi\n                /* \"conduit/Conduit.sol\":9535:9536  1 */\n              0x01\n                /* \"conduit/Conduit.sol\":9520:9524  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9520:9531  item.amount */\n              0xa0\n              add\n              calldataload\n                /* \"conduit/Conduit.sol\":9520:9536  item.amount != 1 */\n              eq\n                /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n              tag_82\n              jumpi\n                /* \"conduit/Conduit.sol\":9563:9592  InvalidERC721TransferAmount() */\n              mload(0x40)\n              0xefcc00b100000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n            tag_82:\n                /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n              tag_83\n                /* \"conduit/Conduit.sol\":9699:9703  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9699:9709  item.token */\n              0x20\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_84\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_84:\n                /* \"conduit/Conduit.sol\":9727:9731  item */\n              dup3\n                /* \"conduit/Conduit.sol\":9727:9736  item.from */\n              0x40\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_85\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_85:\n                /* \"conduit/Conduit.sol\":9754:9758  item */\n              dup4\n                /* \"conduit/Conduit.sol\":9754:9761  item.to */\n              0x60\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_86\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_86:\n                /* \"conduit/Conduit.sol\":9779:9783  item */\n              dup5\n                /* \"conduit/Conduit.sol\":9779:9794  item.identifier */\n              0x80\n              add\n              calldataload\n                /* \"conduit/Conduit.sol\":9659:9681  _performERC721Transfer */\n              tag_87\n                /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n              jump\t// in\n            tag_83:\n                /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n              jump(tag_88)\n            tag_81:\n                /* \"conduit/Conduit.sol\":9846:9869  ConduitItemType.ERC1155 */\n              0x03\n                /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n              dup1\n              dup2\n              gt\n              iszero\n              tag_89\n              jumpi\n              tag_90\n              tag_63\n              jump\t// in\n            tag_90:\n            tag_89:\n                /* \"conduit/Conduit.sol\":9829:9833  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9829:9842  item.itemType */\n              0x00\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_91\n              swap2\n              swap1\n              tag_65\n              jump\t// in\n            tag_91:\n                /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n              0x03\n              dup2\n              gt\n              iszero\n              tag_92\n              jumpi\n              tag_93\n              tag_63\n              jump\t// in\n            tag_93:\n            tag_92:\n              sub\n                /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n              tag_94\n              jumpi\n                /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n              tag_95\n                /* \"conduit/Conduit.sol\":9965:9969  item */\n              dup2\n                /* \"conduit/Conduit.sol\":9965:9975  item.token */\n              0x20\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_96\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_96:\n                /* \"conduit/Conduit.sol\":9993:9997  item */\n              dup3\n                /* \"conduit/Conduit.sol\":9993:10002  item.from */\n              0x40\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_97\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_97:\n                /* \"conduit/Conduit.sol\":10020:10024  item */\n              dup4\n                /* \"conduit/Conduit.sol\":10020:10027  item.to */\n              0x60\n              add\n              0x20\n              dup2\n              add\n              swap1\n              tag_98\n              swap2\n              swap1\n              tag_71\n              jump\t// in\n            tag_98:\n                /* \"conduit/Conduit.sol\":10045:10049  item */\n              dup5\n                /* \"conduit/Conduit.sol\":10045:10060  item.identifier */\n              0x80\n              add\n              calldataload\n                /* \"conduit/Conduit.sol\":10078:10082  item */\n              dup6\n                /* \"conduit/Conduit.sol\":10078:10089  item.amount */\n              0xa0\n              add\n              calldataload\n                /* \"conduit/Conduit.sol\":9924:9947  _performERC1155Transfer */\n              tag_99\n                /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n              jump\t// in\n            tag_95:\n                /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n              jump(tag_100)\n            tag_94:\n                /* \"conduit/Conduit.sol\":10177:10194  InvalidItemType() */\n              mload(0x40)\n              0x7932f1fc00000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n            tag_100:\n                /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n            tag_88:\n                /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n            tag_75:\n                /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n              pop\n              jump\t// out\n                /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n            tag_48:\n                /* \"lib/TokenTransferrer.sol\":23926:23947  batchTransfers.length */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":24213:24234  batchTransfers.offset */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":24493:24511  nextElementHeadPtr */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":24763:24802  ERC1155_safeBatchTransferFrom_signature */\n              0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":24709:24745  ConduitBatch1155Transfer_from_offset */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":24685:24816  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":24910:24911  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n            tag_102:\n                /* \"lib/TokenTransferrer.sol\":24932:24935  len */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":24929:24930  i */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":24926:24936  lt(i, len) */\n              lt\n                /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n              iszero\n              tag_104\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":25311:25329  nextElementHeadPtr */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":25298:25330  calldataload(nextElementHeadPtr) */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":25264:25276  arrayHeadPtr */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":25239:25348  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":25445:25455  elementPtr */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":25432:25456  calldataload(elementPtr) */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":25549:25554  token */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":25537:25555  extcodesize(token) */\n              extcodesize\n                /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n              tag_105\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":25612:25638  NoContract_error_signature */\n              0x5f15d67200000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":25586:25610  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":25579:25639  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":25695:25700  token */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":25667:25693  NoContract_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":25660:25701  mstore(NoContract_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":25755:25778  NoContract_error_length */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":25729:25753  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":25722:25779  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n            tag_105:\n                /* \"lib/TokenTransferrer.sol\":25939:25981  ConduitBatch1155Transfer_ids_length_offset */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":25927:25937  elementPtr */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":25923:25982  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n              add\n                /* \"lib/TokenTransferrer.sol\":25889:26000  calldataload(... */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":26231:26238  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":26220:26229  idsLength */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":26216:26239  mul(idsLength, OneWord) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":26144:26194  ConduitBatch1155Transfer_amounts_length_baseOffset */\n              0xc0\n                /* \"lib/TokenTransferrer.sol\":26119:26257  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":27544:27565  expectedAmountsOffset */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":27398:27438  ConduitBatchTransfer_amounts_head_offset */\n              0x80\n                /* \"lib/TokenTransferrer.sol\":27346:27356  elementPtr */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":27301:27476  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":27251:27510  calldataload(... */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":27215:27595  eq(... */\n              eq\n                /* \"lib/TokenTransferrer.sol\":27043:27085  ConduitBatch1155Transfer_ids_length_offset */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":26897:26937  ConduitBatch1155Transfer_ids_head_offset */\n              0x60\n                /* \"lib/TokenTransferrer.sol\":26845:26855  elementPtr */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":26800:26975  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":26750:27009  calldataload(... */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":26714:27115  eq(... */\n              eq\n                /* \"lib/TokenTransferrer.sol\":26631:27621  and(... */\n              and\n                /* \"lib/TokenTransferrer.sol\":26556:26577  expectedAmountsOffset */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":26544:26554  elementPtr */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":26540:26578  add(elementPtr, expectedAmountsOffset) */\n              add\n                /* \"lib/TokenTransferrer.sol\":26527:26579  calldataload(add(elementPtr, expectedAmountsOffset)) */\n              calldataload\n                /* \"lib/TokenTransferrer.sol\":26488:26497  idsLength */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":26456:26605  eq(... */\n              eq\n                /* \"lib/TokenTransferrer.sol\":26371:27643  and(... */\n              and\n                /* \"lib/TokenTransferrer.sol\":26343:27661  iszero(... */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":27752:27767  invalidEncoding */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n              iszero\n              tag_106\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":27884:27925  Invalid1155BatchTransferEncoding_selector */\n              0xeba2084c00000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":27822:27858  Invalid1155BatchTransferEncoding_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":27790:27947  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":28062:28101  Invalid1155BatchTransferEncoding_length */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":28000:28036  Invalid1155BatchTransferEncoding_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":27968:28123  revert(... */\n              revert\n                /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n            tag_106:\n                /* \"lib/TokenTransferrer.sol\":28269:28276  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":28249:28267  nextElementHeadPtr */\n              dup9\n                /* \"lib/TokenTransferrer.sol\":28245:28277  add(nextElementHeadPtr, OneWord) */\n              add\n                /* \"lib/TokenTransferrer.sol\":28223:28277  nextElementHeadPtr := add(nextElementHeadPtr, OneWord) */\n              swap8\n              pop\n                /* \"lib/TokenTransferrer.sol\":28532:28573  ConduitBatch1155Transfer_usable_head_size */\n              0x80\n                /* \"lib/TokenTransferrer.sol\":28473:28509  ConduitBatch1155Transfer_from_offset */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":28461:28471  elementPtr */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":28457:28510  add(elementPtr, ConduitBatch1155Transfer_from_offset) */\n              add\n                /* \"lib/TokenTransferrer.sol\":28408:28435  BatchTransfer1155Params_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":28374:28591  calldatacopy(... */\n              calldatacopy\n                /* \"lib/TokenTransferrer.sol\":28820:28828  TwoWords */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":28809:28818  idsLength */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":28805:28829  mul(idsLength, TwoWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":28795:28803  TwoWords */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":28791:28830  add(TwoWords, mul(idsLength, TwoWords)) */\n              add\n                /* \"lib/TokenTransferrer.sol\":29098:29115  idsAndAmountsSize */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":29031:29072  BatchTransfer1155Params_ids_length_offset */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":29002:29137  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":28943:28980  BatchTransfer1155Params_data_head_ptr */\n              0xa4\n                /* \"lib/TokenTransferrer.sol\":28915:29155  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":29431:29432  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":29370:29387  idsAndAmountsSize */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":29301:29344  BatchTransfer1155Params_data_length_basePtr */\n              0xc4\n                /* \"lib/TokenTransferrer.sol\":29272:29409  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":29244:29450  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":29659:29676  idsAndAmountsSize */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":29596:29637  BatchTransfer1155Params_calldata_baseSize */\n              0xc4\n                /* \"lib/TokenTransferrer.sol\":29571:29694  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":29966:29983  idsAndAmountsSize */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":29901:29943  ConduitBatch1155Transfer_ids_length_offset */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":29889:29899  elementPtr */\n              dup9\n                /* \"lib/TokenTransferrer.sol\":29885:29944  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n              add\n                /* \"lib/TokenTransferrer.sol\":29825:29863  BatchTransfer1155Params_ids_length_ptr */\n              0xc4\n                /* \"lib/TokenTransferrer.sol\":29791:30001  calldatacopy(... */\n              calldatacopy\n                /* \"lib/TokenTransferrer.sol\":30379:30380  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":30356:30357  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":30279:30295  transferDataSize */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":30198:30234  ConduitBatch1155Transfer_from_offset */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":30175:30176  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":30148:30153  token */\n              dup11\n                /* \"lib/TokenTransferrer.sol\":30121:30126  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":30095:30398  call(... */\n              call\n                /* \"lib/TokenTransferrer.sol\":30471:30478  success */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n              tag_107\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":30634:30650  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n              iszero\n              tag_108\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":31106:31113  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":31062:31075  AlmostOneWord */\n              0x1f\n                /* \"lib/TokenTransferrer.sol\":31044:31060  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":31040:31076  add(returndatasize(), AlmostOneWord) */\n              add\n                /* \"lib/TokenTransferrer.sol\":31007:31139  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":31800:31807  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":31782:31798  transferDataSize */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":31778:31808  div(transferDataSize, OneWord) */\n              div\n                /* \"lib/TokenTransferrer.sol\":31936:31951  returnDataWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":31923:31934  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":31919:31952  mul(CostPerWord, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":32073:32083  msizeWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":32056:32071  returnDataWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":32053:32084  gt(returnDataWords, msizeWords) */\n              gt\n                /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n              iszero\n              tag_109\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":32875:32901  MemoryExpansionCoefficient */\n              0x0200\n                /* \"lib/TokenTransferrer.sol\":32780:32790  msizeWords */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":32768:32778  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":32764:32791  mul(msizeWords, msizeWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":32657:32672  returnDataWords */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":32592:32607  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":32539:32718  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":32490:32833  sub(... */\n              sub\n                /* \"lib/TokenTransferrer.sol\":32445:32939  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":32358:32369  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":32305:32315  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":32288:32303  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":32284:32316  sub(returnDataWords, msizeWords) */\n              sub\n                /* \"lib/TokenTransferrer.sol\":32239:32407  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":32198:32973  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":32160:32164  cost */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":32123:33003  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":32115:33003  cost := add(... */\n              swap1\n              pop\n                /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n            tag_109:\n                /* \"lib/TokenTransferrer.sol\":33289:33294  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":33272:33286  ExtraGasBuffer */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":33266:33270  cost */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":33262:33287  add(cost, ExtraGasBuffer) */\n              add\n                /* \"lib/TokenTransferrer.sol\":33259:33295  lt(add(cost, ExtraGasBuffer), gas()) */\n              lt\n                /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n              iszero\n              tag_110\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":33425:33441  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":33422:33423  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":33419:33420  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":33404:33442  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"lib/TokenTransferrer.sol\":33562:33578  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":33559:33560  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":33552:33579  revert(0, returndatasize()) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n            tag_110:\n                /* \"lib/TokenTransferrer.sol\":30651:33627  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n            tag_108:\n                /* \"lib/TokenTransferrer.sol\":33756:33806  ERC1155BatchTransferGenericFailure_error_signature */\n              0xafc445e200000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":33729:33730  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":33697:33828  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":33943:33948  token */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":33897:33941  ERC1155BatchTransferGenericFailure_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":33890:33949  mstore(ERC1155BatchTransferGenericFailure_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":34122:34167  ERC1155BatchTransferGenericFailure_ids_offset */\n              0xc0\n                /* \"lib/TokenTransferrer.sol\":34060:34096  BatchTransfer1155Params_ids_head_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":34028:34189  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":34446:34486  BatchTransfer1155Params_amounts_head_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":34440:34487  mload(BatchTransfer1155Params_amounts_head_ptr) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":34403:34410  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":34370:34513  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":34304:34344  BatchTransfer1155Params_amounts_head_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":34272:34535  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":34726:34742  transferDataSize */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":34723:34724  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":34716:34743  revert(0, transferDataSize) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n            tag_107:\n                /* \"lib/TokenTransferrer.sol\":24984:34775  {... */\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":24967:24968  1 */\n              0x01\n                /* \"lib/TokenTransferrer.sol\":24964:24965  i */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":24960:24969  add(i, 1) */\n              add\n                /* \"lib/TokenTransferrer.sol\":24955:24969  i := add(i, 1) */\n              swap1\n              pop\n                /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n              jump(tag_102)\n            tag_104:\n                /* \"lib/TokenTransferrer.sol\":24883:24925  {... */\n              pop\n                /* \"lib/TokenTransferrer.sol\":35139:35163  DefaultFreeMemoryPointer */\n              0x80\n                /* \"lib/TokenTransferrer.sol\":35116:35137  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":35109:35164  mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":23901:35174  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n              pop\n              pop\n              jump\t// out\n                /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n            tag_74:\n                /* \"lib/TokenTransferrer.sol\":1771:1792  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":1765:1793  mload(FreeMemoryPointerSlot) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":1919:1947  ERC20_transferFrom_signature */\n              0x23b872dd00000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":1891:1917  ERC20_transferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":1884:1948  mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":1997:2001  from */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":1968:1995  ERC20_transferFrom_from_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":1961:2002  mstore(ERC20_transferFrom_from_ptr, from) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":2049:2051  to */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":2022:2047  ERC20_transferFrom_to_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":2015:2052  mstore(ERC20_transferFrom_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":2103:2109  amount */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":2072:2101  ERC20_transferFrom_amount_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":2065:2110  mstore(ERC20_transferFrom_amount_ptr, amount) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":2797:2804  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":2778:2779  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":2735:2760  ERC20_transferFrom_length */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":2691:2717  ERC20_transferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":2672:2673  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":2649:2654  token */\n              dup10\n                /* \"lib/TokenTransferrer.sol\":2626:2631  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":2604:2818  call(... */\n              call\n                /* \"lib/TokenTransferrer.sol\":3295:3305  callStatus */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":3242:3258  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":3235:3259  iszero(returndatasize()) */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":3209:3211  31 */\n              0x1f\n                /* \"lib/TokenTransferrer.sol\":3191:3207  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":3188:3212  gt(returndatasize(), 31) */\n              gt\n                /* \"lib/TokenTransferrer.sol\":3184:3185  1 */\n              0x01\n                /* \"lib/TokenTransferrer.sol\":3180:3181  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":3174:3182  mload(0) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":3171:3186  eq(mload(0), 1) */\n              eq\n                /* \"lib/TokenTransferrer.sol\":3167:3213  and(eq(mload(0), 1), gt(returndatasize(), 31)) */\n              and\n                /* \"lib/TokenTransferrer.sol\":3143:3277  or(... */\n              or\n                /* \"lib/TokenTransferrer.sol\":2927:3319  and(... */\n              and\n                /* \"lib/TokenTransferrer.sol\":3680:3696  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":3673:3697  iszero(returndatasize()) */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":3666:3698  iszero(iszero(returndatasize())) */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":3657:3664  success */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":3653:3699  and(success, iszero(iszero(returndatasize()))) */\n              and\n                /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n              tag_112\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":4001:4008  success */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":3991:3996  token */\n              dup8\n                /* \"lib/TokenTransferrer.sol\":3979:3997  extcodesize(token) */\n              extcodesize\n                /* \"lib/TokenTransferrer.sol\":3972:3998  iszero(extcodesize(token)) */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":3965:3999  iszero(iszero(extcodesize(token))) */\n              iszero\n                /* \"lib/TokenTransferrer.sol\":3961:4009  and(iszero(iszero(extcodesize(token))), success) */\n              and\n                /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n              tag_113\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":4090:4097  success */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n              tag_114\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":4189:4199  callStatus */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n              tag_115\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":4379:4395  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n              iszero\n              tag_116\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":4946:4953  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":4894:4907  AlmostOneWord */\n              0x1f\n                /* \"lib/TokenTransferrer.sol\":4876:4892  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":4872:4908  add(returndatasize(), AlmostOneWord) */\n              add\n                /* \"lib/TokenTransferrer.sol\":4831:4987  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":5352:5359  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":5340:5350  memPointer */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":5336:5360  div(memPointer, OneWord) */\n              div\n                /* \"lib/TokenTransferrer.sol\":5504:5519  returnDataWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":5491:5502  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":5487:5520  mul(CostPerWord, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":5657:5667  msizeWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":5640:5655  returnDataWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":5637:5668  gt(returnDataWords, msizeWords) */\n              gt\n                /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n              iszero\n              tag_117\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":6741:6767  MemoryExpansionCoefficient */\n              0x0200\n                /* \"lib/TokenTransferrer.sol\":6630:6640  msizeWords */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":6618:6628  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":6614:6641  mul(msizeWords, msizeWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":6491:6506  returnDataWords */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":6418:6433  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":6357:6560  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":6300:6691  sub(... */\n              sub\n                /* \"lib/TokenTransferrer.sol\":6247:6813  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":6144:6155  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":6034:6044  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":5965:5980  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":5908:6094  sub(... */\n              sub\n                /* \"lib/TokenTransferrer.sol\":5855:6201  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":5806:6855  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":5760:5764  cost */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":5715:6893  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":5707:6893  cost := add(... */\n              swap1\n              pop\n                /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n            tag_117:\n                /* \"lib/TokenTransferrer.sol\":7219:7224  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":7202:7216  ExtraGasBuffer */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":7196:7200  cost */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":7192:7217  add(cost, ExtraGasBuffer) */\n              add\n                /* \"lib/TokenTransferrer.sol\":7189:7225  lt(add(cost, ExtraGasBuffer), gas()) */\n              lt\n                /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n              iszero\n              tag_118\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":7417:7433  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":7414:7415  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":7411:7412  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":7396:7434  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"lib/TokenTransferrer.sol\":7617:7633  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":7614:7615  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":7607:7634  revert(0, returndatasize()) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n            tag_118:\n                /* \"lib/TokenTransferrer.sol\":4396:7698  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n            tag_116:\n                /* \"lib/TokenTransferrer.sol\":7921:7964  TokenTransferGenericFailure_error_signature */\n              0xf486bc8700000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":7846:7887  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":7806:7994  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8140:8145  token */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":8063:8106  TokenTransferGenericFailure_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":8023:8175  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8320:8324  from */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":8244:8286  TokenTransferGenericFailure_error_from_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":8204:8354  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8432:8434  to */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":8390:8430  TokenTransferGenericFailure_error_to_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":8383:8435  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8513:8514  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":8471:8511  TokenTransferGenericFailure_error_id_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":8464:8515  mstore(TokenTransferGenericFailure_error_id_ptr, 0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8662:8668  amount */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":8584:8628  TokenTransferGenericFailure_error_amount_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":8544:8698  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":8842:8882  TokenTransferGenericFailure_error_length */\n              0xa4\n                /* \"lib/TokenTransferrer.sol\":8767:8808  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":8727:8912  revert(... */\n              revert\n                /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n            tag_115:\n                /* \"lib/TokenTransferrer.sol\":9227:9276  BadReturnValueFromERC20OnTransfer_error_signature */\n              0x9889192300000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":9150:9197  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":9114:9302  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":9442:9447  token */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":9363:9412  BadReturnValueFromERC20OnTransfer_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":9327:9473  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":9612:9616  from */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":9534:9582  BadReturnValueFromERC20OnTransfer_error_from_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":9498:9642  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":9779:9781  to */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":9703:9749  BadReturnValueFromERC20OnTransfer_error_to_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":9667:9807  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":9948:9954  amount */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":9868:9918  BadReturnValueFromERC20OnTransfer_error_amount_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":9832:9980  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":10118:10164  BadReturnValueFromERC20OnTransfer_error_length */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":10041:10088  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":10005:10190  revert(... */\n              revert\n                /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n            tag_114:\n                /* \"lib/TokenTransferrer.sol\":10348:10374  NoContract_error_signature */\n              0x5f15d67200000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":10322:10346  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":10315:10375  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":10431:10436  token */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":10403:10429  NoContract_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":10396:10437  mstore(NoContract_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":10491:10514  NoContract_error_length */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":10465:10489  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":10458:10515  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n            tag_113:\n                /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n            tag_112:\n                /* \"lib/TokenTransferrer.sol\":10854:10864  memPointer */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":10831:10852  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":10824:10865  mstore(FreeMemoryPointerSlot, memPointer) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":10942:10943  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":10932:10940  ZeroSlot */\n              0x60\n                /* \"lib/TokenTransferrer.sol\":10925:10944  mstore(ZeroSlot, 0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":1573:10954  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n            tag_87:\n                /* \"lib/TokenTransferrer.sol\":11883:11888  token */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":11871:11889  extcodesize(token) */\n              extcodesize\n                /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n              tag_120\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":11942:11968  NoContract_error_signature */\n              0x5f15d67200000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":11916:11940  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":11909:11969  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12021:12026  token */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":11993:12019  NoContract_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":11986:12027  mstore(NoContract_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12077:12100  NoContract_error_length */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":12051:12075  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":12044:12101  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n            tag_120:\n                /* \"lib/TokenTransferrer.sol\":12313:12334  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":12307:12335  mload(FreeMemoryPointerSlot) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":12459:12488  ERC721_transferFrom_signature */\n              0x23b872dd00000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":12430:12457  ERC721_transferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":12423:12489  mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12539:12543  from */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":12509:12537  ERC721_transferFrom_from_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":12502:12544  mstore(ERC721_transferFrom_from_ptr, from) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12592:12594  to */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":12564:12590  ERC721_transferFrom_to_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":12557:12595  mstore(ERC721_transferFrom_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12643:12653  identifier */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":12615:12641  ERC721_transferFrom_id_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":12608:12654  mstore(ERC721_transferFrom_id_ptr, identifier) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":12933:12934  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":12914:12915  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":12870:12896  ERC721_transferFrom_length */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":12825:12852  ERC721_transferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":12806:12807  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":12783:12788  token */\n              dup10\n                /* \"lib/TokenTransferrer.sol\":12760:12765  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":12738:12948  call(... */\n              call\n                /* \"lib/TokenTransferrer.sol\":13013:13020  success */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n              tag_121\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":13164:13180  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n              iszero\n              tag_122\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":13606:13613  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":13566:13579  AlmostOneWord */\n              0x1f\n                /* \"lib/TokenTransferrer.sol\":13548:13564  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":13544:13580  add(returndatasize(), AlmostOneWord) */\n              add\n                /* \"lib/TokenTransferrer.sol\":13515:13635  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":13917:13924  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":13905:13915  memPointer */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":13901:13925  div(memPointer, OneWord) */\n              div\n                /* \"lib/TokenTransferrer.sol\":14045:14060  returnDataWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":14032:14043  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":14028:14061  mul(CostPerWord, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":14174:14184  msizeWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":14157:14172  returnDataWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":14154:14185  gt(returnDataWords, msizeWords) */\n              gt\n                /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n              iszero\n              tag_123\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":14782:14808  MemoryExpansionCoefficient */\n              0x0200\n                /* \"lib/TokenTransferrer.sol\":14695:14705  msizeWords */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":14683:14693  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":14679:14706  mul(msizeWords, msizeWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":14621:14636  returnDataWords */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":14604:14619  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":14600:14637  mul(returnDataWords, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":14555:14744  sub(... */\n              sub\n                /* \"lib/TokenTransferrer.sol\":14514:14842  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":14435:14446  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":14386:14396  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":14369:14384  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":14365:14397  sub(returnDataWords, msizeWords) */\n              sub\n                /* \"lib/TokenTransferrer.sol\":14324:14480  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":14287:14872  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":14253:14257  cost */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":14220:14898  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":14212:14898  cost := add(... */\n              swap1\n              pop\n                /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n            tag_123:\n                /* \"lib/TokenTransferrer.sol\":15164:15169  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":15147:15161  ExtraGasBuffer */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":15141:15145  cost */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":15137:15162  add(cost, ExtraGasBuffer) */\n              add\n                /* \"lib/TokenTransferrer.sol\":15134:15170  lt(add(cost, ExtraGasBuffer), gas()) */\n              lt\n                /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n              iszero\n              tag_124\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":15299:15315  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":15296:15297  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":15293:15294  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":15278:15316  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"lib/TokenTransferrer.sol\":15432:15448  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":15429:15430  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":15422:15449  revert(0, returndatasize()) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n            tag_124:\n                /* \"lib/TokenTransferrer.sol\":13181:15489  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n            tag_122:\n                /* \"lib/TokenTransferrer.sol\":15664:15707  TokenTransferGenericFailure_error_signature */\n              0xf486bc8700000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":15601:15642  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":15573:15725  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":15794:15799  token */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":15749:15792  TokenTransferGenericFailure_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":15742:15800  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":15868:15872  from */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":15824:15866  TokenTransferGenericFailure_error_from_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":15817:15873  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":15939:15941  to */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":15897:15937  TokenTransferGenericFailure_error_to_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":15890:15942  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":16008:16018  identifier */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":15966:16006  TokenTransferGenericFailure_error_id_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":15959:16019  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":16089:16090  1 */\n              0x01\n                /* \"lib/TokenTransferrer.sol\":16043:16087  TokenTransferGenericFailure_error_amount_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":16036:16091  mstore(TokenTransferGenericFailure_error_amount_ptr, 1) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":16199:16239  TokenTransferGenericFailure_error_length */\n              0xa4\n                /* \"lib/TokenTransferrer.sol\":16136:16177  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":16108:16257  revert(... */\n              revert\n                /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n            tag_121:\n                /* \"lib/TokenTransferrer.sol\":16372:16382  memPointer */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":16349:16370  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":16342:16383  mstore(FreeMemoryPointerSlot, memPointer) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":16460:16461  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":16450:16458  ZeroSlot */\n              0x60\n                /* \"lib/TokenTransferrer.sol\":16443:16462  mstore(ZeroSlot, 0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":11798:16472  {... */\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n            tag_99:\n                /* \"lib/TokenTransferrer.sol\":17471:17476  token */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":17459:17477  extcodesize(token) */\n              extcodesize\n                /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n              tag_126\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":17530:17556  NoContract_error_signature */\n              0x5f15d67200000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":17504:17528  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":17497:17557  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":17609:17614  token */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":17581:17607  NoContract_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":17574:17615  mstore(NoContract_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":17665:17688  NoContract_error_length */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":17639:17663  NoContract_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":17632:17689  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n            tag_126:\n                /* \"lib/TokenTransferrer.sol\":17895:17916  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":17889:17917  mload(FreeMemoryPointerSlot) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":17952:17960  Slot0x80 */\n              0x80\n                /* \"lib/TokenTransferrer.sol\":17946:17961  mload(Slot0x80) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":17996:18004  Slot0xA0 */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":17990:18005  mload(Slot0xA0) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":18040:18048  Slot0xC0 */\n              0xc0\n                /* \"lib/TokenTransferrer.sol\":18034:18049  mload(Slot0xC0) */\n              mload\n                /* \"lib/TokenTransferrer.sol\":18215:18249  ERC1155_safeTransferFrom_signature */\n              0xf242432a00000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":18165:18197  ERC1155_safeTransferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":18141:18263  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18318:18322  from */\n              dup8\n                /* \"lib/TokenTransferrer.sol\":18283:18316  ERC1155_safeTransferFrom_from_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":18276:18323  mstore(ERC1155_safeTransferFrom_from_ptr, from) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18376:18378  to */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":18343:18374  ERC1155_safeTransferFrom_to_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":18336:18379  mstore(ERC1155_safeTransferFrom_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18432:18442  identifier */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":18399:18430  ERC1155_safeTransferFrom_id_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":18392:18443  mstore(ERC1155_safeTransferFrom_id_ptr, identifier) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18500:18506  amount */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":18463:18498  ERC1155_safeTransferFrom_amount_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":18456:18507  mstore(ERC1155_safeTransferFrom_amount_ptr, amount) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18602:18645  ERC1155_safeTransferFrom_data_length_offset */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":18544:18584  ERC1155_safeTransferFrom_data_offset_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":18520:18659  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":18721:18722  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":18679:18719  ERC1155_safeTransferFrom_data_length_ptr */\n              0xa4\n                /* \"lib/TokenTransferrer.sol\":18672:18723  mstore(ERC1155_safeTransferFrom_data_length_ptr, 0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":19012:19013  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":18993:18994  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":18944:18975  ERC1155_safeTransferFrom_length */\n              0xc4\n                /* \"lib/TokenTransferrer.sol\":18894:18926  ERC1155_safeTransferFrom_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":18875:18876  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":18852:18857  token */\n              dup14\n                /* \"lib/TokenTransferrer.sol\":18829:18834  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":18807:19027  call(... */\n              call\n                /* \"lib/TokenTransferrer.sol\":19092:19099  success */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n              tag_127\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":19243:19259  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n              iszero\n              tag_128\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":19685:19692  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":19645:19658  AlmostOneWord */\n              0x1f\n                /* \"lib/TokenTransferrer.sol\":19627:19643  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":19623:19659  add(returndatasize(), AlmostOneWord) */\n              add\n                /* \"lib/TokenTransferrer.sol\":19594:19714  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":19996:20003  OneWord */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":19984:19994  memPointer */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":19980:20004  div(memPointer, OneWord) */\n              div\n                /* \"lib/TokenTransferrer.sol\":20124:20139  returnDataWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":20111:20122  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":20107:20140  mul(CostPerWord, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":20253:20263  msizeWords */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":20236:20251  returnDataWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":20233:20264  gt(returnDataWords, msizeWords) */\n              gt\n                /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n              iszero\n              tag_129\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":20861:20887  MemoryExpansionCoefficient */\n              0x0200\n                /* \"lib/TokenTransferrer.sol\":20774:20784  msizeWords */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":20762:20772  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":20758:20785  mul(msizeWords, msizeWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":20700:20715  returnDataWords */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":20683:20698  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":20679:20716  mul(returnDataWords, returnDataWords) */\n              mul\n                /* \"lib/TokenTransferrer.sol\":20634:20823  sub(... */\n              sub\n                /* \"lib/TokenTransferrer.sol\":20593:20921  div(... */\n              div\n                /* \"lib/TokenTransferrer.sol\":20514:20525  CostPerWord */\n              0x03\n                /* \"lib/TokenTransferrer.sol\":20465:20475  msizeWords */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":20448:20463  returnDataWords */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":20444:20476  sub(returnDataWords, msizeWords) */\n              sub\n                /* \"lib/TokenTransferrer.sol\":20403:20559  mul(... */\n              mul\n                /* \"lib/TokenTransferrer.sol\":20366:20951  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":20332:20336  cost */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":20299:20977  add(... */\n              add\n                /* \"lib/TokenTransferrer.sol\":20291:20977  cost := add(... */\n              swap1\n              pop\n                /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n            tag_129:\n                /* \"lib/TokenTransferrer.sol\":21243:21248  gas() */\n              gas\n                /* \"lib/TokenTransferrer.sol\":21226:21240  ExtraGasBuffer */\n              0x20\n                /* \"lib/TokenTransferrer.sol\":21220:21224  cost */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":21216:21241  add(cost, ExtraGasBuffer) */\n              add\n                /* \"lib/TokenTransferrer.sol\":21213:21249  lt(add(cost, ExtraGasBuffer), gas()) */\n              lt\n                /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n              iszero\n              tag_130\n              jumpi\n                /* \"lib/TokenTransferrer.sol\":21378:21394  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":21375:21376  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":21372:21373  0 */\n              dup1\n                /* \"lib/TokenTransferrer.sol\":21357:21395  returndatacopy(0, 0, returndatasize()) */\n              returndatacopy\n                /* \"lib/TokenTransferrer.sol\":21511:21527  returndatasize() */\n              returndatasize\n                /* \"lib/TokenTransferrer.sol\":21508:21509  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":21501:21528  revert(0, returndatasize()) */\n              revert\n                /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n            tag_130:\n                /* \"lib/TokenTransferrer.sol\":19260:21568  {... */\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n            tag_128:\n                /* \"lib/TokenTransferrer.sol\":21743:21786  TokenTransferGenericFailure_error_signature */\n              0xf486bc8700000000000000000000000000000000000000000000000000000000\n                /* \"lib/TokenTransferrer.sol\":21680:21721  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":21652:21804  mstore(... */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":21873:21878  token */\n              dup10\n                /* \"lib/TokenTransferrer.sol\":21828:21871  TokenTransferGenericFailure_error_token_ptr */\n              0x04\n                /* \"lib/TokenTransferrer.sol\":21821:21879  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":21947:21951  from */\n              dup9\n                /* \"lib/TokenTransferrer.sol\":21903:21945  TokenTransferGenericFailure_error_from_ptr */\n              0x24\n                /* \"lib/TokenTransferrer.sol\":21896:21952  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22018:22020  to */\n              dup8\n                /* \"lib/TokenTransferrer.sol\":21976:22016  TokenTransferGenericFailure_error_to_ptr */\n              0x44\n                /* \"lib/TokenTransferrer.sol\":21969:22021  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22087:22097  identifier */\n              dup7\n                /* \"lib/TokenTransferrer.sol\":22045:22085  TokenTransferGenericFailure_error_id_ptr */\n              0x64\n                /* \"lib/TokenTransferrer.sol\":22038:22098  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22168:22174  amount */\n              dup6\n                /* \"lib/TokenTransferrer.sol\":22122:22166  TokenTransferGenericFailure_error_amount_ptr */\n              0x84\n                /* \"lib/TokenTransferrer.sol\":22115:22175  mstore(TokenTransferGenericFailure_error_amount_ptr, amount) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22283:22323  TokenTransferGenericFailure_error_length */\n              0xa4\n                /* \"lib/TokenTransferrer.sol\":22220:22261  TokenTransferGenericFailure_error_sig_ptr */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":22192:22341  revert(... */\n              revert\n                /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n            tag_127:\n                /* \"lib/TokenTransferrer.sol\":22386:22394  slot0x80 */\n              dup4\n                /* \"lib/TokenTransferrer.sol\":22376:22384  Slot0x80 */\n              0x80\n                /* \"lib/TokenTransferrer.sol\":22369:22395  mstore(Slot0x80, slot0x80) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22447:22455  slot0xA0 */\n              dup3\n                /* \"lib/TokenTransferrer.sol\":22437:22445  Slot0xA0 */\n              0xa0\n                /* \"lib/TokenTransferrer.sol\":22430:22456  mstore(Slot0xA0, slot0xA0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22508:22516  slot0xC0 */\n              dup2\n                /* \"lib/TokenTransferrer.sol\":22498:22506  Slot0xC0 */\n              0xc0\n                /* \"lib/TokenTransferrer.sol\":22491:22517  mstore(Slot0xC0, slot0xC0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22640:22650  memPointer */\n              dup5\n                /* \"lib/TokenTransferrer.sol\":22617:22638  FreeMemoryPointerSlot */\n              0x40\n                /* \"lib/TokenTransferrer.sol\":22610:22651  mstore(FreeMemoryPointerSlot, memPointer) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":22728:22729  0 */\n              0x00\n                /* \"lib/TokenTransferrer.sol\":22718:22726  ZeroSlot */\n              0x60\n                /* \"lib/TokenTransferrer.sol\":22711:22730  mstore(ZeroSlot, 0) */\n              mstore\n                /* \"lib/TokenTransferrer.sol\":17386:22740  {... */\n              pop\n              pop\n              pop\n              pop\n              pop\n                /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n              pop\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":88:205   */\n            tag_132:\n                /* \"#utility.yul\":197:198   */\n              0x00\n                /* \"#utility.yul\":194:195   */\n              dup1\n                /* \"#utility.yul\":187:199   */\n              revert\n                /* \"#utility.yul\":211:328   */\n            tag_133:\n                /* \"#utility.yul\":320:321   */\n              0x00\n                /* \"#utility.yul\":317:318   */\n              dup1\n                /* \"#utility.yul\":310:322   */\n              revert\n                /* \"#utility.yul\":334:451   */\n            tag_134:\n                /* \"#utility.yul\":443:444   */\n              0x00\n                /* \"#utility.yul\":440:441   */\n              dup1\n                /* \"#utility.yul\":433:445   */\n              revert\n                /* \"#utility.yul\":457:574   */\n            tag_135:\n                /* \"#utility.yul\":566:567   */\n              0x00\n                /* \"#utility.yul\":563:564   */\n              dup1\n                /* \"#utility.yul\":556:568   */\n              revert\n                /* \"#utility.yul\":580:697   */\n            tag_136:\n                /* \"#utility.yul\":689:690   */\n              0x00\n                /* \"#utility.yul\":686:687   */\n              dup1\n                /* \"#utility.yul\":679:691   */\n              revert\n                /* \"#utility.yul\":735:1338   */\n            tag_137:\n                /* \"#utility.yul\":843:851   */\n              0x00\n                /* \"#utility.yul\":853:859   */\n              dup1\n                /* \"#utility.yul\":903:906   */\n              dup4\n                /* \"#utility.yul\":896:900   */\n              0x1f\n                /* \"#utility.yul\":888:894   */\n              dup5\n                /* \"#utility.yul\":884:901   */\n              add\n                /* \"#utility.yul\":880:907   */\n              slt\n                /* \"#utility.yul\":870:992   */\n              tag_160\n              jumpi\n                /* \"#utility.yul\":911:990   */\n              tag_161\n              tag_134\n              jump\t// in\n            tag_161:\n                /* \"#utility.yul\":870:992   */\n            tag_160:\n                /* \"#utility.yul\":1024:1030   */\n              dup3\n                /* \"#utility.yul\":1011:1031   */\n              calldataload\n                /* \"#utility.yul\":1001:1031   */\n              swap1\n              pop\n                /* \"#utility.yul\":1054:1072   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":1046:1052   */\n              dup2\n                /* \"#utility.yul\":1043:1073   */\n              gt\n                /* \"#utility.yul\":1040:1157   */\n              iszero\n              tag_162\n              jumpi\n                /* \"#utility.yul\":1076:1155   */\n              tag_163\n              tag_135\n              jump\t// in\n            tag_163:\n                /* \"#utility.yul\":1040:1157   */\n            tag_162:\n                /* \"#utility.yul\":1190:1194   */\n              0x20\n                /* \"#utility.yul\":1182:1188   */\n              dup4\n                /* \"#utility.yul\":1178:1195   */\n              add\n                /* \"#utility.yul\":1166:1195   */\n              swap2\n              pop\n                /* \"#utility.yul\":1244:1247   */\n              dup4\n                /* \"#utility.yul\":1236:1240   */\n              0xc0\n                /* \"#utility.yul\":1228:1234   */\n              dup3\n                /* \"#utility.yul\":1224:1241   */\n              mul\n                /* \"#utility.yul\":1214:1222   */\n              dup4\n                /* \"#utility.yul\":1210:1242   */\n              add\n                /* \"#utility.yul\":1207:1248   */\n              gt\n                /* \"#utility.yul\":1204:1332   */\n              iszero\n              tag_164\n              jumpi\n                /* \"#utility.yul\":1251:1330   */\n              tag_165\n              tag_136\n              jump\t// in\n            tag_165:\n                /* \"#utility.yul\":1204:1332   */\n            tag_164:\n                /* \"#utility.yul\":735:1338   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1344:1973   */\n            tag_9:\n                /* \"#utility.yul\":1465:1471   */\n              0x00\n                /* \"#utility.yul\":1473:1479   */\n              dup1\n                /* \"#utility.yul\":1522:1524   */\n              0x20\n                /* \"#utility.yul\":1510:1519   */\n              dup4\n                /* \"#utility.yul\":1501:1508   */\n              dup6\n                /* \"#utility.yul\":1497:1520   */\n              sub\n                /* \"#utility.yul\":1493:1525   */\n              slt\n                /* \"#utility.yul\":1490:1609   */\n              iszero\n              tag_167\n              jumpi\n                /* \"#utility.yul\":1528:1607   */\n              tag_168\n              tag_132\n              jump\t// in\n            tag_168:\n                /* \"#utility.yul\":1490:1609   */\n            tag_167:\n                /* \"#utility.yul\":1676:1677   */\n              0x00\n                /* \"#utility.yul\":1665:1674   */\n              dup4\n                /* \"#utility.yul\":1661:1678   */\n              add\n                /* \"#utility.yul\":1648:1679   */\n              calldataload\n                /* \"#utility.yul\":1706:1724   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":1698:1704   */\n              dup2\n                /* \"#utility.yul\":1695:1725   */\n              gt\n                /* \"#utility.yul\":1692:1809   */\n              iszero\n              tag_169\n              jumpi\n                /* \"#utility.yul\":1728:1807   */\n              tag_170\n              tag_133\n              jump\t// in\n            tag_170:\n                /* \"#utility.yul\":1692:1809   */\n            tag_169:\n                /* \"#utility.yul\":1841:1956   */\n              tag_171\n                /* \"#utility.yul\":1948:1955   */\n              dup6\n                /* \"#utility.yul\":1939:1945   */\n              dup3\n                /* \"#utility.yul\":1928:1937   */\n              dup7\n                /* \"#utility.yul\":1924:1946   */\n              add\n                /* \"#utility.yul\":1841:1956   */\n              tag_137\n              jump\t// in\n            tag_171:\n                /* \"#utility.yul\":1823:1956   */\n              swap3\n              pop\n              swap3\n              pop\n                /* \"#utility.yul\":1619:1966   */\n              pop\n                /* \"#utility.yul\":1344:1973   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1979:2128   */\n            tag_138:\n                /* \"#utility.yul\":2015:2022   */\n              0x00\n                /* \"#utility.yul\":2055:2121   */\n              0xffffffff00000000000000000000000000000000000000000000000000000000\n                /* \"#utility.yul\":2048:2053   */\n              dup3\n                /* \"#utility.yul\":2044:2122   */\n              and\n                /* \"#utility.yul\":2033:2122   */\n              swap1\n              pop\n                /* \"#utility.yul\":1979:2128   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2134:2249   */\n            tag_139:\n                /* \"#utility.yul\":2219:2242   */\n              tag_174\n                /* \"#utility.yul\":2236:2241   */\n              dup2\n                /* \"#utility.yul\":2219:2242   */\n              tag_138\n              jump\t// in\n            tag_174:\n                /* \"#utility.yul\":2214:2217   */\n              dup3\n                /* \"#utility.yul\":2207:2243   */\n              mstore\n                /* \"#utility.yul\":2134:2249   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2255:2473   */\n            tag_12:\n                /* \"#utility.yul\":2346:2350   */\n              0x00\n                /* \"#utility.yul\":2384:2386   */\n              0x20\n                /* \"#utility.yul\":2373:2382   */\n              dup3\n                /* \"#utility.yul\":2369:2387   */\n              add\n                /* \"#utility.yul\":2361:2387   */\n              swap1\n              pop\n                /* \"#utility.yul\":2397:2466   */\n              tag_176\n                /* \"#utility.yul\":2463:2464   */\n              0x00\n                /* \"#utility.yul\":2452:2461   */\n              dup4\n                /* \"#utility.yul\":2448:2465   */\n              add\n                /* \"#utility.yul\":2439:2445   */\n              dup5\n                /* \"#utility.yul\":2397:2466   */\n              tag_139\n              jump\t// in\n            tag_176:\n                /* \"#utility.yul\":2255:2473   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2520:3132   */\n            tag_140:\n                /* \"#utility.yul\":2637:2645   */\n              0x00\n                /* \"#utility.yul\":2647:2653   */\n              dup1\n                /* \"#utility.yul\":2697:2700   */\n              dup4\n                /* \"#utility.yul\":2690:2694   */\n              0x1f\n                /* \"#utility.yul\":2682:2688   */\n              dup5\n                /* \"#utility.yul\":2678:2695   */\n              add\n                /* \"#utility.yul\":2674:2701   */\n              slt\n                /* \"#utility.yul\":2664:2786   */\n              tag_178\n              jumpi\n                /* \"#utility.yul\":2705:2784   */\n              tag_179\n              tag_134\n              jump\t// in\n            tag_179:\n                /* \"#utility.yul\":2664:2786   */\n            tag_178:\n                /* \"#utility.yul\":2818:2824   */\n              dup3\n                /* \"#utility.yul\":2805:2825   */\n              calldataload\n                /* \"#utility.yul\":2795:2825   */\n              swap1\n              pop\n                /* \"#utility.yul\":2848:2866   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":2840:2846   */\n              dup2\n                /* \"#utility.yul\":2837:2867   */\n              gt\n                /* \"#utility.yul\":2834:2951   */\n              iszero\n              tag_180\n              jumpi\n                /* \"#utility.yul\":2870:2949   */\n              tag_181\n              tag_135\n              jump\t// in\n            tag_181:\n                /* \"#utility.yul\":2834:2951   */\n            tag_180:\n                /* \"#utility.yul\":2984:2988   */\n              0x20\n                /* \"#utility.yul\":2976:2982   */\n              dup4\n                /* \"#utility.yul\":2972:2989   */\n              add\n                /* \"#utility.yul\":2960:2989   */\n              swap2\n              pop\n                /* \"#utility.yul\":3038:3041   */\n              dup4\n                /* \"#utility.yul\":3030:3034   */\n              0x20\n                /* \"#utility.yul\":3022:3028   */\n              dup3\n                /* \"#utility.yul\":3018:3035   */\n              mul\n                /* \"#utility.yul\":3008:3016   */\n              dup4\n                /* \"#utility.yul\":3004:3036   */\n              add\n                /* \"#utility.yul\":3001:3042   */\n              gt\n                /* \"#utility.yul\":2998:3126   */\n              iszero\n              tag_182\n              jumpi\n                /* \"#utility.yul\":3045:3124   */\n              tag_183\n              tag_136\n              jump\t// in\n            tag_183:\n                /* \"#utility.yul\":2998:3126   */\n            tag_182:\n                /* \"#utility.yul\":2520:3132   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3138:4230   */\n            tag_15:\n                /* \"#utility.yul\":3339:3345   */\n              0x00\n                /* \"#utility.yul\":3347:3353   */\n              dup1\n                /* \"#utility.yul\":3355:3361   */\n              0x00\n                /* \"#utility.yul\":3363:3369   */\n              dup1\n                /* \"#utility.yul\":3412:3414   */\n              0x40\n                /* \"#utility.yul\":3400:3409   */\n              dup6\n                /* \"#utility.yul\":3391:3398   */\n              dup8\n                /* \"#utility.yul\":3387:3410   */\n              sub\n                /* \"#utility.yul\":3383:3415   */\n              slt\n                /* \"#utility.yul\":3380:3499   */\n              iszero\n              tag_185\n              jumpi\n                /* \"#utility.yul\":3418:3497   */\n              tag_186\n              tag_132\n              jump\t// in\n            tag_186:\n                /* \"#utility.yul\":3380:3499   */\n            tag_185:\n                /* \"#utility.yul\":3566:3567   */\n              0x00\n                /* \"#utility.yul\":3555:3564   */\n              dup6\n                /* \"#utility.yul\":3551:3568   */\n              add\n                /* \"#utility.yul\":3538:3569   */\n              calldataload\n                /* \"#utility.yul\":3596:3614   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":3588:3594   */\n              dup2\n                /* \"#utility.yul\":3585:3615   */\n              gt\n                /* \"#utility.yul\":3582:3699   */\n              iszero\n              tag_187\n              jumpi\n                /* \"#utility.yul\":3618:3697   */\n              tag_188\n              tag_133\n              jump\t// in\n            tag_188:\n                /* \"#utility.yul\":3582:3699   */\n            tag_187:\n                /* \"#utility.yul\":3731:3846   */\n              tag_189\n                /* \"#utility.yul\":3838:3845   */\n              dup8\n                /* \"#utility.yul\":3829:3835   */\n              dup3\n                /* \"#utility.yul\":3818:3827   */\n              dup9\n                /* \"#utility.yul\":3814:3836   */\n              add\n                /* \"#utility.yul\":3731:3846   */\n              tag_137\n              jump\t// in\n            tag_189:\n                /* \"#utility.yul\":3713:3846   */\n              swap5\n              pop\n              swap5\n              pop\n                /* \"#utility.yul\":3509:3856   */\n              pop\n                /* \"#utility.yul\":3923:3925   */\n              0x20\n                /* \"#utility.yul\":3912:3921   */\n              dup6\n                /* \"#utility.yul\":3908:3926   */\n              add\n                /* \"#utility.yul\":3895:3927   */\n              calldataload\n                /* \"#utility.yul\":3954:3972   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":3946:3952   */\n              dup2\n                /* \"#utility.yul\":3943:3973   */\n              gt\n                /* \"#utility.yul\":3940:4057   */\n              iszero\n              tag_190\n              jumpi\n                /* \"#utility.yul\":3976:4055   */\n              tag_191\n              tag_133\n              jump\t// in\n            tag_191:\n                /* \"#utility.yul\":3940:4057   */\n            tag_190:\n                /* \"#utility.yul\":4089:4213   */\n              tag_192\n                /* \"#utility.yul\":4205:4212   */\n              dup8\n                /* \"#utility.yul\":4196:4202   */\n              dup3\n                /* \"#utility.yul\":4185:4194   */\n              dup9\n                /* \"#utility.yul\":4181:4203   */\n              add\n                /* \"#utility.yul\":4089:4213   */\n              tag_140\n              jump\t// in\n            tag_192:\n                /* \"#utility.yul\":4071:4213   */\n              swap3\n              pop\n              swap3\n              pop\n                /* \"#utility.yul\":3866:4223   */\n              pop\n                /* \"#utility.yul\":3138:4230   */\n              swap3\n              swap6\n              swap2\n              swap5\n              pop\n              swap3\n              pop\n              jump\t// out\n                /* \"#utility.yul\":4236:4883   */\n            tag_20:\n                /* \"#utility.yul\":4366:4372   */\n              0x00\n                /* \"#utility.yul\":4374:4380   */\n              dup1\n                /* \"#utility.yul\":4423:4425   */\n              0x20\n                /* \"#utility.yul\":4411:4420   */\n              dup4\n                /* \"#utility.yul\":4402:4409   */\n              dup6\n                /* \"#utility.yul\":4398:4421   */\n              sub\n                /* \"#utility.yul\":4394:4426   */\n              slt\n                /* \"#utility.yul\":4391:4510   */\n              iszero\n              tag_194\n              jumpi\n                /* \"#utility.yul\":4429:4508   */\n              tag_195\n              tag_132\n              jump\t// in\n            tag_195:\n                /* \"#utility.yul\":4391:4510   */\n            tag_194:\n                /* \"#utility.yul\":4577:4578   */\n              0x00\n                /* \"#utility.yul\":4566:4575   */\n              dup4\n                /* \"#utility.yul\":4562:4579   */\n              add\n                /* \"#utility.yul\":4549:4580   */\n              calldataload\n                /* \"#utility.yul\":4607:4625   */\n              0xffffffffffffffff\n                /* \"#utility.yul\":4599:4605   */\n              dup2\n                /* \"#utility.yul\":4596:4626   */\n              gt\n                /* \"#utility.yul\":4593:4710   */\n              iszero\n              tag_196\n              jumpi\n                /* \"#utility.yul\":4629:4708   */\n              tag_197\n              tag_133\n              jump\t// in\n            tag_197:\n                /* \"#utility.yul\":4593:4710   */\n            tag_196:\n                /* \"#utility.yul\":4742:4866   */\n              tag_198\n                /* \"#utility.yul\":4858:4865   */\n              dup6\n                /* \"#utility.yul\":4849:4855   */\n              dup3\n                /* \"#utility.yul\":4838:4847   */\n              dup7\n                /* \"#utility.yul\":4834:4856   */\n              add\n                /* \"#utility.yul\":4742:4866   */\n              tag_140\n              jump\t// in\n            tag_198:\n                /* \"#utility.yul\":4724:4866   */\n              swap3\n              pop\n              swap3\n              pop\n                /* \"#utility.yul\":4520:4876   */\n              pop\n                /* \"#utility.yul\":4236:4883   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":4889:5015   */\n            tag_141:\n                /* \"#utility.yul\":4926:4933   */\n              0x00\n                /* \"#utility.yul\":4966:5008   */\n              0xffffffffffffffffffffffffffffffffffffffff\n                /* \"#utility.yul\":4959:4964   */\n              dup3\n                /* \"#utility.yul\":4955:5009   */\n              and\n                /* \"#utility.yul\":4944:5009   */\n              swap1\n              pop\n                /* \"#utility.yul\":4889:5015   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5021:5117   */\n            tag_142:\n                /* \"#utility.yul\":5058:5065   */\n              0x00\n                /* \"#utility.yul\":5087:5111   */\n              tag_201\n                /* \"#utility.yul\":5105:5110   */\n              dup3\n                /* \"#utility.yul\":5087:5111   */\n              tag_141\n              jump\t// in\n            tag_201:\n                /* \"#utility.yul\":5076:5111   */\n              swap1\n              pop\n                /* \"#utility.yul\":5021:5117   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5123:5245   */\n            tag_143:\n                /* \"#utility.yul\":5196:5220   */\n              tag_203\n                /* \"#utility.yul\":5214:5219   */\n              dup2\n                /* \"#utility.yul\":5196:5220   */\n              tag_142\n              jump\t// in\n            tag_203:\n                /* \"#utility.yul\":5189:5194   */\n              dup2\n                /* \"#utility.yul\":5186:5221   */\n              eq\n                /* \"#utility.yul\":5176:5239   */\n              tag_204\n              jumpi\n                /* \"#utility.yul\":5235:5236   */\n              0x00\n                /* \"#utility.yul\":5232:5233   */\n              dup1\n                /* \"#utility.yul\":5225:5237   */\n              revert\n                /* \"#utility.yul\":5176:5239   */\n            tag_204:\n                /* \"#utility.yul\":5123:5245   */\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5251:5390   */\n            tag_144:\n                /* \"#utility.yul\":5297:5302   */\n              0x00\n                /* \"#utility.yul\":5335:5341   */\n              dup2\n                /* \"#utility.yul\":5322:5342   */\n              calldataload\n                /* \"#utility.yul\":5313:5342   */\n              swap1\n              pop\n                /* \"#utility.yul\":5351:5384   */\n              tag_206\n                /* \"#utility.yul\":5378:5383   */\n              dup2\n                /* \"#utility.yul\":5351:5384   */\n              tag_143\n              jump\t// in\n            tag_206:\n                /* \"#utility.yul\":5251:5390   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5396:5486   */\n            tag_145:\n                /* \"#utility.yul\":5430:5437   */\n              0x00\n                /* \"#utility.yul\":5473:5478   */\n              dup2\n                /* \"#utility.yul\":5466:5479   */\n              iszero\n                /* \"#utility.yul\":5459:5480   */\n              iszero\n                /* \"#utility.yul\":5448:5480   */\n              swap1\n              pop\n                /* \"#utility.yul\":5396:5486   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5492:5608   */\n            tag_146:\n                /* \"#utility.yul\":5562:5583   */\n              tag_209\n                /* \"#utility.yul\":5577:5582   */\n              dup2\n                /* \"#utility.yul\":5562:5583   */\n              tag_145\n              jump\t// in\n            tag_209:\n                /* \"#utility.yul\":5555:5560   */\n              dup2\n                /* \"#utility.yul\":5552:5584   */\n              eq\n                /* \"#utility.yul\":5542:5602   */\n              tag_210\n              jumpi\n                /* \"#utility.yul\":5598:5599   */\n              0x00\n                /* \"#utility.yul\":5595:5596   */\n              dup1\n                /* \"#utility.yul\":5588:5600   */\n              revert\n                /* \"#utility.yul\":5542:5602   */\n            tag_210:\n                /* \"#utility.yul\":5492:5608   */\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5614:5747   */\n            tag_147:\n                /* \"#utility.yul\":5657:5662   */\n              0x00\n                /* \"#utility.yul\":5695:5701   */\n              dup2\n                /* \"#utility.yul\":5682:5702   */\n              calldataload\n                /* \"#utility.yul\":5673:5702   */\n              swap1\n              pop\n                /* \"#utility.yul\":5711:5741   */\n              tag_212\n                /* \"#utility.yul\":5735:5740   */\n              dup2\n                /* \"#utility.yul\":5711:5741   */\n              tag_146\n              jump\t// in\n            tag_212:\n                /* \"#utility.yul\":5614:5747   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":5753:6221   */\n            tag_25:\n                /* \"#utility.yul\":5818:5824   */\n              0x00\n                /* \"#utility.yul\":5826:5832   */\n              dup1\n                /* \"#utility.yul\":5875:5877   */\n              0x40\n                /* \"#utility.yul\":5863:5872   */\n              dup4\n                /* \"#utility.yul\":5854:5861   */\n              dup6\n                /* \"#utility.yul\":5850:5873   */\n              sub\n                /* \"#utility.yul\":5846:5878   */\n              slt\n                /* \"#utility.yul\":5843:5962   */\n              iszero\n              tag_214\n              jumpi\n                /* \"#utility.yul\":5881:5960   */\n              tag_215\n              tag_132\n              jump\t// in\n            tag_215:\n                /* \"#utility.yul\":5843:5962   */\n            tag_214:\n                /* \"#utility.yul\":6001:6002   */\n              0x00\n                /* \"#utility.yul\":6026:6079   */\n              tag_216\n                /* \"#utility.yul\":6071:6078   */\n              dup6\n                /* \"#utility.yul\":6062:6068   */\n              dup3\n                /* \"#utility.yul\":6051:6060   */\n              dup7\n                /* \"#utility.yul\":6047:6069   */\n              add\n                /* \"#utility.yul\":6026:6079   */\n              tag_144\n              jump\t// in\n            tag_216:\n                /* \"#utility.yul\":6016:6079   */\n              swap3\n              pop\n                /* \"#utility.yul\":5972:6089   */\n              pop\n                /* \"#utility.yul\":6128:6130   */\n              0x20\n                /* \"#utility.yul\":6154:6204   */\n              tag_217\n                /* \"#utility.yul\":6196:6203   */\n              dup6\n                /* \"#utility.yul\":6187:6193   */\n              dup3\n                /* \"#utility.yul\":6176:6185   */\n              dup7\n                /* \"#utility.yul\":6172:6194   */\n              add\n                /* \"#utility.yul\":6154:6204   */\n              tag_147\n              jump\t// in\n            tag_217:\n                /* \"#utility.yul\":6144:6204   */\n              swap2\n              pop\n                /* \"#utility.yul\":6099:6214   */\n              pop\n                /* \"#utility.yul\":5753:6221   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":6227:6407   */\n            tag_36:\n                /* \"#utility.yul\":6275:6352   */\n              0x4e487b7100000000000000000000000000000000000000000000000000000000\n                /* \"#utility.yul\":6272:6273   */\n              0x00\n                /* \"#utility.yul\":6265:6353   */\n              mstore\n                /* \"#utility.yul\":6372:6376   */\n              0x32\n                /* \"#utility.yul\":6369:6370   */\n              0x04\n                /* \"#utility.yul\":6362:6377   */\n              mstore\n                /* \"#utility.yul\":6396:6400   */\n              0x24\n                /* \"#utility.yul\":6393:6394   */\n              0x00\n                /* \"#utility.yul\":6386:6401   */\n              revert\n                /* \"#utility.yul\":6413:6531   */\n            tag_148:\n                /* \"#utility.yul\":6500:6524   */\n              tag_220\n                /* \"#utility.yul\":6518:6523   */\n              dup2\n                /* \"#utility.yul\":6500:6524   */\n              tag_142\n              jump\t// in\n            tag_220:\n                /* \"#utility.yul\":6495:6498   */\n              dup3\n                /* \"#utility.yul\":6488:6525   */\n              mstore\n                /* \"#utility.yul\":6413:6531   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":6537:6646   */\n            tag_149:\n                /* \"#utility.yul\":6618:6639   */\n              tag_222\n                /* \"#utility.yul\":6633:6638   */\n              dup2\n                /* \"#utility.yul\":6618:6639   */\n              tag_145\n              jump\t// in\n            tag_222:\n                /* \"#utility.yul\":6613:6616   */\n              dup3\n                /* \"#utility.yul\":6606:6640   */\n              mstore\n                /* \"#utility.yul\":6537:6646   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":6652:6972   */\n            tag_57:\n                /* \"#utility.yul\":6767:6771   */\n              0x00\n                /* \"#utility.yul\":6805:6807   */\n              0x40\n                /* \"#utility.yul\":6794:6803   */\n              dup3\n                /* \"#utility.yul\":6790:6808   */\n              add\n                /* \"#utility.yul\":6782:6808   */\n              swap1\n              pop\n                /* \"#utility.yul\":6818:6889   */\n              tag_224\n                /* \"#utility.yul\":6886:6887   */\n              0x00\n                /* \"#utility.yul\":6875:6884   */\n              dup4\n                /* \"#utility.yul\":6871:6888   */\n              add\n                /* \"#utility.yul\":6862:6868   */\n              dup6\n                /* \"#utility.yul\":6818:6889   */\n              tag_148\n              jump\t// in\n            tag_224:\n                /* \"#utility.yul\":6899:6965   */\n              tag_225\n                /* \"#utility.yul\":6961:6963   */\n              0x20\n                /* \"#utility.yul\":6950:6959   */\n              dup4\n                /* \"#utility.yul\":6946:6964   */\n              add\n                /* \"#utility.yul\":6937:6943   */\n              dup5\n                /* \"#utility.yul\":6899:6965   */\n              tag_149\n              jump\t// in\n            tag_225:\n                /* \"#utility.yul\":6652:6972   */\n              swap4\n              swap3\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":6978:7188   */\n            tag_59:\n                /* \"#utility.yul\":7065:7069   */\n              0x00\n                /* \"#utility.yul\":7103:7105   */\n              0x20\n                /* \"#utility.yul\":7092:7101   */\n              dup3\n                /* \"#utility.yul\":7088:7106   */\n              add\n                /* \"#utility.yul\":7080:7106   */\n              swap1\n              pop\n                /* \"#utility.yul\":7116:7181   */\n              tag_227\n                /* \"#utility.yul\":7178:7179   */\n              0x00\n                /* \"#utility.yul\":7167:7176   */\n              dup4\n                /* \"#utility.yul\":7163:7180   */\n              add\n                /* \"#utility.yul\":7154:7160   */\n              dup5\n                /* \"#utility.yul\":7116:7181   */\n              tag_149\n              jump\t// in\n            tag_227:\n                /* \"#utility.yul\":6978:7188   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":7194:7374   */\n            tag_63:\n                /* \"#utility.yul\":7242:7319   */\n              0x4e487b7100000000000000000000000000000000000000000000000000000000\n                /* \"#utility.yul\":7239:7240   */\n              0x00\n                /* \"#utility.yul\":7232:7320   */\n              mstore\n                /* \"#utility.yul\":7339:7343   */\n              0x21\n                /* \"#utility.yul\":7336:7337   */\n              0x04\n                /* \"#utility.yul\":7329:7344   */\n              mstore\n                /* \"#utility.yul\":7363:7367   */\n              0x24\n                /* \"#utility.yul\":7360:7361   */\n              0x00\n                /* \"#utility.yul\":7353:7368   */\n              revert\n                /* \"#utility.yul\":7380:7499   */\n            tag_150:\n                /* \"#utility.yul\":7473:7474   */\n              0x04\n                /* \"#utility.yul\":7466:7471   */\n              dup2\n                /* \"#utility.yul\":7463:7475   */\n              lt\n                /* \"#utility.yul\":7453:7493   */\n              tag_230\n              jumpi\n                /* \"#utility.yul\":7489:7490   */\n              0x00\n                /* \"#utility.yul\":7486:7487   */\n              dup1\n                /* \"#utility.yul\":7479:7491   */\n              revert\n                /* \"#utility.yul\":7453:7493   */\n            tag_230:\n                /* \"#utility.yul\":7380:7499   */\n              pop\n              jump\t// out\n                /* \"#utility.yul\":7505:7684   */\n            tag_151:\n                /* \"#utility.yul\":7571:7576   */\n              0x00\n                /* \"#utility.yul\":7609:7615   */\n              dup2\n                /* \"#utility.yul\":7596:7616   */\n              calldataload\n                /* \"#utility.yul\":7587:7616   */\n              swap1\n              pop\n                /* \"#utility.yul\":7625:7678   */\n              tag_232\n                /* \"#utility.yul\":7672:7677   */\n              dup2\n                /* \"#utility.yul\":7625:7678   */\n              tag_150\n              jump\t// in\n            tag_232:\n                /* \"#utility.yul\":7505:7684   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":7690:8059   */\n            tag_65:\n                /* \"#utility.yul\":7769:7775   */\n              0x00\n                /* \"#utility.yul\":7818:7820   */\n              0x20\n                /* \"#utility.yul\":7806:7815   */\n              dup3\n                /* \"#utility.yul\":7797:7804   */\n              dup5\n                /* \"#utility.yul\":7793:7816   */\n              sub\n                /* \"#utility.yul\":7789:7821   */\n              slt\n                /* \"#utility.yul\":7786:7905   */\n              iszero\n              tag_234\n              jumpi\n                /* \"#utility.yul\":7824:7903   */\n              tag_235\n              tag_132\n              jump\t// in\n            tag_235:\n                /* \"#utility.yul\":7786:7905   */\n            tag_234:\n                /* \"#utility.yul\":7944:7945   */\n              0x00\n                /* \"#utility.yul\":7969:8042   */\n              tag_236\n                /* \"#utility.yul\":8034:8041   */\n              dup5\n                /* \"#utility.yul\":8025:8031   */\n              dup3\n                /* \"#utility.yul\":8014:8023   */\n              dup6\n                /* \"#utility.yul\":8010:8032   */\n              add\n                /* \"#utility.yul\":7969:8042   */\n              tag_151\n              jump\t// in\n            tag_236:\n                /* \"#utility.yul\":7959:8042   */\n              swap2\n              pop\n                /* \"#utility.yul\":7915:8052   */\n              pop\n                /* \"#utility.yul\":7690:8059   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":8065:8394   */\n            tag_71:\n                /* \"#utility.yul\":8124:8130   */\n              0x00\n                /* \"#utility.yul\":8173:8175   */\n              0x20\n                /* \"#utility.yul\":8161:8170   */\n              dup3\n                /* \"#utility.yul\":8152:8159   */\n              dup5\n                /* \"#utility.yul\":8148:8171   */\n              sub\n                /* \"#utility.yul\":8144:8176   */\n              slt\n                /* \"#utility.yul\":8141:8260   */\n              iszero\n              tag_238\n              jumpi\n                /* \"#utility.yul\":8179:8258   */\n              tag_239\n              tag_132\n              jump\t// in\n            tag_239:\n                /* \"#utility.yul\":8141:8260   */\n            tag_238:\n                /* \"#utility.yul\":8299:8300   */\n              0x00\n                /* \"#utility.yul\":8324:8377   */\n              tag_240\n                /* \"#utility.yul\":8369:8376   */\n              dup5\n                /* \"#utility.yul\":8360:8366   */\n              dup3\n                /* \"#utility.yul\":8349:8358   */\n              dup6\n                /* \"#utility.yul\":8345:8367   */\n              add\n                /* \"#utility.yul\":8324:8377   */\n              tag_144\n              jump\t// in\n            tag_240:\n                /* \"#utility.yul\":8314:8377   */\n              swap2\n              pop\n                /* \"#utility.yul\":8270:8387   */\n              pop\n                /* \"#utility.yul\":8065:8394   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n\n            auxdata: 0xa26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220761bc6711f0af030e64e4344395b1ef19179448b9d129d2b16bfafae043b55cd64736f6c63430008110033\n}\n\nsub_1: assembly {\n        /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n      mstore(0x40, 0xa0)\n        /* \"conduit/Conduit.sol\":2751:2853  constructor() {... */\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n        /* \"conduit/Conduit.sol\":2836:2846  msg.sender */\n      caller\n        /* \"conduit/Conduit.sol\":2822:2846  _controller = msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x80\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n      mload(0x80)\n      codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n      0x00\n      assignImmutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n      return(0x00, dataSize(sub_0))\n    stop\n\n    sub_0: assembly {\n            /* \"conduit/Conduit.sol\":1078:10213  contract Conduit is ConduitInterface, TokenTransferrer {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          jumpi(tag_2, lt(calldatasize, 0x04))\n          shr(0xe0, calldataload(0x00))\n          dup1\n          0x4ce34aa2\n          eq\n          tag_3\n          jumpi\n          dup1\n          0x899e104c\n          eq\n          tag_4\n          jumpi\n          dup1\n          0x8df25d92\n          eq\n          tag_5\n          jumpi\n          dup1\n          0xc4e8fcb5\n          eq\n          tag_6\n          jumpi\n        tag_2:\n          0x00\n          dup1\n          revert\n            /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n        tag_3:\n          tag_7\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_8\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_8:\n          tag_10\n          jump\t// in\n        tag_7:\n          mload(0x40)\n          tag_11\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_11:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n        tag_4:\n          tag_13\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_14\n          swap2\n          swap1\n          tag_15\n          jump\t// in\n        tag_14:\n          tag_16\n          jump\t// in\n        tag_13:\n          mload(0x40)\n          tag_17\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_17:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n        tag_5:\n          tag_18\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_19\n          swap2\n          swap1\n          tag_20\n          jump\t// in\n        tag_19:\n          tag_21\n          jump\t// in\n        tag_18:\n          mload(0x40)\n          tag_22\n          swap2\n          swap1\n          tag_12\n          jump\t// in\n        tag_22:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          return\n            /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n        tag_6:\n          tag_23\n          0x04\n          dup1\n          calldatasize\n          sub\n          dup2\n          add\n          swap1\n          tag_24\n          swap2\n          swap1\n          tag_25\n          jump\t// in\n        tag_24:\n          tag_26\n          jump\t// in\n        tag_23:\n          stop\n            /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n        tag_10:\n            /* \"conduit/Conduit.sol\":3732:3749  bytes4 magicValue */\n          0x00\n            /* \"conduit/Conduit.sol\":1695:1703  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n          0x00\n            /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n          0x20\n            /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n          mstore\n            /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n          0x40\n            /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n          keccak256\n            /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n          sload\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n          tag_28\n          jumpi\n            /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n          0x93daadf200000000000000000000000000000000000000000000000000000000\n            /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n          mstore\n            /* \"conduit/Conduit.sol\":2406:2414  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n          0x04\n            /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n          0x24\n            /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n          revert\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n        tag_28:\n            /* \"conduit/Conduit.sol\":3839:3869  uint256 totalStandardTransfers */\n          0x00\n            /* \"conduit/Conduit.sol\":3872:3881  transfers */\n          dup4\n          dup4\n            /* \"conduit/Conduit.sol\":3872:3888  transfers.length */\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":3839:3888  uint256 totalStandardTransfers = transfers.length */\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":3943:3952  uint256 i */\n          0x00\n            /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n        tag_30:\n            /* \"conduit/Conduit.sol\":3962:3984  totalStandardTransfers */\n          dup2\n            /* \"conduit/Conduit.sol\":3958:3959  i */\n          dup2\n            /* \"conduit/Conduit.sol\":3958:3984  i < totalStandardTransfers */\n          lt\n            /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n          iszero\n          tag_31\n          jumpi\n            /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n          tag_33\n            /* \"conduit/Conduit.sol\":4087:4096  transfers */\n          dup6\n          dup6\n            /* \"conduit/Conduit.sol\":4097:4098  i */\n          dup4\n            /* \"conduit/Conduit.sol\":4087:4099  transfers[i] */\n          dup2\n          dup2\n          lt\n          tag_34\n          jumpi\n          tag_35\n          tag_36\n          jump\t// in\n        tag_35:\n        tag_34:\n          swap1\n          pop\n          0xc0\n          mul\n          add\n            /* \"conduit/Conduit.sol\":4077:4086  _transfer */\n          tag_37\n            /* \"conduit/Conduit.sol\":4077:4100  _transfer(transfers[i]) */\n          jump\t// in\n        tag_33:\n            /* \"conduit/Conduit.sol\":4219:4222  ++i */\n          dup1\n          0x01\n          add\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":3938:4247  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n          jump(tag_30)\n        tag_31:\n          pop\n            /* \"conduit/Conduit.sol\":4348:4369  this.execute.selector */\n          shl(0xe0, 0x4ce34aa2)\n            /* \"conduit/Conduit.sol\":4335:4369  magicValue = this.execute.selector */\n          swap2\n          pop\n            /* \"conduit/Conduit.sol\":3755:4376  {... */\n          pop\n            /* \"conduit/Conduit.sol\":3602:4376  function execute(ConduitTransfer[] calldata transfers)... */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n        tag_16:\n            /* \"conduit/Conduit.sol\":6733:6750  bytes4 magicValue */\n          0x00\n            /* \"conduit/Conduit.sol\":1695:1703  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n          0x00\n            /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n          0x20\n            /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n          mstore\n            /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n          0x40\n            /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n          keccak256\n            /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n          sload\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n          tag_39\n          jumpi\n            /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n          0x93daadf200000000000000000000000000000000000000000000000000000000\n            /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n          mstore\n            /* \"conduit/Conduit.sol\":2406:2414  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n          0x04\n            /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n          0x24\n            /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n          revert\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n        tag_39:\n            /* \"conduit/Conduit.sol\":6836:6866  uint256 totalStandardTransfers */\n          0x00\n            /* \"conduit/Conduit.sol\":6869:6886  standardTransfers */\n          dup6\n          dup6\n            /* \"conduit/Conduit.sol\":6869:6893  standardTransfers.length */\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":6836:6893  uint256 totalStandardTransfers = standardTransfers.length */\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":6957:6966  uint256 i */\n          0x00\n            /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n        tag_41:\n            /* \"conduit/Conduit.sol\":6976:6998  totalStandardTransfers */\n          dup2\n            /* \"conduit/Conduit.sol\":6972:6973  i */\n          dup2\n            /* \"conduit/Conduit.sol\":6972:6998  i < totalStandardTransfers */\n          lt\n            /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n          iszero\n          tag_42\n          jumpi\n            /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n          tag_44\n            /* \"conduit/Conduit.sol\":7101:7118  standardTransfers */\n          dup8\n          dup8\n            /* \"conduit/Conduit.sol\":7119:7120  i */\n          dup4\n            /* \"conduit/Conduit.sol\":7101:7121  standardTransfers[i] */\n          dup2\n          dup2\n          lt\n          tag_45\n          jumpi\n          tag_46\n          tag_36\n          jump\t// in\n        tag_46:\n        tag_45:\n          swap1\n          pop\n          0xc0\n          mul\n          add\n            /* \"conduit/Conduit.sol\":7091:7100  _transfer */\n          tag_37\n            /* \"conduit/Conduit.sol\":7091:7122  _transfer(standardTransfers[i]) */\n          jump\t// in\n        tag_44:\n            /* \"conduit/Conduit.sol\":7241:7244  ++i */\n          dup1\n          0x01\n          add\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":6952:7269  for (uint256 i = 0; i < totalStandardTransfers; ) {... */\n          jump(tag_41)\n        tag_42:\n          pop\n            /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n          tag_47\n            /* \"conduit/Conduit.sol\":7514:7528  batchTransfers */\n          dup5\n          dup5\n            /* \"conduit/Conduit.sol\":7484:7513  _performERC1155BatchTransfers */\n          tag_48\n            /* \"conduit/Conduit.sol\":7484:7529  _performERC1155BatchTransfers(batchTransfers) */\n          jump\t// in\n        tag_47:\n            /* \"conduit/Conduit.sol\":7631:7665  this.executeWithBatch1155.selector */\n          shl(0xe0, 0x899e104c)\n            /* \"conduit/Conduit.sol\":7618:7665  magicValue = this.executeWithBatch1155.selector */\n          swap2\n          pop\n            /* \"conduit/Conduit.sol\":6752:7672  {... */\n          pop\n            /* \"conduit/Conduit.sol\":6540:7672  function executeWithBatch1155(... */\n          swap5\n          swap4\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n        tag_21:\n            /* \"conduit/Conduit.sol\":5272:5289  bytes4 magicValue */\n          0x00\n            /* \"conduit/Conduit.sol\":1695:1703  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":1671:1693  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":1664:1704  mstore(ChannelKey_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":1816:1830  _channels.slot */\n          0x00\n            /* \"conduit/Conduit.sol\":1795:1814  ChannelKey_slot_ptr */\n          0x20\n            /* \"conduit/Conduit.sol\":1788:1831  mstore(ChannelKey_slot_ptr, _channels.slot) */\n          mstore\n            /* \"conduit/Conduit.sol\":2037:2054  ChannelKey_length */\n          0x40\n            /* \"conduit/Conduit.sol\":2013:2035  ChannelKey_channel_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2003:2055  keccak256(ChannelKey_channel_ptr, ChannelKey_length) */\n          keccak256\n            /* \"conduit/Conduit.sol\":1997:2056  sload(keccak256(ChannelKey_channel_ptr, ChannelKey_length)) */\n          sload\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n          tag_50\n          jumpi\n            /* \"conduit/Conduit.sol\":2267:2296  ChannelClosed_error_signature */\n          0x93daadf200000000000000000000000000000000000000000000000000000000\n            /* \"conduit/Conduit.sol\":2242:2265  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2235:2297  mstore(ChannelClosed_error_ptr, ChannelClosed_error_signature) */\n          mstore\n            /* \"conduit/Conduit.sol\":2406:2414  caller() */\n          caller\n            /* \"conduit/Conduit.sol\":2379:2404  ChannelClosed_channel_ptr */\n          0x04\n            /* \"conduit/Conduit.sol\":2372:2415  mstore(ChannelClosed_channel_ptr, caller()) */\n          mstore\n            /* \"conduit/Conduit.sol\":2544:2570  ChannelClosed_error_length */\n          0x24\n            /* \"conduit/Conduit.sol\":2519:2542  ChannelClosed_error_ptr */\n          0x00\n            /* \"conduit/Conduit.sol\":2512:2571  revert(ChannelClosed_error_ptr, ChannelClosed_error_length) */\n          revert\n            /* \"conduit/Conduit.sol\":1970:2585  if iszero(... */\n        tag_50:\n            /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n          tag_52\n            /* \"conduit/Conduit.sol\":5465:5479  batchTransfers */\n          dup4\n          dup4\n            /* \"conduit/Conduit.sol\":5435:5464  _performERC1155BatchTransfers */\n          tag_48\n            /* \"conduit/Conduit.sol\":5435:5480  _performERC1155BatchTransfers(batchTransfers) */\n          jump\t// in\n        tag_52:\n            /* \"conduit/Conduit.sol\":5582:5612  this.executeBatch1155.selector */\n          shl(0xe0, 0x8df25d92)\n            /* \"conduit/Conduit.sol\":5569:5612  magicValue = this.executeBatch1155.selector */\n          swap1\n          pop\n            /* \"conduit/Conduit.sol\":5137:5619  function executeBatch1155(... */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n        tag_26:\n            /* \"conduit/Conduit.sol\":8074:8085  _controller */\n          immutable(\"0x8fef2229291b68be841adf029e58b87f39ba144b2d3b0af1760243d0a9bc6a1c\")\n            /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"conduit/Conduit.sol\":8060:8070  msg.sender */\n          caller\n            /* \"conduit/Conduit.sol\":8060:8085  msg.sender != _controller */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          eq\n            /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n          tag_54\n          jumpi\n            /* \"conduit/Conduit.sol\":8108:8127  InvalidController() */\n          mload(0x40)\n          0x6d5769be00000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"conduit/Conduit.sol\":8056:8138  if (msg.sender != _controller) {... */\n        tag_54:\n            /* \"conduit/Conduit.sol\":8253:8259  isOpen */\n          dup1\n            /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n          iszero\n          iszero\n            /* \"conduit/Conduit.sol\":8231:8240  _channels */\n          0x00\n            /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n          dup1\n            /* \"conduit/Conduit.sol\":8241:8248  channel */\n          dup5\n            /* \"conduit/Conduit.sol\":8231:8249  _channels[channel] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xff\n          and\n            /* \"conduit/Conduit.sol\":8231:8259  _channels[channel] == isOpen */\n          iszero\n          iszero\n          sub\n            /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n          tag_55\n          jumpi\n            /* \"conduit/Conduit.sol\":8306:8313  channel */\n          dup2\n            /* \"conduit/Conduit.sol\":8315:8321  isOpen */\n          dup2\n            /* \"conduit/Conduit.sol\":8282:8322  ChannelStatusAlreadySet(channel, isOpen) */\n          mload(0x40)\n          0x924e341e00000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          tag_56\n          swap3\n          swap2\n          swap1\n          tag_57\n          jump\t// in\n        tag_56:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"conduit/Conduit.sol\":8227:8333  if (_channels[channel] == isOpen) {... */\n        tag_55:\n            /* \"conduit/Conduit.sol\":8409:8415  isOpen */\n          dup1\n            /* \"conduit/Conduit.sol\":8388:8397  _channels */\n          0x00\n            /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n          dup1\n            /* \"conduit/Conduit.sol\":8398:8405  channel */\n          dup5\n            /* \"conduit/Conduit.sol\":8388:8406  _channels[channel] */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          0x20\n          add\n          swap1\n          dup2\n          mstore\n          0x20\n          add\n          0x00\n          keccak256\n          0x00\n            /* \"conduit/Conduit.sol\":8388:8415  _channels[channel] = isOpen */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xff\n          mul\n          not\n          and\n          swap1\n          dup4\n          iszero\n          iszero\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"conduit/Conduit.sol\":8485:8492  channel */\n          dup2\n            /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0xae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2\n            /* \"conduit/Conduit.sol\":8494:8500  isOpen */\n          dup3\n            /* \"conduit/Conduit.sol\":8470:8501  ChannelUpdated(channel, isOpen) */\n          mload(0x40)\n          tag_58\n          swap2\n          swap1\n          tag_59\n          jump\t// in\n        tag_58:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log2\n            /* \"conduit/Conduit.sol\":7905:8508  function updateChannel(address channel, bool isOpen) external override {... */\n          pop\n          pop\n          jump\t// out\n            /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n        tag_37:\n            /* \"conduit/Conduit.sol\":8980:9001  ConduitItemType.ERC20 */\n          0x01\n            /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n          0x03\n          dup2\n          gt\n          iszero\n          tag_61\n          jumpi\n          tag_62\n          tag_63\n          jump\t// in\n        tag_62:\n        tag_61:\n            /* \"conduit/Conduit.sol\":8963:8967  item */\n          dup2\n            /* \"conduit/Conduit.sol\":8963:8976  item.itemType */\n          0x00\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_64\n          swap2\n          swap1\n          tag_65\n          jump\t// in\n        tag_64:\n            /* \"conduit/Conduit.sol\":8963:9001  item.itemType == ConduitItemType.ERC20 */\n          0x03\n          dup2\n          gt\n          iszero\n          tag_66\n          jumpi\n          tag_67\n          tag_63\n          jump\t// in\n        tag_67:\n        tag_66:\n          sub\n            /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n          tag_68\n          jumpi\n            /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n          tag_69\n            /* \"conduit/Conduit.sol\":9326:9330  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9326:9336  item.token */\n          0x20\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_70\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_70:\n            /* \"conduit/Conduit.sol\":9338:9342  item */\n          dup3\n            /* \"conduit/Conduit.sol\":9338:9347  item.from */\n          0x40\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_72\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_72:\n            /* \"conduit/Conduit.sol\":9349:9353  item */\n          dup4\n            /* \"conduit/Conduit.sol\":9349:9356  item.to */\n          0x60\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_73\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_73:\n            /* \"conduit/Conduit.sol\":9358:9362  item */\n          dup5\n            /* \"conduit/Conduit.sol\":9358:9369  item.amount */\n          0xa0\n          add\n          calldataload\n            /* \"conduit/Conduit.sol\":9304:9325  _performERC20Transfer */\n          tag_74\n            /* \"conduit/Conduit.sol\":9304:9370  _performERC20Transfer(item.token, item.from, item.to, item.amount) */\n          jump\t// in\n        tag_69:\n            /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n          jump(tag_75)\n        tag_68:\n            /* \"conduit/Conduit.sol\":9408:9430  ConduitItemType.ERC721 */\n          0x02\n            /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n          0x03\n          dup2\n          gt\n          iszero\n          tag_76\n          jumpi\n          tag_77\n          tag_63\n          jump\t// in\n        tag_77:\n        tag_76:\n            /* \"conduit/Conduit.sol\":9391:9395  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9391:9404  item.itemType */\n          0x00\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_78\n          swap2\n          swap1\n          tag_65\n          jump\t// in\n        tag_78:\n            /* \"conduit/Conduit.sol\":9391:9430  item.itemType == ConduitItemType.ERC721 */\n          0x03\n          dup2\n          gt\n          iszero\n          tag_79\n          jumpi\n          tag_80\n          tag_63\n          jump\t// in\n        tag_80:\n        tag_79:\n          sub\n            /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n          tag_81\n          jumpi\n            /* \"conduit/Conduit.sol\":9535:9536  1 */\n          0x01\n            /* \"conduit/Conduit.sol\":9520:9524  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9520:9531  item.amount */\n          0xa0\n          add\n          calldataload\n            /* \"conduit/Conduit.sol\":9520:9536  item.amount != 1 */\n          eq\n            /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n          tag_82\n          jumpi\n            /* \"conduit/Conduit.sol\":9563:9592  InvalidERC721TransferAmount() */\n          mload(0x40)\n          0xefcc00b100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"conduit/Conduit.sol\":9516:9607  if (item.amount != 1) {... */\n        tag_82:\n            /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n          tag_83\n            /* \"conduit/Conduit.sol\":9699:9703  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9699:9709  item.token */\n          0x20\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_84\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_84:\n            /* \"conduit/Conduit.sol\":9727:9731  item */\n          dup3\n            /* \"conduit/Conduit.sol\":9727:9736  item.from */\n          0x40\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_85\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_85:\n            /* \"conduit/Conduit.sol\":9754:9758  item */\n          dup4\n            /* \"conduit/Conduit.sol\":9754:9761  item.to */\n          0x60\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_86\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_86:\n            /* \"conduit/Conduit.sol\":9779:9783  item */\n          dup5\n            /* \"conduit/Conduit.sol\":9779:9794  item.identifier */\n          0x80\n          add\n          calldataload\n            /* \"conduit/Conduit.sol\":9659:9681  _performERC721Transfer */\n          tag_87\n            /* \"conduit/Conduit.sol\":9659:9808  _performERC721Transfer(... */\n          jump\t// in\n        tag_83:\n            /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n          jump(tag_88)\n        tag_81:\n            /* \"conduit/Conduit.sol\":9846:9869  ConduitItemType.ERC1155 */\n          0x03\n            /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n          dup1\n          dup2\n          gt\n          iszero\n          tag_89\n          jumpi\n          tag_90\n          tag_63\n          jump\t// in\n        tag_90:\n        tag_89:\n            /* \"conduit/Conduit.sol\":9829:9833  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9829:9842  item.itemType */\n          0x00\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_91\n          swap2\n          swap1\n          tag_65\n          jump\t// in\n        tag_91:\n            /* \"conduit/Conduit.sol\":9829:9869  item.itemType == ConduitItemType.ERC1155 */\n          0x03\n          dup2\n          gt\n          iszero\n          tag_92\n          jumpi\n          tag_93\n          tag_63\n          jump\t// in\n        tag_93:\n        tag_92:\n          sub\n            /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n          tag_94\n          jumpi\n            /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n          tag_95\n            /* \"conduit/Conduit.sol\":9965:9969  item */\n          dup2\n            /* \"conduit/Conduit.sol\":9965:9975  item.token */\n          0x20\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_96\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_96:\n            /* \"conduit/Conduit.sol\":9993:9997  item */\n          dup3\n            /* \"conduit/Conduit.sol\":9993:10002  item.from */\n          0x40\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_97\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_97:\n            /* \"conduit/Conduit.sol\":10020:10024  item */\n          dup4\n            /* \"conduit/Conduit.sol\":10020:10027  item.to */\n          0x60\n          add\n          0x20\n          dup2\n          add\n          swap1\n          tag_98\n          swap2\n          swap1\n          tag_71\n          jump\t// in\n        tag_98:\n            /* \"conduit/Conduit.sol\":10045:10049  item */\n          dup5\n            /* \"conduit/Conduit.sol\":10045:10060  item.identifier */\n          0x80\n          add\n          calldataload\n            /* \"conduit/Conduit.sol\":10078:10082  item */\n          dup6\n            /* \"conduit/Conduit.sol\":10078:10089  item.amount */\n          0xa0\n          add\n          calldataload\n            /* \"conduit/Conduit.sol\":9924:9947  _performERC1155Transfer */\n          tag_99\n            /* \"conduit/Conduit.sol\":9924:10103  _performERC1155Transfer(... */\n          jump\t// in\n        tag_95:\n            /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n          jump(tag_100)\n        tag_94:\n            /* \"conduit/Conduit.sol\":10177:10194  InvalidItemType() */\n          mload(0x40)\n          0x7932f1fc00000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"conduit/Conduit.sol\":9825:10205  if (item.itemType == ConduitItemType.ERC1155) {... */\n        tag_100:\n            /* \"conduit/Conduit.sol\":9387:10205  if (item.itemType == ConduitItemType.ERC721) {... */\n        tag_88:\n            /* \"conduit/Conduit.sol\":8959:10205  if (item.itemType == ConduitItemType.ERC20) {... */\n        tag_75:\n            /* \"conduit/Conduit.sol\":8814:10211  function _transfer(ConduitTransfer calldata item) internal {... */\n          pop\n          jump\t// out\n            /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n        tag_48:\n            /* \"lib/TokenTransferrer.sol\":23926:23947  batchTransfers.length */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":24213:24234  batchTransfers.offset */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":24493:24511  nextElementHeadPtr */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":24763:24802  ERC1155_safeBatchTransferFrom_signature */\n          0x2eb2c2d600000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":24709:24745  ConduitBatch1155Transfer_from_offset */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":24685:24816  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":24910:24911  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n        tag_102:\n            /* \"lib/TokenTransferrer.sol\":24932:24935  len */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":24929:24930  i */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":24926:24936  lt(i, len) */\n          lt\n            /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n          iszero\n          tag_104\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":25311:25329  nextElementHeadPtr */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":25298:25330  calldataload(nextElementHeadPtr) */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":25264:25276  arrayHeadPtr */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":25239:25348  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":25445:25455  elementPtr */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":25432:25456  calldataload(elementPtr) */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":25549:25554  token */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":25537:25555  extcodesize(token) */\n          extcodesize\n            /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n          tag_105\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":25612:25638  NoContract_error_signature */\n          0x5f15d67200000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":25586:25610  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":25579:25639  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":25695:25700  token */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":25667:25693  NoContract_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":25660:25701  mstore(NoContract_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":25755:25778  NoContract_error_length */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":25729:25753  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":25722:25779  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":25527:25797  if iszero(extcodesize(token)) {... */\n        tag_105:\n            /* \"lib/TokenTransferrer.sol\":25939:25981  ConduitBatch1155Transfer_ids_length_offset */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":25927:25937  elementPtr */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":25923:25982  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n          add\n            /* \"lib/TokenTransferrer.sol\":25889:26000  calldataload(... */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":26231:26238  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":26220:26229  idsLength */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":26216:26239  mul(idsLength, OneWord) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":26144:26194  ConduitBatch1155Transfer_amounts_length_baseOffset */\n          0xc0\n            /* \"lib/TokenTransferrer.sol\":26119:26257  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":27544:27565  expectedAmountsOffset */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":27398:27438  ConduitBatchTransfer_amounts_head_offset */\n          0x80\n            /* \"lib/TokenTransferrer.sol\":27346:27356  elementPtr */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":27301:27476  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":27251:27510  calldataload(... */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":27215:27595  eq(... */\n          eq\n            /* \"lib/TokenTransferrer.sol\":27043:27085  ConduitBatch1155Transfer_ids_length_offset */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":26897:26937  ConduitBatch1155Transfer_ids_head_offset */\n          0x60\n            /* \"lib/TokenTransferrer.sol\":26845:26855  elementPtr */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":26800:26975  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":26750:27009  calldataload(... */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":26714:27115  eq(... */\n          eq\n            /* \"lib/TokenTransferrer.sol\":26631:27621  and(... */\n          and\n            /* \"lib/TokenTransferrer.sol\":26556:26577  expectedAmountsOffset */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":26544:26554  elementPtr */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":26540:26578  add(elementPtr, expectedAmountsOffset) */\n          add\n            /* \"lib/TokenTransferrer.sol\":26527:26579  calldataload(add(elementPtr, expectedAmountsOffset)) */\n          calldataload\n            /* \"lib/TokenTransferrer.sol\":26488:26497  idsLength */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":26456:26605  eq(... */\n          eq\n            /* \"lib/TokenTransferrer.sol\":26371:27643  and(... */\n          and\n            /* \"lib/TokenTransferrer.sol\":26343:27661  iszero(... */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":27752:27767  invalidEncoding */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n          iszero\n          tag_106\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":27884:27925  Invalid1155BatchTransferEncoding_selector */\n          0xeba2084c00000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":27822:27858  Invalid1155BatchTransferEncoding_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":27790:27947  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":28062:28101  Invalid1155BatchTransferEncoding_length */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":28000:28036  Invalid1155BatchTransferEncoding_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":27968:28123  revert(... */\n          revert\n            /* \"lib/TokenTransferrer.sol\":27749:28141  if invalidEncoding {... */\n        tag_106:\n            /* \"lib/TokenTransferrer.sol\":28269:28276  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":28249:28267  nextElementHeadPtr */\n          dup9\n            /* \"lib/TokenTransferrer.sol\":28245:28277  add(nextElementHeadPtr, OneWord) */\n          add\n            /* \"lib/TokenTransferrer.sol\":28223:28277  nextElementHeadPtr := add(nextElementHeadPtr, OneWord) */\n          swap8\n          pop\n            /* \"lib/TokenTransferrer.sol\":28532:28573  ConduitBatch1155Transfer_usable_head_size */\n          0x80\n            /* \"lib/TokenTransferrer.sol\":28473:28509  ConduitBatch1155Transfer_from_offset */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":28461:28471  elementPtr */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":28457:28510  add(elementPtr, ConduitBatch1155Transfer_from_offset) */\n          add\n            /* \"lib/TokenTransferrer.sol\":28408:28435  BatchTransfer1155Params_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":28374:28591  calldatacopy(... */\n          calldatacopy\n            /* \"lib/TokenTransferrer.sol\":28820:28828  TwoWords */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":28809:28818  idsLength */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":28805:28829  mul(idsLength, TwoWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":28795:28803  TwoWords */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":28791:28830  add(TwoWords, mul(idsLength, TwoWords)) */\n          add\n            /* \"lib/TokenTransferrer.sol\":29098:29115  idsAndAmountsSize */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":29031:29072  BatchTransfer1155Params_ids_length_offset */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":29002:29137  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":28943:28980  BatchTransfer1155Params_data_head_ptr */\n          0xa4\n            /* \"lib/TokenTransferrer.sol\":28915:29155  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":29431:29432  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":29370:29387  idsAndAmountsSize */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":29301:29344  BatchTransfer1155Params_data_length_basePtr */\n          0xc4\n            /* \"lib/TokenTransferrer.sol\":29272:29409  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":29244:29450  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":29659:29676  idsAndAmountsSize */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":29596:29637  BatchTransfer1155Params_calldata_baseSize */\n          0xc4\n            /* \"lib/TokenTransferrer.sol\":29571:29694  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":29966:29983  idsAndAmountsSize */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":29901:29943  ConduitBatch1155Transfer_ids_length_offset */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":29889:29899  elementPtr */\n          dup9\n            /* \"lib/TokenTransferrer.sol\":29885:29944  add(elementPtr, ConduitBatch1155Transfer_ids_length_offset) */\n          add\n            /* \"lib/TokenTransferrer.sol\":29825:29863  BatchTransfer1155Params_ids_length_ptr */\n          0xc4\n            /* \"lib/TokenTransferrer.sol\":29791:30001  calldatacopy(... */\n          calldatacopy\n            /* \"lib/TokenTransferrer.sol\":30379:30380  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":30356:30357  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":30279:30295  transferDataSize */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":30198:30234  ConduitBatch1155Transfer_from_offset */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":30175:30176  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":30148:30153  token */\n          dup11\n            /* \"lib/TokenTransferrer.sol\":30121:30126  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":30095:30398  call(... */\n          call\n            /* \"lib/TokenTransferrer.sol\":30471:30478  success */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n          tag_107\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":30634:30650  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n          iszero\n          tag_108\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":31106:31113  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":31062:31075  AlmostOneWord */\n          0x1f\n            /* \"lib/TokenTransferrer.sol\":31044:31060  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":31040:31076  add(returndatasize(), AlmostOneWord) */\n          add\n            /* \"lib/TokenTransferrer.sol\":31007:31139  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":31800:31807  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":31782:31798  transferDataSize */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":31778:31808  div(transferDataSize, OneWord) */\n          div\n            /* \"lib/TokenTransferrer.sol\":31936:31951  returnDataWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":31923:31934  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":31919:31952  mul(CostPerWord, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":32073:32083  msizeWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":32056:32071  returnDataWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":32053:32084  gt(returnDataWords, msizeWords) */\n          gt\n            /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n          iszero\n          tag_109\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":32875:32901  MemoryExpansionCoefficient */\n          0x0200\n            /* \"lib/TokenTransferrer.sol\":32780:32790  msizeWords */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":32768:32778  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":32764:32791  mul(msizeWords, msizeWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":32657:32672  returnDataWords */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":32592:32607  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":32539:32718  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":32490:32833  sub(... */\n          sub\n            /* \"lib/TokenTransferrer.sol\":32445:32939  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":32358:32369  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":32305:32315  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":32288:32303  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":32284:32316  sub(returnDataWords, msizeWords) */\n          sub\n            /* \"lib/TokenTransferrer.sol\":32239:32407  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":32198:32973  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":32160:32164  cost */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":32123:33003  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":32115:33003  cost := add(... */\n          swap1\n          pop\n            /* \"lib/TokenTransferrer.sol\":32050:33029  if gt(returnDataWords, msizeWords) {... */\n        tag_109:\n            /* \"lib/TokenTransferrer.sol\":33289:33294  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":33272:33286  ExtraGasBuffer */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":33266:33270  cost */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":33262:33287  add(cost, ExtraGasBuffer) */\n          add\n            /* \"lib/TokenTransferrer.sol\":33259:33295  lt(add(cost, ExtraGasBuffer), gas()) */\n          lt\n            /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n          iszero\n          tag_110\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":33425:33441  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":33422:33423  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":33419:33420  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":33404:33442  returndatacopy(0, 0, returndatasize()) */\n          returndatacopy\n            /* \"lib/TokenTransferrer.sol\":33562:33578  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":33559:33560  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":33552:33579  revert(0, returndatasize()) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":33256:33605  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n        tag_110:\n            /* \"lib/TokenTransferrer.sol\":30651:33627  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":30631:33627  if returndatasize() {... */\n        tag_108:\n            /* \"lib/TokenTransferrer.sol\":33756:33806  ERC1155BatchTransferGenericFailure_error_signature */\n          0xafc445e200000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":33729:33730  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":33697:33828  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":33943:33948  token */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":33897:33941  ERC1155BatchTransferGenericFailure_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":33890:33949  mstore(ERC1155BatchTransferGenericFailure_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":34122:34167  ERC1155BatchTransferGenericFailure_ids_offset */\n          0xc0\n            /* \"lib/TokenTransferrer.sol\":34060:34096  BatchTransfer1155Params_ids_head_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":34028:34189  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":34446:34486  BatchTransfer1155Params_amounts_head_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":34440:34487  mload(BatchTransfer1155Params_amounts_head_ptr) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":34403:34410  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":34370:34513  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":34304:34344  BatchTransfer1155Params_amounts_head_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":34272:34535  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":34726:34742  transferDataSize */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":34723:34724  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":34716:34743  revert(0, transferDataSize) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":30461:34761  if iszero(success) {... */\n        tag_107:\n            /* \"lib/TokenTransferrer.sol\":24984:34775  {... */\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":24967:24968  1 */\n          0x01\n            /* \"lib/TokenTransferrer.sol\":24964:24965  i */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":24960:24969  add(i, 1) */\n          add\n            /* \"lib/TokenTransferrer.sol\":24955:24969  i := add(i, 1) */\n          swap1\n          pop\n            /* \"lib/TokenTransferrer.sol\":24879:34775  for {... */\n          jump(tag_102)\n        tag_104:\n            /* \"lib/TokenTransferrer.sol\":24883:24925  {... */\n          pop\n            /* \"lib/TokenTransferrer.sol\":35139:35163  DefaultFreeMemoryPointer */\n          0x80\n            /* \"lib/TokenTransferrer.sol\":35116:35137  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":35109:35164  mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":23901:35174  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":23697:35180  function _performERC1155BatchTransfers(... */\n          pop\n          pop\n          jump\t// out\n            /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n        tag_74:\n            /* \"lib/TokenTransferrer.sol\":1771:1792  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":1765:1793  mload(FreeMemoryPointerSlot) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":1919:1947  ERC20_transferFrom_signature */\n          0x23b872dd00000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":1891:1917  ERC20_transferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":1884:1948  mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":1997:2001  from */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":1968:1995  ERC20_transferFrom_from_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":1961:2002  mstore(ERC20_transferFrom_from_ptr, from) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":2049:2051  to */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":2022:2047  ERC20_transferFrom_to_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":2015:2052  mstore(ERC20_transferFrom_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":2103:2109  amount */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":2072:2101  ERC20_transferFrom_amount_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":2065:2110  mstore(ERC20_transferFrom_amount_ptr, amount) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":2797:2804  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":2778:2779  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":2735:2760  ERC20_transferFrom_length */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":2691:2717  ERC20_transferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":2672:2673  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":2649:2654  token */\n          dup10\n            /* \"lib/TokenTransferrer.sol\":2626:2631  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":2604:2818  call(... */\n          call\n            /* \"lib/TokenTransferrer.sol\":3295:3305  callStatus */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":3242:3258  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":3235:3259  iszero(returndatasize()) */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":3209:3211  31 */\n          0x1f\n            /* \"lib/TokenTransferrer.sol\":3191:3207  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":3188:3212  gt(returndatasize(), 31) */\n          gt\n            /* \"lib/TokenTransferrer.sol\":3184:3185  1 */\n          0x01\n            /* \"lib/TokenTransferrer.sol\":3180:3181  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":3174:3182  mload(0) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":3171:3186  eq(mload(0), 1) */\n          eq\n            /* \"lib/TokenTransferrer.sol\":3167:3213  and(eq(mload(0), 1), gt(returndatasize(), 31)) */\n          and\n            /* \"lib/TokenTransferrer.sol\":3143:3277  or(... */\n          or\n            /* \"lib/TokenTransferrer.sol\":2927:3319  and(... */\n          and\n            /* \"lib/TokenTransferrer.sol\":3680:3696  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":3673:3697  iszero(returndatasize()) */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":3666:3698  iszero(iszero(returndatasize())) */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":3657:3664  success */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":3653:3699  and(success, iszero(iszero(returndatasize()))) */\n          and\n            /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n          tag_112\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":4001:4008  success */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":3991:3996  token */\n          dup8\n            /* \"lib/TokenTransferrer.sol\":3979:3997  extcodesize(token) */\n          extcodesize\n            /* \"lib/TokenTransferrer.sol\":3972:3998  iszero(extcodesize(token)) */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":3965:3999  iszero(iszero(extcodesize(token))) */\n          iszero\n            /* \"lib/TokenTransferrer.sol\":3961:4009  and(iszero(iszero(extcodesize(token))), success) */\n          and\n            /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n          tag_113\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":4090:4097  success */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n          tag_114\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":4189:4199  callStatus */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n          tag_115\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":4379:4395  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n          iszero\n          tag_116\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":4946:4953  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":4894:4907  AlmostOneWord */\n          0x1f\n            /* \"lib/TokenTransferrer.sol\":4876:4892  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":4872:4908  add(returndatasize(), AlmostOneWord) */\n          add\n            /* \"lib/TokenTransferrer.sol\":4831:4987  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":5352:5359  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":5340:5350  memPointer */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":5336:5360  div(memPointer, OneWord) */\n          div\n            /* \"lib/TokenTransferrer.sol\":5504:5519  returnDataWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":5491:5502  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":5487:5520  mul(CostPerWord, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":5657:5667  msizeWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":5640:5655  returnDataWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":5637:5668  gt(returnDataWords, msizeWords) */\n          gt\n            /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n          iszero\n          tag_117\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":6741:6767  MemoryExpansionCoefficient */\n          0x0200\n            /* \"lib/TokenTransferrer.sol\":6630:6640  msizeWords */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":6618:6628  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":6614:6641  mul(msizeWords, msizeWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":6491:6506  returnDataWords */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":6418:6433  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":6357:6560  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":6300:6691  sub(... */\n          sub\n            /* \"lib/TokenTransferrer.sol\":6247:6813  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":6144:6155  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":6034:6044  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":5965:5980  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":5908:6094  sub(... */\n          sub\n            /* \"lib/TokenTransferrer.sol\":5855:6201  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":5806:6855  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":5760:5764  cost */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":5715:6893  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":5707:6893  cost := add(... */\n          swap1\n          pop\n            /* \"lib/TokenTransferrer.sol\":5634:6927  if gt(returnDataWords, msizeWords) {... */\n        tag_117:\n            /* \"lib/TokenTransferrer.sol\":7219:7224  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":7202:7216  ExtraGasBuffer */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":7196:7200  cost */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":7192:7217  add(cost, ExtraGasBuffer) */\n          add\n            /* \"lib/TokenTransferrer.sol\":7189:7225  lt(add(cost, ExtraGasBuffer), gas()) */\n          lt\n            /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n          iszero\n          tag_118\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":7417:7433  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":7414:7415  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":7411:7412  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":7396:7434  returndatacopy(0, 0, returndatasize()) */\n          returndatacopy\n            /* \"lib/TokenTransferrer.sol\":7617:7633  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":7614:7615  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":7607:7634  revert(0, returndatasize()) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":7186:7668  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n        tag_118:\n            /* \"lib/TokenTransferrer.sol\":4396:7698  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":4376:7698  if returndatasize() {... */\n        tag_116:\n            /* \"lib/TokenTransferrer.sol\":7921:7964  TokenTransferGenericFailure_error_signature */\n          0xf486bc8700000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":7846:7887  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":7806:7994  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8140:8145  token */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":8063:8106  TokenTransferGenericFailure_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":8023:8175  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8320:8324  from */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":8244:8286  TokenTransferGenericFailure_error_from_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":8204:8354  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8432:8434  to */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":8390:8430  TokenTransferGenericFailure_error_to_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":8383:8435  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8513:8514  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":8471:8511  TokenTransferGenericFailure_error_id_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":8464:8515  mstore(TokenTransferGenericFailure_error_id_ptr, 0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8662:8668  amount */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":8584:8628  TokenTransferGenericFailure_error_amount_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":8544:8698  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":8842:8882  TokenTransferGenericFailure_error_length */\n          0xa4\n            /* \"lib/TokenTransferrer.sol\":8767:8808  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":8727:8912  revert(... */\n          revert\n            /* \"lib/TokenTransferrer.sol\":4179:8938  if iszero(callStatus) {... */\n        tag_115:\n            /* \"lib/TokenTransferrer.sol\":9227:9276  BadReturnValueFromERC20OnTransfer_error_signature */\n          0x9889192300000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":9150:9197  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":9114:9302  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":9442:9447  token */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":9363:9412  BadReturnValueFromERC20OnTransfer_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":9327:9473  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":9612:9616  from */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":9534:9582  BadReturnValueFromERC20OnTransfer_error_from_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":9498:9642  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":9779:9781  to */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":9703:9749  BadReturnValueFromERC20OnTransfer_error_to_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":9667:9807  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":9948:9954  amount */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":9868:9918  BadReturnValueFromERC20OnTransfer_error_amount_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":9832:9980  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":10118:10164  BadReturnValueFromERC20OnTransfer_error_length */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":10041:10088  BadReturnValueFromERC20OnTransfer_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":10005:10190  revert(... */\n          revert\n            /* \"lib/TokenTransferrer.sol\":4080:10212  if iszero(success) {... */\n        tag_114:\n            /* \"lib/TokenTransferrer.sol\":10348:10374  NoContract_error_signature */\n          0x5f15d67200000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":10322:10346  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":10315:10375  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":10431:10436  token */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":10403:10429  NoContract_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":10396:10437  mstore(NoContract_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":10491:10514  NoContract_error_length */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":10465:10489  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":10458:10515  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":3951:10533  if iszero(and(iszero(iszero(extcodesize(token))), success)) {... */\n        tag_113:\n            /* \"lib/TokenTransferrer.sol\":3643:10753  if iszero(and(success, iszero(iszero(returndatasize())))) {... */\n        tag_112:\n            /* \"lib/TokenTransferrer.sol\":10854:10864  memPointer */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":10831:10852  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":10824:10865  mstore(FreeMemoryPointerSlot, memPointer) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":10942:10943  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":10932:10940  ZeroSlot */\n          0x60\n            /* \"lib/TokenTransferrer.sol\":10925:10944  mstore(ZeroSlot, 0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":1573:10954  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":1345:10960  function _performERC20Transfer(... */\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n        tag_87:\n            /* \"lib/TokenTransferrer.sol\":11883:11888  token */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":11871:11889  extcodesize(token) */\n          extcodesize\n            /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n          tag_120\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":11942:11968  NoContract_error_signature */\n          0x5f15d67200000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":11916:11940  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":11909:11969  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12021:12026  token */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":11993:12019  NoContract_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":11986:12027  mstore(NoContract_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12077:12100  NoContract_error_length */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":12051:12075  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":12044:12101  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":11861:12115  if iszero(extcodesize(token)) {... */\n        tag_120:\n            /* \"lib/TokenTransferrer.sol\":12313:12334  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":12307:12335  mload(FreeMemoryPointerSlot) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":12459:12488  ERC721_transferFrom_signature */\n          0x23b872dd00000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":12430:12457  ERC721_transferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":12423:12489  mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12539:12543  from */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":12509:12537  ERC721_transferFrom_from_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":12502:12544  mstore(ERC721_transferFrom_from_ptr, from) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12592:12594  to */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":12564:12590  ERC721_transferFrom_to_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":12557:12595  mstore(ERC721_transferFrom_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12643:12653  identifier */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":12615:12641  ERC721_transferFrom_id_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":12608:12654  mstore(ERC721_transferFrom_id_ptr, identifier) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":12933:12934  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":12914:12915  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":12870:12896  ERC721_transferFrom_length */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":12825:12852  ERC721_transferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":12806:12807  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":12783:12788  token */\n          dup10\n            /* \"lib/TokenTransferrer.sol\":12760:12765  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":12738:12948  call(... */\n          call\n            /* \"lib/TokenTransferrer.sol\":13013:13020  success */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n          tag_121\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":13164:13180  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n          iszero\n          tag_122\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":13606:13613  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":13566:13579  AlmostOneWord */\n          0x1f\n            /* \"lib/TokenTransferrer.sol\":13548:13564  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":13544:13580  add(returndatasize(), AlmostOneWord) */\n          add\n            /* \"lib/TokenTransferrer.sol\":13515:13635  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":13917:13924  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":13905:13915  memPointer */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":13901:13925  div(memPointer, OneWord) */\n          div\n            /* \"lib/TokenTransferrer.sol\":14045:14060  returnDataWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":14032:14043  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":14028:14061  mul(CostPerWord, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":14174:14184  msizeWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":14157:14172  returnDataWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":14154:14185  gt(returnDataWords, msizeWords) */\n          gt\n            /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n          iszero\n          tag_123\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":14782:14808  MemoryExpansionCoefficient */\n          0x0200\n            /* \"lib/TokenTransferrer.sol\":14695:14705  msizeWords */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":14683:14693  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":14679:14706  mul(msizeWords, msizeWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":14621:14636  returnDataWords */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":14604:14619  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":14600:14637  mul(returnDataWords, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":14555:14744  sub(... */\n          sub\n            /* \"lib/TokenTransferrer.sol\":14514:14842  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":14435:14446  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":14386:14396  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":14369:14384  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":14365:14397  sub(returnDataWords, msizeWords) */\n          sub\n            /* \"lib/TokenTransferrer.sol\":14324:14480  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":14287:14872  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":14253:14257  cost */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":14220:14898  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":14212:14898  cost := add(... */\n          swap1\n          pop\n            /* \"lib/TokenTransferrer.sol\":14151:14920  if gt(returnDataWords, msizeWords) {... */\n        tag_123:\n            /* \"lib/TokenTransferrer.sol\":15164:15169  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":15147:15161  ExtraGasBuffer */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":15141:15145  cost */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":15137:15162  add(cost, ExtraGasBuffer) */\n          add\n            /* \"lib/TokenTransferrer.sol\":15134:15170  lt(add(cost, ExtraGasBuffer), gas()) */\n          lt\n            /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n          iszero\n          tag_124\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":15299:15315  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":15296:15297  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":15293:15294  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":15278:15316  returndatacopy(0, 0, returndatasize()) */\n          returndatacopy\n            /* \"lib/TokenTransferrer.sol\":15432:15448  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":15429:15430  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":15422:15449  revert(0, returndatasize()) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":15131:15471  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n        tag_124:\n            /* \"lib/TokenTransferrer.sol\":13181:15489  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":13161:15489  if returndatasize() {... */\n        tag_122:\n            /* \"lib/TokenTransferrer.sol\":15664:15707  TokenTransferGenericFailure_error_signature */\n          0xf486bc8700000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":15601:15642  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":15573:15725  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":15794:15799  token */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":15749:15792  TokenTransferGenericFailure_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":15742:15800  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":15868:15872  from */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":15824:15866  TokenTransferGenericFailure_error_from_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":15817:15873  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":15939:15941  to */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":15897:15937  TokenTransferGenericFailure_error_to_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":15890:15942  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":16008:16018  identifier */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":15966:16006  TokenTransferGenericFailure_error_id_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":15959:16019  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":16089:16090  1 */\n          0x01\n            /* \"lib/TokenTransferrer.sol\":16043:16087  TokenTransferGenericFailure_error_amount_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":16036:16091  mstore(TokenTransferGenericFailure_error_amount_ptr, 1) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":16199:16239  TokenTransferGenericFailure_error_length */\n          0xa4\n            /* \"lib/TokenTransferrer.sol\":16136:16177  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":16108:16257  revert(... */\n          revert\n            /* \"lib/TokenTransferrer.sol\":13003:16271  if iszero(success) {... */\n        tag_121:\n            /* \"lib/TokenTransferrer.sol\":16372:16382  memPointer */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":16349:16370  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":16342:16383  mstore(FreeMemoryPointerSlot, memPointer) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":16460:16461  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":16450:16458  ZeroSlot */\n          0x60\n            /* \"lib/TokenTransferrer.sol\":16443:16462  mstore(ZeroSlot, 0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":11798:16472  {... */\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":11564:16478  function _performERC721Transfer(... */\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n        tag_99:\n            /* \"lib/TokenTransferrer.sol\":17471:17476  token */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":17459:17477  extcodesize(token) */\n          extcodesize\n            /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n          tag_126\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":17530:17556  NoContract_error_signature */\n          0x5f15d67200000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":17504:17528  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":17497:17557  mstore(NoContract_error_sig_ptr, NoContract_error_signature) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":17609:17614  token */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":17581:17607  NoContract_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":17574:17615  mstore(NoContract_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":17665:17688  NoContract_error_length */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":17639:17663  NoContract_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":17632:17689  revert(NoContract_error_sig_ptr, NoContract_error_length) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":17449:17703  if iszero(extcodesize(token)) {... */\n        tag_126:\n            /* \"lib/TokenTransferrer.sol\":17895:17916  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":17889:17917  mload(FreeMemoryPointerSlot) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":17952:17960  Slot0x80 */\n          0x80\n            /* \"lib/TokenTransferrer.sol\":17946:17961  mload(Slot0x80) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":17996:18004  Slot0xA0 */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":17990:18005  mload(Slot0xA0) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":18040:18048  Slot0xC0 */\n          0xc0\n            /* \"lib/TokenTransferrer.sol\":18034:18049  mload(Slot0xC0) */\n          mload\n            /* \"lib/TokenTransferrer.sol\":18215:18249  ERC1155_safeTransferFrom_signature */\n          0xf242432a00000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":18165:18197  ERC1155_safeTransferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":18141:18263  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18318:18322  from */\n          dup8\n            /* \"lib/TokenTransferrer.sol\":18283:18316  ERC1155_safeTransferFrom_from_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":18276:18323  mstore(ERC1155_safeTransferFrom_from_ptr, from) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18376:18378  to */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":18343:18374  ERC1155_safeTransferFrom_to_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":18336:18379  mstore(ERC1155_safeTransferFrom_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18432:18442  identifier */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":18399:18430  ERC1155_safeTransferFrom_id_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":18392:18443  mstore(ERC1155_safeTransferFrom_id_ptr, identifier) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18500:18506  amount */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":18463:18498  ERC1155_safeTransferFrom_amount_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":18456:18507  mstore(ERC1155_safeTransferFrom_amount_ptr, amount) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18602:18645  ERC1155_safeTransferFrom_data_length_offset */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":18544:18584  ERC1155_safeTransferFrom_data_offset_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":18520:18659  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":18721:18722  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":18679:18719  ERC1155_safeTransferFrom_data_length_ptr */\n          0xa4\n            /* \"lib/TokenTransferrer.sol\":18672:18723  mstore(ERC1155_safeTransferFrom_data_length_ptr, 0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":19012:19013  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":18993:18994  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":18944:18975  ERC1155_safeTransferFrom_length */\n          0xc4\n            /* \"lib/TokenTransferrer.sol\":18894:18926  ERC1155_safeTransferFrom_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":18875:18876  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":18852:18857  token */\n          dup14\n            /* \"lib/TokenTransferrer.sol\":18829:18834  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":18807:19027  call(... */\n          call\n            /* \"lib/TokenTransferrer.sol\":19092:19099  success */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n          tag_127\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":19243:19259  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n          iszero\n          tag_128\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":19685:19692  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":19645:19658  AlmostOneWord */\n          0x1f\n            /* \"lib/TokenTransferrer.sol\":19627:19643  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":19623:19659  add(returndatasize(), AlmostOneWord) */\n          add\n            /* \"lib/TokenTransferrer.sol\":19594:19714  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":19996:20003  OneWord */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":19984:19994  memPointer */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":19980:20004  div(memPointer, OneWord) */\n          div\n            /* \"lib/TokenTransferrer.sol\":20124:20139  returnDataWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":20111:20122  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":20107:20140  mul(CostPerWord, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":20253:20263  msizeWords */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":20236:20251  returnDataWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":20233:20264  gt(returnDataWords, msizeWords) */\n          gt\n            /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n          iszero\n          tag_129\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":20861:20887  MemoryExpansionCoefficient */\n          0x0200\n            /* \"lib/TokenTransferrer.sol\":20774:20784  msizeWords */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":20762:20772  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":20758:20785  mul(msizeWords, msizeWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":20700:20715  returnDataWords */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":20683:20698  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":20679:20716  mul(returnDataWords, returnDataWords) */\n          mul\n            /* \"lib/TokenTransferrer.sol\":20634:20823  sub(... */\n          sub\n            /* \"lib/TokenTransferrer.sol\":20593:20921  div(... */\n          div\n            /* \"lib/TokenTransferrer.sol\":20514:20525  CostPerWord */\n          0x03\n            /* \"lib/TokenTransferrer.sol\":20465:20475  msizeWords */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":20448:20463  returnDataWords */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":20444:20476  sub(returnDataWords, msizeWords) */\n          sub\n            /* \"lib/TokenTransferrer.sol\":20403:20559  mul(... */\n          mul\n            /* \"lib/TokenTransferrer.sol\":20366:20951  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":20332:20336  cost */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":20299:20977  add(... */\n          add\n            /* \"lib/TokenTransferrer.sol\":20291:20977  cost := add(... */\n          swap1\n          pop\n            /* \"lib/TokenTransferrer.sol\":20230:20999  if gt(returnDataWords, msizeWords) {... */\n        tag_129:\n            /* \"lib/TokenTransferrer.sol\":21243:21248  gas() */\n          gas\n            /* \"lib/TokenTransferrer.sol\":21226:21240  ExtraGasBuffer */\n          0x20\n            /* \"lib/TokenTransferrer.sol\":21220:21224  cost */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":21216:21241  add(cost, ExtraGasBuffer) */\n          add\n            /* \"lib/TokenTransferrer.sol\":21213:21249  lt(add(cost, ExtraGasBuffer), gas()) */\n          lt\n            /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n          iszero\n          tag_130\n          jumpi\n            /* \"lib/TokenTransferrer.sol\":21378:21394  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":21375:21376  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":21372:21373  0 */\n          dup1\n            /* \"lib/TokenTransferrer.sol\":21357:21395  returndatacopy(0, 0, returndatasize()) */\n          returndatacopy\n            /* \"lib/TokenTransferrer.sol\":21511:21527  returndatasize() */\n          returndatasize\n            /* \"lib/TokenTransferrer.sol\":21508:21509  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":21501:21528  revert(0, returndatasize()) */\n          revert\n            /* \"lib/TokenTransferrer.sol\":21210:21550  if lt(add(cost, ExtraGasBuffer), gas()) {... */\n        tag_130:\n            /* \"lib/TokenTransferrer.sol\":19260:21568  {... */\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":19240:21568  if returndatasize() {... */\n        tag_128:\n            /* \"lib/TokenTransferrer.sol\":21743:21786  TokenTransferGenericFailure_error_signature */\n          0xf486bc8700000000000000000000000000000000000000000000000000000000\n            /* \"lib/TokenTransferrer.sol\":21680:21721  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":21652:21804  mstore(... */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":21873:21878  token */\n          dup10\n            /* \"lib/TokenTransferrer.sol\":21828:21871  TokenTransferGenericFailure_error_token_ptr */\n          0x04\n            /* \"lib/TokenTransferrer.sol\":21821:21879  mstore(TokenTransferGenericFailure_error_token_ptr, token) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":21947:21951  from */\n          dup9\n            /* \"lib/TokenTransferrer.sol\":21903:21945  TokenTransferGenericFailure_error_from_ptr */\n          0x24\n            /* \"lib/TokenTransferrer.sol\":21896:21952  mstore(TokenTransferGenericFailure_error_from_ptr, from) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22018:22020  to */\n          dup8\n            /* \"lib/TokenTransferrer.sol\":21976:22016  TokenTransferGenericFailure_error_to_ptr */\n          0x44\n            /* \"lib/TokenTransferrer.sol\":21969:22021  mstore(TokenTransferGenericFailure_error_to_ptr, to) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22087:22097  identifier */\n          dup7\n            /* \"lib/TokenTransferrer.sol\":22045:22085  TokenTransferGenericFailure_error_id_ptr */\n          0x64\n            /* \"lib/TokenTransferrer.sol\":22038:22098  mstore(TokenTransferGenericFailure_error_id_ptr, identifier) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22168:22174  amount */\n          dup6\n            /* \"lib/TokenTransferrer.sol\":22122:22166  TokenTransferGenericFailure_error_amount_ptr */\n          0x84\n            /* \"lib/TokenTransferrer.sol\":22115:22175  mstore(TokenTransferGenericFailure_error_amount_ptr, amount) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22283:22323  TokenTransferGenericFailure_error_length */\n          0xa4\n            /* \"lib/TokenTransferrer.sol\":22220:22261  TokenTransferGenericFailure_error_sig_ptr */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":22192:22341  revert(... */\n          revert\n            /* \"lib/TokenTransferrer.sol\":19082:22355  if iszero(success) {... */\n        tag_127:\n            /* \"lib/TokenTransferrer.sol\":22386:22394  slot0x80 */\n          dup4\n            /* \"lib/TokenTransferrer.sol\":22376:22384  Slot0x80 */\n          0x80\n            /* \"lib/TokenTransferrer.sol\":22369:22395  mstore(Slot0x80, slot0x80) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22447:22455  slot0xA0 */\n          dup3\n            /* \"lib/TokenTransferrer.sol\":22437:22445  Slot0xA0 */\n          0xa0\n            /* \"lib/TokenTransferrer.sol\":22430:22456  mstore(Slot0xA0, slot0xA0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22508:22516  slot0xC0 */\n          dup2\n            /* \"lib/TokenTransferrer.sol\":22498:22506  Slot0xC0 */\n          0xc0\n            /* \"lib/TokenTransferrer.sol\":22491:22517  mstore(Slot0xC0, slot0xC0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22640:22650  memPointer */\n          dup5\n            /* \"lib/TokenTransferrer.sol\":22617:22638  FreeMemoryPointerSlot */\n          0x40\n            /* \"lib/TokenTransferrer.sol\":22610:22651  mstore(FreeMemoryPointerSlot, memPointer) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":22728:22729  0 */\n          0x00\n            /* \"lib/TokenTransferrer.sol\":22718:22726  ZeroSlot */\n          0x60\n            /* \"lib/TokenTransferrer.sol\":22711:22730  mstore(ZeroSlot, 0) */\n          mstore\n            /* \"lib/TokenTransferrer.sol\":17386:22740  {... */\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"lib/TokenTransferrer.sol\":17126:22746  function _performERC1155Transfer(... */\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":88:205   */\n        tag_132:\n            /* \"#utility.yul\":197:198   */\n          0x00\n            /* \"#utility.yul\":194:195   */\n          dup1\n            /* \"#utility.yul\":187:199   */\n          revert\n            /* \"#utility.yul\":211:328   */\n        tag_133:\n            /* \"#utility.yul\":320:321   */\n          0x00\n            /* \"#utility.yul\":317:318   */\n          dup1\n            /* \"#utility.yul\":310:322   */\n          revert\n            /* \"#utility.yul\":334:451   */\n        tag_134:\n            /* \"#utility.yul\":443:444   */\n          0x00\n            /* \"#utility.yul\":440:441   */\n          dup1\n            /* \"#utility.yul\":433:445   */\n          revert\n            /* \"#utility.yul\":457:574   */\n        tag_135:\n            /* \"#utility.yul\":566:567   */\n          0x00\n            /* \"#utility.yul\":563:564   */\n          dup1\n            /* \"#utility.yul\":556:568   */\n          revert\n            /* \"#utility.yul\":580:697   */\n        tag_136:\n            /* \"#utility.yul\":689:690   */\n          0x00\n            /* \"#utility.yul\":686:687   */\n          dup1\n            /* \"#utility.yul\":679:691   */\n          revert\n            /* \"#utility.yul\":735:1338   */\n        tag_137:\n            /* \"#utility.yul\":843:851   */\n          0x00\n            /* \"#utility.yul\":853:859   */\n          dup1\n            /* \"#utility.yul\":903:906   */\n          dup4\n            /* \"#utility.yul\":896:900   */\n          0x1f\n            /* \"#utility.yul\":888:894   */\n          dup5\n            /* \"#utility.yul\":884:901   */\n          add\n            /* \"#utility.yul\":880:907   */\n          slt\n            /* \"#utility.yul\":870:992   */\n          tag_160\n          jumpi\n            /* \"#utility.yul\":911:990   */\n          tag_161\n          tag_134\n          jump\t// in\n        tag_161:\n            /* \"#utility.yul\":870:992   */\n        tag_160:\n            /* \"#utility.yul\":1024:1030   */\n          dup3\n            /* \"#utility.yul\":1011:1031   */\n          calldataload\n            /* \"#utility.yul\":1001:1031   */\n          swap1\n          pop\n            /* \"#utility.yul\":1054:1072   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":1046:1052   */\n          dup2\n            /* \"#utility.yul\":1043:1073   */\n          gt\n            /* \"#utility.yul\":1040:1157   */\n          iszero\n          tag_162\n          jumpi\n            /* \"#utility.yul\":1076:1155   */\n          tag_163\n          tag_135\n          jump\t// in\n        tag_163:\n            /* \"#utility.yul\":1040:1157   */\n        tag_162:\n            /* \"#utility.yul\":1190:1194   */\n          0x20\n            /* \"#utility.yul\":1182:1188   */\n          dup4\n            /* \"#utility.yul\":1178:1195   */\n          add\n            /* \"#utility.yul\":1166:1195   */\n          swap2\n          pop\n            /* \"#utility.yul\":1244:1247   */\n          dup4\n            /* \"#utility.yul\":1236:1240   */\n          0xc0\n            /* \"#utility.yul\":1228:1234   */\n          dup3\n            /* \"#utility.yul\":1224:1241   */\n          mul\n            /* \"#utility.yul\":1214:1222   */\n          dup4\n            /* \"#utility.yul\":1210:1242   */\n          add\n            /* \"#utility.yul\":1207:1248   */\n          gt\n            /* \"#utility.yul\":1204:1332   */\n          iszero\n          tag_164\n          jumpi\n            /* \"#utility.yul\":1251:1330   */\n          tag_165\n          tag_136\n          jump\t// in\n        tag_165:\n            /* \"#utility.yul\":1204:1332   */\n        tag_164:\n            /* \"#utility.yul\":735:1338   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1344:1973   */\n        tag_9:\n            /* \"#utility.yul\":1465:1471   */\n          0x00\n            /* \"#utility.yul\":1473:1479   */\n          dup1\n            /* \"#utility.yul\":1522:1524   */\n          0x20\n            /* \"#utility.yul\":1510:1519   */\n          dup4\n            /* \"#utility.yul\":1501:1508   */\n          dup6\n            /* \"#utility.yul\":1497:1520   */\n          sub\n            /* \"#utility.yul\":1493:1525   */\n          slt\n            /* \"#utility.yul\":1490:1609   */\n          iszero\n          tag_167\n          jumpi\n            /* \"#utility.yul\":1528:1607   */\n          tag_168\n          tag_132\n          jump\t// in\n        tag_168:\n            /* \"#utility.yul\":1490:1609   */\n        tag_167:\n            /* \"#utility.yul\":1676:1677   */\n          0x00\n            /* \"#utility.yul\":1665:1674   */\n          dup4\n            /* \"#utility.yul\":1661:1678   */\n          add\n            /* \"#utility.yul\":1648:1679   */\n          calldataload\n            /* \"#utility.yul\":1706:1724   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":1698:1704   */\n          dup2\n            /* \"#utility.yul\":1695:1725   */\n          gt\n            /* \"#utility.yul\":1692:1809   */\n          iszero\n          tag_169\n          jumpi\n            /* \"#utility.yul\":1728:1807   */\n          tag_170\n          tag_133\n          jump\t// in\n        tag_170:\n            /* \"#utility.yul\":1692:1809   */\n        tag_169:\n            /* \"#utility.yul\":1841:1956   */\n          tag_171\n            /* \"#utility.yul\":1948:1955   */\n          dup6\n            /* \"#utility.yul\":1939:1945   */\n          dup3\n            /* \"#utility.yul\":1928:1937   */\n          dup7\n            /* \"#utility.yul\":1924:1946   */\n          add\n            /* \"#utility.yul\":1841:1956   */\n          tag_137\n          jump\t// in\n        tag_171:\n            /* \"#utility.yul\":1823:1956   */\n          swap3\n          pop\n          swap3\n          pop\n            /* \"#utility.yul\":1619:1966   */\n          pop\n            /* \"#utility.yul\":1344:1973   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1979:2128   */\n        tag_138:\n            /* \"#utility.yul\":2015:2022   */\n          0x00\n            /* \"#utility.yul\":2055:2121   */\n          0xffffffff00000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":2048:2053   */\n          dup3\n            /* \"#utility.yul\":2044:2122   */\n          and\n            /* \"#utility.yul\":2033:2122   */\n          swap1\n          pop\n            /* \"#utility.yul\":1979:2128   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2134:2249   */\n        tag_139:\n            /* \"#utility.yul\":2219:2242   */\n          tag_174\n            /* \"#utility.yul\":2236:2241   */\n          dup2\n            /* \"#utility.yul\":2219:2242   */\n          tag_138\n          jump\t// in\n        tag_174:\n            /* \"#utility.yul\":2214:2217   */\n          dup3\n            /* \"#utility.yul\":2207:2243   */\n          mstore\n            /* \"#utility.yul\":2134:2249   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2255:2473   */\n        tag_12:\n            /* \"#utility.yul\":2346:2350   */\n          0x00\n            /* \"#utility.yul\":2384:2386   */\n          0x20\n            /* \"#utility.yul\":2373:2382   */\n          dup3\n            /* \"#utility.yul\":2369:2387   */\n          add\n            /* \"#utility.yul\":2361:2387   */\n          swap1\n          pop\n            /* \"#utility.yul\":2397:2466   */\n          tag_176\n            /* \"#utility.yul\":2463:2464   */\n          0x00\n            /* \"#utility.yul\":2452:2461   */\n          dup4\n            /* \"#utility.yul\":2448:2465   */\n          add\n            /* \"#utility.yul\":2439:2445   */\n          dup5\n            /* \"#utility.yul\":2397:2466   */\n          tag_139\n          jump\t// in\n        tag_176:\n            /* \"#utility.yul\":2255:2473   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2520:3132   */\n        tag_140:\n            /* \"#utility.yul\":2637:2645   */\n          0x00\n            /* \"#utility.yul\":2647:2653   */\n          dup1\n            /* \"#utility.yul\":2697:2700   */\n          dup4\n            /* \"#utility.yul\":2690:2694   */\n          0x1f\n            /* \"#utility.yul\":2682:2688   */\n          dup5\n            /* \"#utility.yul\":2678:2695   */\n          add\n            /* \"#utility.yul\":2674:2701   */\n          slt\n            /* \"#utility.yul\":2664:2786   */\n          tag_178\n          jumpi\n            /* \"#utility.yul\":2705:2784   */\n          tag_179\n          tag_134\n          jump\t// in\n        tag_179:\n            /* \"#utility.yul\":2664:2786   */\n        tag_178:\n            /* \"#utility.yul\":2818:2824   */\n          dup3\n            /* \"#utility.yul\":2805:2825   */\n          calldataload\n            /* \"#utility.yul\":2795:2825   */\n          swap1\n          pop\n            /* \"#utility.yul\":2848:2866   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":2840:2846   */\n          dup2\n            /* \"#utility.yul\":2837:2867   */\n          gt\n            /* \"#utility.yul\":2834:2951   */\n          iszero\n          tag_180\n          jumpi\n            /* \"#utility.yul\":2870:2949   */\n          tag_181\n          tag_135\n          jump\t// in\n        tag_181:\n            /* \"#utility.yul\":2834:2951   */\n        tag_180:\n            /* \"#utility.yul\":2984:2988   */\n          0x20\n            /* \"#utility.yul\":2976:2982   */\n          dup4\n            /* \"#utility.yul\":2972:2989   */\n          add\n            /* \"#utility.yul\":2960:2989   */\n          swap2\n          pop\n            /* \"#utility.yul\":3038:3041   */\n          dup4\n            /* \"#utility.yul\":3030:3034   */\n          0x20\n            /* \"#utility.yul\":3022:3028   */\n          dup3\n            /* \"#utility.yul\":3018:3035   */\n          mul\n            /* \"#utility.yul\":3008:3016   */\n          dup4\n            /* \"#utility.yul\":3004:3036   */\n          add\n            /* \"#utility.yul\":3001:3042   */\n          gt\n            /* \"#utility.yul\":2998:3126   */\n          iszero\n          tag_182\n          jumpi\n            /* \"#utility.yul\":3045:3124   */\n          tag_183\n          tag_136\n          jump\t// in\n        tag_183:\n            /* \"#utility.yul\":2998:3126   */\n        tag_182:\n            /* \"#utility.yul\":2520:3132   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":3138:4230   */\n        tag_15:\n            /* \"#utility.yul\":3339:3345   */\n          0x00\n            /* \"#utility.yul\":3347:3353   */\n          dup1\n            /* \"#utility.yul\":3355:3361   */\n          0x00\n            /* \"#utility.yul\":3363:3369   */\n          dup1\n            /* \"#utility.yul\":3412:3414   */\n          0x40\n            /* \"#utility.yul\":3400:3409   */\n          dup6\n            /* \"#utility.yul\":3391:3398   */\n          dup8\n            /* \"#utility.yul\":3387:3410   */\n          sub\n            /* \"#utility.yul\":3383:3415   */\n          slt\n            /* \"#utility.yul\":3380:3499   */\n          iszero\n          tag_185\n          jumpi\n            /* \"#utility.yul\":3418:3497   */\n          tag_186\n          tag_132\n          jump\t// in\n        tag_186:\n            /* \"#utility.yul\":3380:3499   */\n        tag_185:\n            /* \"#utility.yul\":3566:3567   */\n          0x00\n            /* \"#utility.yul\":3555:3564   */\n          dup6\n            /* \"#utility.yul\":3551:3568   */\n          add\n            /* \"#utility.yul\":3538:3569   */\n          calldataload\n            /* \"#utility.yul\":3596:3614   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":3588:3594   */\n          dup2\n            /* \"#utility.yul\":3585:3615   */\n          gt\n            /* \"#utility.yul\":3582:3699   */\n          iszero\n          tag_187\n          jumpi\n            /* \"#utility.yul\":3618:3697   */\n          tag_188\n          tag_133\n          jump\t// in\n        tag_188:\n            /* \"#utility.yul\":3582:3699   */\n        tag_187:\n            /* \"#utility.yul\":3731:3846   */\n          tag_189\n            /* \"#utility.yul\":3838:3845   */\n          dup8\n            /* \"#utility.yul\":3829:3835   */\n          dup3\n            /* \"#utility.yul\":3818:3827   */\n          dup9\n            /* \"#utility.yul\":3814:3836   */\n          add\n            /* \"#utility.yul\":3731:3846   */\n          tag_137\n          jump\t// in\n        tag_189:\n            /* \"#utility.yul\":3713:3846   */\n          swap5\n          pop\n          swap5\n          pop\n            /* \"#utility.yul\":3509:3856   */\n          pop\n            /* \"#utility.yul\":3923:3925   */\n          0x20\n            /* \"#utility.yul\":3912:3921   */\n          dup6\n            /* \"#utility.yul\":3908:3926   */\n          add\n            /* \"#utility.yul\":3895:3927   */\n          calldataload\n            /* \"#utility.yul\":3954:3972   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":3946:3952   */\n          dup2\n            /* \"#utility.yul\":3943:3973   */\n          gt\n            /* \"#utility.yul\":3940:4057   */\n          iszero\n          tag_190\n          jumpi\n            /* \"#utility.yul\":3976:4055   */\n          tag_191\n          tag_133\n          jump\t// in\n        tag_191:\n            /* \"#utility.yul\":3940:4057   */\n        tag_190:\n            /* \"#utility.yul\":4089:4213   */\n          tag_192\n            /* \"#utility.yul\":4205:4212   */\n          dup8\n            /* \"#utility.yul\":4196:4202   */\n          dup3\n            /* \"#utility.yul\":4185:4194   */\n          dup9\n            /* \"#utility.yul\":4181:4203   */\n          add\n            /* \"#utility.yul\":4089:4213   */\n          tag_140\n          jump\t// in\n        tag_192:\n            /* \"#utility.yul\":4071:4213   */\n          swap3\n          pop\n          swap3\n          pop\n            /* \"#utility.yul\":3866:4223   */\n          pop\n            /* \"#utility.yul\":3138:4230   */\n          swap3\n          swap6\n          swap2\n          swap5\n          pop\n          swap3\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4236:4883   */\n        tag_20:\n            /* \"#utility.yul\":4366:4372   */\n          0x00\n            /* \"#utility.yul\":4374:4380   */\n          dup1\n            /* \"#utility.yul\":4423:4425   */\n          0x20\n            /* \"#utility.yul\":4411:4420   */\n          dup4\n            /* \"#utility.yul\":4402:4409   */\n          dup6\n            /* \"#utility.yul\":4398:4421   */\n          sub\n            /* \"#utility.yul\":4394:4426   */\n          slt\n            /* \"#utility.yul\":4391:4510   */\n          iszero\n          tag_194\n          jumpi\n            /* \"#utility.yul\":4429:4508   */\n          tag_195\n          tag_132\n          jump\t// in\n        tag_195:\n            /* \"#utility.yul\":4391:4510   */\n        tag_194:\n            /* \"#utility.yul\":4577:4578   */\n          0x00\n            /* \"#utility.yul\":4566:4575   */\n          dup4\n            /* \"#utility.yul\":4562:4579   */\n          add\n            /* \"#utility.yul\":4549:4580   */\n          calldataload\n            /* \"#utility.yul\":4607:4625   */\n          0xffffffffffffffff\n            /* \"#utility.yul\":4599:4605   */\n          dup2\n            /* \"#utility.yul\":4596:4626   */\n          gt\n            /* \"#utility.yul\":4593:4710   */\n          iszero\n          tag_196\n          jumpi\n            /* \"#utility.yul\":4629:4708   */\n          tag_197\n          tag_133\n          jump\t// in\n        tag_197:\n            /* \"#utility.yul\":4593:4710   */\n        tag_196:\n            /* \"#utility.yul\":4742:4866   */\n          tag_198\n            /* \"#utility.yul\":4858:4865   */\n          dup6\n            /* \"#utility.yul\":4849:4855   */\n          dup3\n            /* \"#utility.yul\":4838:4847   */\n          dup7\n            /* \"#utility.yul\":4834:4856   */\n          add\n            /* \"#utility.yul\":4742:4866   */\n          tag_140\n          jump\t// in\n        tag_198:\n            /* \"#utility.yul\":4724:4866   */\n          swap3\n          pop\n          swap3\n          pop\n            /* \"#utility.yul\":4520:4876   */\n          pop\n            /* \"#utility.yul\":4236:4883   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":4889:5015   */\n        tag_141:\n            /* \"#utility.yul\":4926:4933   */\n          0x00\n            /* \"#utility.yul\":4966:5008   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":4959:4964   */\n          dup3\n            /* \"#utility.yul\":4955:5009   */\n          and\n            /* \"#utility.yul\":4944:5009   */\n          swap1\n          pop\n            /* \"#utility.yul\":4889:5015   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5021:5117   */\n        tag_142:\n            /* \"#utility.yul\":5058:5065   */\n          0x00\n            /* \"#utility.yul\":5087:5111   */\n          tag_201\n            /* \"#utility.yul\":5105:5110   */\n          dup3\n            /* \"#utility.yul\":5087:5111   */\n          tag_141\n          jump\t// in\n        tag_201:\n            /* \"#utility.yul\":5076:5111   */\n          swap1\n          pop\n            /* \"#utility.yul\":5021:5117   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5123:5245   */\n        tag_143:\n            /* \"#utility.yul\":5196:5220   */\n          tag_203\n            /* \"#utility.yul\":5214:5219   */\n          dup2\n            /* \"#utility.yul\":5196:5220   */\n          tag_142\n          jump\t// in\n        tag_203:\n            /* \"#utility.yul\":5189:5194   */\n          dup2\n            /* \"#utility.yul\":5186:5221   */\n          eq\n            /* \"#utility.yul\":5176:5239   */\n          tag_204\n          jumpi\n            /* \"#utility.yul\":5235:5236   */\n          0x00\n            /* \"#utility.yul\":5232:5233   */\n          dup1\n            /* \"#utility.yul\":5225:5237   */\n          revert\n            /* \"#utility.yul\":5176:5239   */\n        tag_204:\n            /* \"#utility.yul\":5123:5245   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5251:5390   */\n        tag_144:\n            /* \"#utility.yul\":5297:5302   */\n          0x00\n            /* \"#utility.yul\":5335:5341   */\n          dup2\n            /* \"#utility.yul\":5322:5342   */\n          calldataload\n            /* \"#utility.yul\":5313:5342   */\n          swap1\n          pop\n            /* \"#utility.yul\":5351:5384   */\n          tag_206\n            /* \"#utility.yul\":5378:5383   */\n          dup2\n            /* \"#utility.yul\":5351:5384   */\n          tag_143\n          jump\t// in\n        tag_206:\n            /* \"#utility.yul\":5251:5390   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5396:5486   */\n        tag_145:\n            /* \"#utility.yul\":5430:5437   */\n          0x00\n            /* \"#utility.yul\":5473:5478   */\n          dup2\n            /* \"#utility.yul\":5466:5479   */\n          iszero\n            /* \"#utility.yul\":5459:5480   */\n          iszero\n            /* \"#utility.yul\":5448:5480   */\n          swap1\n          pop\n            /* \"#utility.yul\":5396:5486   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5492:5608   */\n        tag_146:\n            /* \"#utility.yul\":5562:5583   */\n          tag_209\n            /* \"#utility.yul\":5577:5582   */\n          dup2\n            /* \"#utility.yul\":5562:5583   */\n          tag_145\n          jump\t// in\n        tag_209:\n            /* \"#utility.yul\":5555:5560   */\n          dup2\n            /* \"#utility.yul\":5552:5584   */\n          eq\n            /* \"#utility.yul\":5542:5602   */\n          tag_210\n          jumpi\n            /* \"#utility.yul\":5598:5599   */\n          0x00\n            /* \"#utility.yul\":5595:5596   */\n          dup1\n            /* \"#utility.yul\":5588:5600   */\n          revert\n            /* \"#utility.yul\":5542:5602   */\n        tag_210:\n            /* \"#utility.yul\":5492:5608   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5614:5747   */\n        tag_147:\n            /* \"#utility.yul\":5657:5662   */\n          0x00\n            /* \"#utility.yul\":5695:5701   */\n          dup2\n            /* \"#utility.yul\":5682:5702   */\n          calldataload\n            /* \"#utility.yul\":5673:5702   */\n          swap1\n          pop\n            /* \"#utility.yul\":5711:5741   */\n          tag_212\n            /* \"#utility.yul\":5735:5740   */\n          dup2\n            /* \"#utility.yul\":5711:5741   */\n          tag_146\n          jump\t// in\n        tag_212:\n            /* \"#utility.yul\":5614:5747   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":5753:6221   */\n        tag_25:\n            /* \"#utility.yul\":5818:5824   */\n          0x00\n            /* \"#utility.yul\":5826:5832   */\n          dup1\n            /* \"#utility.yul\":5875:5877   */\n          0x40\n            /* \"#utility.yul\":5863:5872   */\n          dup4\n            /* \"#utility.yul\":5854:5861   */\n          dup6\n            /* \"#utility.yul\":5850:5873   */\n          sub\n            /* \"#utility.yul\":5846:5878   */\n          slt\n            /* \"#utility.yul\":5843:5962   */\n          iszero\n          tag_214\n          jumpi\n            /* \"#utility.yul\":5881:5960   */\n          tag_215\n          tag_132\n          jump\t// in\n        tag_215:\n            /* \"#utility.yul\":5843:5962   */\n        tag_214:\n            /* \"#utility.yul\":6001:6002   */\n          0x00\n            /* \"#utility.yul\":6026:6079   */\n          tag_216\n            /* \"#utility.yul\":6071:6078   */\n          dup6\n            /* \"#utility.yul\":6062:6068   */\n          dup3\n            /* \"#utility.yul\":6051:6060   */\n          dup7\n            /* \"#utility.yul\":6047:6069   */\n          add\n            /* \"#utility.yul\":6026:6079   */\n          tag_144\n          jump\t// in\n        tag_216:\n            /* \"#utility.yul\":6016:6079   */\n          swap3\n          pop\n            /* \"#utility.yul\":5972:6089   */\n          pop\n            /* \"#utility.yul\":6128:6130   */\n          0x20\n            /* \"#utility.yul\":6154:6204   */\n          tag_217\n            /* \"#utility.yul\":6196:6203   */\n          dup6\n            /* \"#utility.yul\":6187:6193   */\n          dup3\n            /* \"#utility.yul\":6176:6185   */\n          dup7\n            /* \"#utility.yul\":6172:6194   */\n          add\n            /* \"#utility.yul\":6154:6204   */\n          tag_147\n          jump\t// in\n        tag_217:\n            /* \"#utility.yul\":6144:6204   */\n          swap2\n          pop\n            /* \"#utility.yul\":6099:6214   */\n          pop\n            /* \"#utility.yul\":5753:6221   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6227:6407   */\n        tag_36:\n            /* \"#utility.yul\":6275:6352   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":6272:6273   */\n          0x00\n            /* \"#utility.yul\":6265:6353   */\n          mstore\n            /* \"#utility.yul\":6372:6376   */\n          0x32\n            /* \"#utility.yul\":6369:6370   */\n          0x04\n            /* \"#utility.yul\":6362:6377   */\n          mstore\n            /* \"#utility.yul\":6396:6400   */\n          0x24\n            /* \"#utility.yul\":6393:6394   */\n          0x00\n            /* \"#utility.yul\":6386:6401   */\n          revert\n            /* \"#utility.yul\":6413:6531   */\n        tag_148:\n            /* \"#utility.yul\":6500:6524   */\n          tag_220\n            /* \"#utility.yul\":6518:6523   */\n          dup2\n            /* \"#utility.yul\":6500:6524   */\n          tag_142\n          jump\t// in\n        tag_220:\n            /* \"#utility.yul\":6495:6498   */\n          dup3\n            /* \"#utility.yul\":6488:6525   */\n          mstore\n            /* \"#utility.yul\":6413:6531   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6537:6646   */\n        tag_149:\n            /* \"#utility.yul\":6618:6639   */\n          tag_222\n            /* \"#utility.yul\":6633:6638   */\n          dup2\n            /* \"#utility.yul\":6618:6639   */\n          tag_145\n          jump\t// in\n        tag_222:\n            /* \"#utility.yul\":6613:6616   */\n          dup3\n            /* \"#utility.yul\":6606:6640   */\n          mstore\n            /* \"#utility.yul\":6537:6646   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6652:6972   */\n        tag_57:\n            /* \"#utility.yul\":6767:6771   */\n          0x00\n            /* \"#utility.yul\":6805:6807   */\n          0x40\n            /* \"#utility.yul\":6794:6803   */\n          dup3\n            /* \"#utility.yul\":6790:6808   */\n          add\n            /* \"#utility.yul\":6782:6808   */\n          swap1\n          pop\n            /* \"#utility.yul\":6818:6889   */\n          tag_224\n            /* \"#utility.yul\":6886:6887   */\n          0x00\n            /* \"#utility.yul\":6875:6884   */\n          dup4\n            /* \"#utility.yul\":6871:6888   */\n          add\n            /* \"#utility.yul\":6862:6868   */\n          dup6\n            /* \"#utility.yul\":6818:6889   */\n          tag_148\n          jump\t// in\n        tag_224:\n            /* \"#utility.yul\":6899:6965   */\n          tag_225\n            /* \"#utility.yul\":6961:6963   */\n          0x20\n            /* \"#utility.yul\":6950:6959   */\n          dup4\n            /* \"#utility.yul\":6946:6964   */\n          add\n            /* \"#utility.yul\":6937:6943   */\n          dup5\n            /* \"#utility.yul\":6899:6965   */\n          tag_149\n          jump\t// in\n        tag_225:\n            /* \"#utility.yul\":6652:6972   */\n          swap4\n          swap3\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":6978:7188   */\n        tag_59:\n            /* \"#utility.yul\":7065:7069   */\n          0x00\n            /* \"#utility.yul\":7103:7105   */\n          0x20\n            /* \"#utility.yul\":7092:7101   */\n          dup3\n            /* \"#utility.yul\":7088:7106   */\n          add\n            /* \"#utility.yul\":7080:7106   */\n          swap1\n          pop\n            /* \"#utility.yul\":7116:7181   */\n          tag_227\n            /* \"#utility.yul\":7178:7179   */\n          0x00\n            /* \"#utility.yul\":7167:7176   */\n          dup4\n            /* \"#utility.yul\":7163:7180   */\n          add\n            /* \"#utility.yul\":7154:7160   */\n          dup5\n            /* \"#utility.yul\":7116:7181   */\n          tag_149\n          jump\t// in\n        tag_227:\n            /* \"#utility.yul\":6978:7188   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":7194:7374   */\n        tag_63:\n            /* \"#utility.yul\":7242:7319   */\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"#utility.yul\":7239:7240   */\n          0x00\n            /* \"#utility.yul\":7232:7320   */\n          mstore\n            /* \"#utility.yul\":7339:7343   */\n          0x21\n            /* \"#utility.yul\":7336:7337   */\n          0x04\n            /* \"#utility.yul\":7329:7344   */\n          mstore\n            /* \"#utility.yul\":7363:7367   */\n          0x24\n            /* \"#utility.yul\":7360:7361   */\n          0x00\n            /* \"#utility.yul\":7353:7368   */\n          revert\n            /* \"#utility.yul\":7380:7499   */\n        tag_150:\n            /* \"#utility.yul\":7473:7474   */\n          0x04\n            /* \"#utility.yul\":7466:7471   */\n          dup2\n            /* \"#utility.yul\":7463:7475   */\n          lt\n            /* \"#utility.yul\":7453:7493   */\n          tag_230\n          jumpi\n            /* \"#utility.yul\":7489:7490   */\n          0x00\n            /* \"#utility.yul\":7486:7487   */\n          dup1\n            /* \"#utility.yul\":7479:7491   */\n          revert\n            /* \"#utility.yul\":7453:7493   */\n        tag_230:\n            /* \"#utility.yul\":7380:7499   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":7505:7684   */\n        tag_151:\n            /* \"#utility.yul\":7571:7576   */\n          0x00\n            /* \"#utility.yul\":7609:7615   */\n          dup2\n            /* \"#utility.yul\":7596:7616   */\n          calldataload\n            /* \"#utility.yul\":7587:7616   */\n          swap1\n          pop\n            /* \"#utility.yul\":7625:7678   */\n          tag_232\n            /* \"#utility.yul\":7672:7677   */\n          dup2\n            /* \"#utility.yul\":7625:7678   */\n          tag_150\n          jump\t// in\n        tag_232:\n            /* \"#utility.yul\":7505:7684   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":7690:8059   */\n        tag_65:\n            /* \"#utility.yul\":7769:7775   */\n          0x00\n            /* \"#utility.yul\":7818:7820   */\n          0x20\n            /* \"#utility.yul\":7806:7815   */\n          dup3\n            /* \"#utility.yul\":7797:7804   */\n          dup5\n            /* \"#utility.yul\":7793:7816   */\n          sub\n            /* \"#utility.yul\":7789:7821   */\n          slt\n            /* \"#utility.yul\":7786:7905   */\n          iszero\n          tag_234\n          jumpi\n            /* \"#utility.yul\":7824:7903   */\n          tag_235\n          tag_132\n          jump\t// in\n        tag_235:\n            /* \"#utility.yul\":7786:7905   */\n        tag_234:\n            /* \"#utility.yul\":7944:7945   */\n          0x00\n            /* \"#utility.yul\":7969:8042   */\n          tag_236\n            /* \"#utility.yul\":8034:8041   */\n          dup5\n            /* \"#utility.yul\":8025:8031   */\n          dup3\n            /* \"#utility.yul\":8014:8023   */\n          dup6\n            /* \"#utility.yul\":8010:8032   */\n          add\n            /* \"#utility.yul\":7969:8042   */\n          tag_151\n          jump\t// in\n        tag_236:\n            /* \"#utility.yul\":7959:8042   */\n          swap2\n          pop\n            /* \"#utility.yul\":7915:8052   */\n          pop\n            /* \"#utility.yul\":7690:8059   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":8065:8394   */\n        tag_71:\n            /* \"#utility.yul\":8124:8130   */\n          0x00\n            /* \"#utility.yul\":8173:8175   */\n          0x20\n            /* \"#utility.yul\":8161:8170   */\n          dup3\n            /* \"#utility.yul\":8152:8159   */\n          dup5\n            /* \"#utility.yul\":8148:8171   */\n          sub\n            /* \"#utility.yul\":8144:8176   */\n          slt\n            /* \"#utility.yul\":8141:8260   */\n          iszero\n          tag_238\n          jumpi\n            /* \"#utility.yul\":8179:8258   */\n          tag_239\n          tag_132\n          jump\t// in\n        tag_239:\n            /* \"#utility.yul\":8141:8260   */\n        tag_238:\n            /* \"#utility.yul\":8299:8300   */\n          0x00\n            /* \"#utility.yul\":8324:8377   */\n          tag_240\n            /* \"#utility.yul\":8369:8376   */\n          dup5\n            /* \"#utility.yul\":8360:8366   */\n          dup3\n            /* \"#utility.yul\":8349:8358   */\n          dup6\n            /* \"#utility.yul\":8345:8367   */\n          add\n            /* \"#utility.yul\":8324:8377   */\n          tag_144\n          jump\t// in\n        tag_240:\n            /* \"#utility.yul\":8314:8377   */\n          swap2\n          pop\n            /* \"#utility.yul\":8270:8387   */\n          pop\n            /* \"#utility.yul\":8065:8394   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n\n        auxdata: 0xa26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033\n    }\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_333": {
									"entryPoint": null,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b50604051806020016200002490620000a4565b6020820181038252601f19601f82011660405250805190602001206080818152505060008060001b6040516200005a90620000a4565b8190604051809103906000f59050801580156200007b573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff163f60a0818152505050620000b2565b6110ae8062002f5483390190565b60805160a051612e60620000f46000396000818161047601528181610ee9015261104f01526000818161045301528181610e9a01526110000152612e606000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636d4354211161008c5780637b37e561116100665780637b37e561146102835780638b9e028b1461029f578063906c87cc146102cf57806393790f44146102ff576100ea565b80636d435421146102065780636e9bfd9f14610222578063794593bc14610253576100ea565b806314afd79e116100c857806314afd79e1461015a57806333bc85721461018a5780634e3f9580146101ba57806351710e45146101ea576100ea565b8063027cc764146100ef5780630a96ad391461011f57806313ad9cab1461013e575b600080fd5b610109600480360381019061010491906117b0565b61032f565b60405161011691906117ff565b60405180910390f35b61012761044e565b604051610135929190611833565b60405180910390f35b61015860048036038101906101539190611894565b61049b565b005b610174600480360381019061016f91906118e7565b610825565b60405161018191906117ff565b60405180910390f35b6101a4600480360381019061019f9190611914565b610899565b6040516101b19190611963565b60405180910390f35b6101d460048036038101906101cf91906118e7565b61092f565b6040516101e1919061198d565b60405180910390f35b61020460048036038101906101ff91906118e7565b610986565b005b610220600480360381019061021b9190611914565b610c7a565b005b61023c600480360381019061023791906119d4565b610e8e565b60405161024a929190611a01565b60405180910390f35b61026d60048036038101906102689190611a2a565b610f28565b60405161027a91906117ff565b60405180910390f35b61029d600480360381019061029891906118e7565b611237565b005b6102b960048036038101906102b491906118e7565b6113da565b6040516102c69190611b28565b60405180910390f35b6102e960048036038101906102e491906118e7565b6114b2565b6040516102f691906117ff565b60405180910390f35b610319600480360381019061031491906118e7565b611526565b6040516103269190611b4a565b60405180910390f35b600061033a836115ad565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054905090508083106103c757836040517f6ceb340b0000000000000000000000000000000000000000000000000000000081526004016103be91906117ff565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301838154811061041a57610419611b65565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505092915050565b6000807f000000000000000000000000000000000000000000000000000000000000000091507f000000000000000000000000000000000000000000000000000000000000000090509091565b6104a48361162d565b8273ffffffffffffffffffffffffffffffffffffffff1663c4e8fcb583836040518363ffffffff1660e01b81526004016104df929190611a01565b600060405180830381600087803b1580156104f957600080fd5b505af115801561050d573d6000803e3d6000fd5b5050505060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082141590508380156105ac575080155b156106685782600301859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600301805490508360040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061081d565b831580156106735750805b1561081c5760006001830390506000600185600301805490506106969190611bc3565b905081811461078b5760008560030182815481106106b7576106b6611b65565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808660030184815481106106fb576106fa611b65565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848660040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460030180548061079f5761079e611bf7565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558460040160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905550505b5b505050505050565b6000610830826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006108a4836115ad565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b600061093a826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805490509050919050565b61098f816115ad565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6057806040517f88c3a115000000000000000000000000000000000000000000000000000000008152600401610a5791906117ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a260008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec60405160405180910390a4336000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c838261162d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf457816040517fa388d263000000000000000000000000000000000000000000000000000000008152600401610ceb91906117ff565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dc75781816040517fcbc080ca000000000000000000000000000000000000000000000000000000008152600401610dbe929190611c26565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060ff60f81b30847f0000000000000000000000000000000000000000000000000000000000000000604051602001610ecc9493929190611d05565b6040516020818303038152906040528051906020012060001c91507f00000000000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff163f149050915091565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f8f576040517f99faaa0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168360601c73ffffffffffffffffffffffffffffffffffffffff1614610ff7576040517fcb6e534400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff60f81b30847f00000000000000000000000000000000000000000000000000000000000000006040516020016110329493929190611d05565b6040516020818303038152906040528051906020012060001c90507f00000000000000000000000000000000000000000000000000000000000000008173ffffffffffffffffffffffffffffffffffffffff163f036110c857806040517f6328ccb20000000000000000000000000000000000000000000000000000000081526004016110bf91906117ff565b60405180910390fd5b826040516110d59061170a565b8190604051809103906000f59050801580156110f5573d6000803e3d6000fd5b505060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508381600001819055507f4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d1582856040516111b6929190611d53565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec60405160405180910390a45092915050565b6112408161162d565b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361131257806040517f6b01361600000000000000000000000000000000000000000000000000000000815260040161130991906117ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a260008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606113e5826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054806020026020016040519081016040528092919081815260200182805480156114a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161145c575b50505050509050919050565b60006114bd826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000801b81036115a8576040517f4ca8209000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000801b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540361162a576040517f4ca8209000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b611636816115ad565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461170757806040517fd4ed9a170000000000000000000000000000000000000000000000000000000081526004016116fe91906117ff565b60405180910390fd5b50565b6110ae80611d7d83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117478261171c565b9050919050565b6117578161173c565b811461176257600080fd5b50565b6000813590506117748161174e565b92915050565b6000819050919050565b61178d8161177a565b811461179857600080fd5b50565b6000813590506117aa81611784565b92915050565b600080604083850312156117c7576117c6611717565b5b60006117d585828601611765565b92505060206117e68582860161179b565b9150509250929050565b6117f98161173c565b82525050565b600060208201905061181460008301846117f0565b92915050565b6000819050919050565b61182d8161181a565b82525050565b60006040820190506118486000830185611824565b6118556020830184611824565b9392505050565b60008115159050919050565b6118718161185c565b811461187c57600080fd5b50565b60008135905061188e81611868565b92915050565b6000806000606084860312156118ad576118ac611717565b5b60006118bb86828701611765565b93505060206118cc86828701611765565b92505060406118dd8682870161187f565b9150509250925092565b6000602082840312156118fd576118fc611717565b5b600061190b84828501611765565b91505092915050565b6000806040838503121561192b5761192a611717565b5b600061193985828601611765565b925050602061194a85828601611765565b9150509250929050565b61195d8161185c565b82525050565b60006020820190506119786000830184611954565b92915050565b6119878161177a565b82525050565b60006020820190506119a2600083018461197e565b92915050565b6119b18161181a565b81146119bc57600080fd5b50565b6000813590506119ce816119a8565b92915050565b6000602082840312156119ea576119e9611717565b5b60006119f8848285016119bf565b91505092915050565b6000604082019050611a1660008301856117f0565b611a236020830184611954565b9392505050565b60008060408385031215611a4157611a40611717565b5b6000611a4f858286016119bf565b9250506020611a6085828601611765565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a9f8161173c565b82525050565b6000611ab18383611a96565b60208301905092915050565b6000602082019050919050565b6000611ad582611a6a565b611adf8185611a75565b9350611aea83611a86565b8060005b83811015611b1b578151611b028882611aa5565b9750611b0d83611abd565b925050600181019050611aee565b5085935050505092915050565b60006020820190508181036000830152611b428184611aca565b905092915050565b6000602082019050611b5f6000830184611824565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bce8261177a565b9150611bd98361177a565b9250828203905081811115611bf157611bf0611b94565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000604082019050611c3b60008301856117f0565b611c4860208301846117f0565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b611c96611c9182611c4f565b611c7b565b82525050565b60008160601b9050919050565b6000611cb482611c9c565b9050919050565b6000611cc682611ca9565b9050919050565b611cde611cd98261173c565b611cbb565b82525050565b6000819050919050565b611cff611cfa8261181a565b611ce4565b82525050565b6000611d118287611c85565b600182019150611d218286611ccd565b601482019150611d318285611cee565b602082019150611d418284611cee565b60208201915081905095945050505050565b6000604082019050611d6860008301856117f0565b611d756020830184611824565b939250505056fe60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161104e6100606000396000610290015261104e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d92146100b1578063c4e8fcb5146100e1575b600080fd5b61006b60048036038101906100669190610c3c565b6100fd565b6040516100789190610cc4565b60405180910390f35b61009b60048036038101906100969190610d35565b610191565b6040516100a89190610cc4565b60405180910390f35b6100cb60048036038101906100c69190610db6565b610231565b6040516100d89190610cc4565b60405180910390f35b6100fb60048036038101906100f69190610e99565b61028e565b005b6000336000526000602052604060002054610140577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600083839050905060005b8181101561017f5761017485858381811061016957610168610ed9565b5b905060c00201610450565b80600101905061014b565b50634ce34aa260e01b91505092915050565b60003360005260006020526040600020546101d4577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600085859050905060005b81811015610213576102088787838181106101fd576101fc610ed9565b5b905060c00201610450565b8060010190506101df565b5061021e8484610664565b63899e104c60e01b915050949350505050565b6000336000526000602052604060002054610274577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b61027e8383610664565b638df25d9260e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036103a85781816040517f924e341e00000000000000000000000000000000000000000000000000000000815260040161039f929190610f26565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2826040516104449190610f4f565b60405180910390a25050565b6001600381111561046457610463610f6a565b5b8160000160208101906104779190610fbe565b600381111561048957610488610f6a565b5b036104d9576104d48160200160208101906104a49190610feb565b8260400160208101906104b79190610feb565b8360600160208101906104ca9190610feb565b8460a0013561080c565b610661565b600260038111156104ed576104ec610f6a565b5b8160000160208101906105009190610fbe565b600381111561051257610511610f6a565b5b036105a05760018160a0013514610555576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059b81602001602081019061056b9190610feb565b82604001602081019061057e9190610feb565b8360600160208101906105919190610feb565b846080013561097f565b610660565b6003808111156105b3576105b2610f6a565b5b8160000160208101906105c69190610fbe565b60038111156105d8576105d7610f6a565b5b0361062d576106288160200160208101906105f39190610feb565b8260400160208101906106069190610feb565b8360600160208101906106199190610feb565b84608001358560a00135610a93565b61065f565b6040517f7932f1fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50565b8082807f2eb2c2d60000000000000000000000000000000000000000000000000000000060205260005b838110156107ff57823582018035803b6106d0577f5f15d672000000000000000000000000000000000000000000000000000000006000528060045260246000fd5b60a08201356020810260c0018060808501351460a06060860135141681850135831416158015610724577feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fd5b602088019750608060208601602437604083026040018060a00160a45260008160c401528060c4018160a0880160c43760008082602060008a5af1806107ec573d156107b1576020601f3d010460208304816003028183111561079857610200828302848502030460038385030201810190505b5a6020820110156107ad573d6000803e3d6000fd5b5050505b7fafc445e2000000000000000000000000000000000000000000000000000000006000528660045260c0606452608451602001608452816000fd5b505050505050505060018101905061068e565b5060806040525050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661096d5780873b15151661096c578061093e5781610904573d156108c5576020601f3d01046020840481600302818311156108ac57610200828302848502030460038385030201810190505b5a6020820110156108c1573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005286600452856024528460445260006064528360845260a46000fd5b7f98891923000000000000000000000000000000000000000000000000000000006000528660045285602452846044528360645260846000fd5b7f5f15d672000000000000000000000000000000000000000000000000000000006000528660045260246000fd5b5b82604052600060605250505050505050565b833b6109b3577f5f15d672000000000000000000000000000000000000000000000000000000006000528360045260246000fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000006000528360045282602452816044526000806064600080895af180610a82573d15610a43576020601f3d0104602083048160030281831115610a2a57610200828302848502030460038385030201810190505b5a602082011015610a3f573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005285600452846024528360445282606452600160845260a46000fd5b816040526000606052505050505050565b843b610ac7577f5f15d672000000000000000000000000000000000000000000000000000000006000528460045260246000fd5b60405160805160a05160c0517ff242432a000000000000000000000000000000000000000000000000000000006000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610bac573d15610b6e576020601f3d0104602086048160030281831115610b5557610200828302848502030460038385030201810190505b5a602082011015610b6a573d6000803e3d6000fd5b5050505b7ff486bc8700000000000000000000000000000000000000000000000000000000600052896004528860245287604452866064528560845260a46000fd5b836080528260a0528160c05284604052600060605250505050505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bfc57610bfb610bd7565b5b8235905067ffffffffffffffff811115610c1957610c18610bdc565b5b6020830191508360c0820283011115610c3557610c34610be1565b5b9250929050565b60008060208385031215610c5357610c52610bcd565b5b600083013567ffffffffffffffff811115610c7157610c70610bd2565b5b610c7d85828601610be6565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cbe81610c89565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b60008083601f840112610cf557610cf4610bd7565b5b8235905067ffffffffffffffff811115610d1257610d11610bdc565b5b602083019150836020820283011115610d2e57610d2d610be1565b5b9250929050565b60008060008060408587031215610d4f57610d4e610bcd565b5b600085013567ffffffffffffffff811115610d6d57610d6c610bd2565b5b610d7987828801610be6565b9450945050602085013567ffffffffffffffff811115610d9c57610d9b610bd2565b5b610da887828801610cdf565b925092505092959194509250565b60008060208385031215610dcd57610dcc610bcd565b5b600083013567ffffffffffffffff811115610deb57610dea610bd2565b5b610df785828601610cdf565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008115159050919050565b610e7681610e61565b8114610e8157600080fd5b50565b600081359050610e9381610e6d565b92915050565b60008060408385031215610eb057610eaf610bcd565b5b6000610ebe85828601610e4c565b9250506020610ecf85828601610e84565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610f1181610e23565b82525050565b610f2081610e61565b82525050565b6000604082019050610f3b6000830185610f08565b610f486020830184610f17565b9392505050565b6000602082019050610f646000830184610f17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa657600080fd5b50565b600081359050610fb881610f99565b92915050565b600060208284031215610fd457610fd3610bcd565b5b6000610fe284828501610fa9565b91505092915050565b60006020828403121561100157611000610bcd565b5b600061100f84828501610e4c565b9150509291505056fea26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033a2646970667358221220761bc6711f0af030e64e4344395b1ef19179448b9d129d2b16bfafae043b55cd64736f6c6343000811003360a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161104e6100606000396000610290015261104e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d92146100b1578063c4e8fcb5146100e1575b600080fd5b61006b60048036038101906100669190610c3c565b6100fd565b6040516100789190610cc4565b60405180910390f35b61009b60048036038101906100969190610d35565b610191565b6040516100a89190610cc4565b60405180910390f35b6100cb60048036038101906100c69190610db6565b610231565b6040516100d89190610cc4565b60405180910390f35b6100fb60048036038101906100f69190610e99565b61028e565b005b6000336000526000602052604060002054610140577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600083839050905060005b8181101561017f5761017485858381811061016957610168610ed9565b5b905060c00201610450565b80600101905061014b565b50634ce34aa260e01b91505092915050565b60003360005260006020526040600020546101d4577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600085859050905060005b81811015610213576102088787838181106101fd576101fc610ed9565b5b905060c00201610450565b8060010190506101df565b5061021e8484610664565b63899e104c60e01b915050949350505050565b6000336000526000602052604060002054610274577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b61027e8383610664565b638df25d9260e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036103a85781816040517f924e341e00000000000000000000000000000000000000000000000000000000815260040161039f929190610f26565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2826040516104449190610f4f565b60405180910390a25050565b6001600381111561046457610463610f6a565b5b8160000160208101906104779190610fbe565b600381111561048957610488610f6a565b5b036104d9576104d48160200160208101906104a49190610feb565b8260400160208101906104b79190610feb565b8360600160208101906104ca9190610feb565b8460a0013561080c565b610661565b600260038111156104ed576104ec610f6a565b5b8160000160208101906105009190610fbe565b600381111561051257610511610f6a565b5b036105a05760018160a0013514610555576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059b81602001602081019061056b9190610feb565b82604001602081019061057e9190610feb565b8360600160208101906105919190610feb565b846080013561097f565b610660565b6003808111156105b3576105b2610f6a565b5b8160000160208101906105c69190610fbe565b60038111156105d8576105d7610f6a565b5b0361062d576106288160200160208101906105f39190610feb565b8260400160208101906106069190610feb565b8360600160208101906106199190610feb565b84608001358560a00135610a93565b61065f565b6040517f7932f1fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50565b8082807f2eb2c2d60000000000000000000000000000000000000000000000000000000060205260005b838110156107ff57823582018035803b6106d0577f5f15d672000000000000000000000000000000000000000000000000000000006000528060045260246000fd5b60a08201356020810260c0018060808501351460a06060860135141681850135831416158015610724577feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fd5b602088019750608060208601602437604083026040018060a00160a45260008160c401528060c4018160a0880160c43760008082602060008a5af1806107ec573d156107b1576020601f3d010460208304816003028183111561079857610200828302848502030460038385030201810190505b5a6020820110156107ad573d6000803e3d6000fd5b5050505b7fafc445e2000000000000000000000000000000000000000000000000000000006000528660045260c0606452608451602001608452816000fd5b505050505050505060018101905061068e565b5060806040525050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661096d5780873b15151661096c578061093e5781610904573d156108c5576020601f3d01046020840481600302818311156108ac57610200828302848502030460038385030201810190505b5a6020820110156108c1573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005286600452856024528460445260006064528360845260a46000fd5b7f98891923000000000000000000000000000000000000000000000000000000006000528660045285602452846044528360645260846000fd5b7f5f15d672000000000000000000000000000000000000000000000000000000006000528660045260246000fd5b5b82604052600060605250505050505050565b833b6109b3577f5f15d672000000000000000000000000000000000000000000000000000000006000528360045260246000fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000006000528360045282602452816044526000806064600080895af180610a82573d15610a43576020601f3d0104602083048160030281831115610a2a57610200828302848502030460038385030201810190505b5a602082011015610a3f573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005285600452846024528360445282606452600160845260a46000fd5b816040526000606052505050505050565b843b610ac7577f5f15d672000000000000000000000000000000000000000000000000000000006000528460045260246000fd5b60405160805160a05160c0517ff242432a000000000000000000000000000000000000000000000000000000006000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610bac573d15610b6e576020601f3d0104602086048160030281831115610b5557610200828302848502030460038385030201810190505b5a602082011015610b6a573d6000803e3d6000fd5b5050505b7ff486bc8700000000000000000000000000000000000000000000000000000000600052896004528860245287604452866064528560845260a46000fd5b836080528260a0528160c05284604052600060605250505050505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bfc57610bfb610bd7565b5b8235905067ffffffffffffffff811115610c1957610c18610bdc565b5b6020830191508360c0820283011115610c3557610c34610be1565b5b9250929050565b60008060208385031215610c5357610c52610bcd565b5b600083013567ffffffffffffffff811115610c7157610c70610bd2565b5b610c7d85828601610be6565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cbe81610c89565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b60008083601f840112610cf557610cf4610bd7565b5b8235905067ffffffffffffffff811115610d1257610d11610bdc565b5b602083019150836020820283011115610d2e57610d2d610be1565b5b9250929050565b60008060008060408587031215610d4f57610d4e610bcd565b5b600085013567ffffffffffffffff811115610d6d57610d6c610bd2565b5b610d7987828801610be6565b9450945050602085013567ffffffffffffffff811115610d9c57610d9b610bd2565b5b610da887828801610cdf565b925092505092959194509250565b60008060208385031215610dcd57610dcc610bcd565b5b600083013567ffffffffffffffff811115610deb57610dea610bd2565b5b610df785828601610cdf565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008115159050919050565b610e7681610e61565b8114610e8157600080fd5b50565b600081359050610e9381610e6d565b92915050565b60008060408385031215610eb057610eaf610bcd565b5b6000610ebe85828601610e4c565b9250506020610ecf85828601610e84565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610f1181610e23565b82525050565b610f2081610e61565b82525050565b6000604082019050610f3b6000830185610f08565b610f486020830184610f17565b9392505050565b6000602082019050610f646000830184610f17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa657600080fd5b50565b600081359050610fb881610f99565b92915050565b600060208284031215610fd457610fd3610bcd565b5b6000610fe284828501610fa9565b91505092915050565b60006020828403121561100157611000610bcd565b5b600061100f84828501610e4c565b9150509291505056fea26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x24 SWAP1 PUSH3 0xA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 PUSH1 0x0 SHL PUSH1 0x40 MLOAD PUSH3 0x5A SWAP1 PUSH3 0xA4 JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODEHASH PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP PUSH3 0xB2 JUMP JUMPDEST PUSH2 0x10AE DUP1 PUSH3 0x2F54 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2E60 PUSH3 0xF4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x476 ADD MSTORE DUP2 DUP2 PUSH2 0xEE9 ADD MSTORE PUSH2 0x104F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x453 ADD MSTORE DUP2 DUP2 PUSH2 0xE9A ADD MSTORE PUSH2 0x1000 ADD MSTORE PUSH2 0x2E60 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D435421 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x7B37E561 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7B37E561 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x8B9E028B EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x906C87CC EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x93790F44 EQ PUSH2 0x2FF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6D435421 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6E9BFD9F EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x794593BC EQ PUSH2 0x253 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x14AFD79E GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x14AFD79E EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x33BC8572 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E3F9580 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0x1EA JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x27CC764 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xA96AD39 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x13AD9CAB EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP3 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP3 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP4 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP1 DUP4 LT PUSH2 0x3C7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6CEB340B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x41A JUMPI PUSH2 0x419 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP2 POP PUSH32 0x0 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x4A4 DUP4 PUSH2 0x162D JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4E8FCB5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP3 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ ISZERO SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x5AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x668 JUMPI DUP3 PUSH1 0x3 ADD DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x81D JUMP JUMPDEST DUP4 ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP6 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP7 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH1 0x4 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP5 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 DUP4 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93A DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP2 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA60 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x88C3A11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC83 DUP3 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA388D26300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0xCBC080CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF PUSH1 0xF8 SHL ADDRESS DUP5 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xECC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH32 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODEHASH EQ SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x99FAAA0400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x60 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB6E534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL ADDRESS DUP5 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1032 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH32 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODEHASH SUB PUSH2 0x10C8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x6328CCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x10D5 SWAP1 PUSH2 0x170A JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x4397AF6128D529B8AE0442F99DB1296D5136062597A15BBC61C1B2A6431A7D15 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x11B6 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1240 DUP2 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1312 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x6B01361600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1309 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E5 DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x145C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BD DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1707 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD4ED9A1700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10AE DUP1 PUSH2 0x1D7D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP2 EQ PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1774 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178D DUP2 PUSH2 0x177A JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AA DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C6 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E6 DUP6 DUP3 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1814 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x181A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x1855 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1871 DUP2 PUSH2 0x185C JUMP JUMPDEST DUP2 EQ PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x1868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18DD DUP7 DUP3 DUP8 ADD PUSH2 0x187F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190B DUP5 DUP3 DUP6 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH2 0x192A PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1939 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194A DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x195D DUP2 PUSH2 0x185C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1987 DUP2 PUSH2 0x177A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH2 0x181A JUMP JUMPDEST DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19CE DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F8 DUP5 DUP3 DUP6 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1A23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB1 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD5 DUP3 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x1ADF DUP2 DUP6 PUSH2 0x1A75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AEA DUP4 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1B JUMPI DUP2 MLOAD PUSH2 0x1B02 DUP9 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B0D DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 DUP5 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BCE DUP3 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1C48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x1C91 DUP3 PUSH2 0x1C4F JUMP JUMPDEST PUSH2 0x1C7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB4 DUP3 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP3 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE PUSH2 0x1CD9 DUP3 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x1CBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFF PUSH2 0x1CFA DUP3 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x1CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 DUP8 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x1D21 DUP3 DUP7 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1D31 DUP3 DUP6 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1D41 DUP3 DUP5 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D68 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x104E PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x290 ADD MSTORE PUSH2 0x104E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CE34AA2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x899E104C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC4E8FCB5 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x140 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F JUMPI PUSH2 0x174 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14B JUMP JUMPDEST POP PUSH4 0x4CE34AA2 PUSH1 0xE0 SHL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D4 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH2 0x208 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST POP PUSH2 0x21E DUP5 DUP5 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x899E104C PUSH1 0xE0 SHL SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x274 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x8DF25D92 PUSH1 0xE0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x3A8 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP3 SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4D9 JUMPI PUSH2 0x4D4 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x80C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x5A0 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD CALLDATALOAD EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x62D JUMPI PUSH2 0x628 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FF JUMPI DUP3 CALLDATALOAD DUP3 ADD DUP1 CALLDATALOAD DUP1 EXTCODESIZE PUSH2 0x6D0 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP2 MUL PUSH1 0xC0 ADD DUP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD EQ PUSH1 0xA0 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND DUP2 DUP6 ADD CALLDATALOAD DUP4 EQ AND ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x80 PUSH1 0x20 DUP7 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x40 DUP4 MUL PUSH1 0x40 ADD DUP1 PUSH1 0xA0 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 DUP2 PUSH1 0xC4 ADD MSTORE DUP1 PUSH1 0xC4 ADD DUP2 PUSH1 0xA0 DUP9 ADD PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 PUSH1 0x0 DUP11 GAS CALL DUP1 PUSH2 0x7EC JUMPI RETURNDATASIZE ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x7AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0xC0 PUSH1 0x64 MSTORE PUSH1 0x84 MLOAD PUSH1 0x20 ADD PUSH1 0x84 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x80 PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND PUSH2 0x96D JUMPI DUP1 DUP8 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x96C JUMPI DUP1 PUSH2 0x93E JUMPI DUP2 PUSH2 0x904 JUMPI RETURNDATASIZE ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP5 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x0 PUSH1 0x64 MSTORE DUP4 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0x84 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x9B3 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 PUSH2 0xA82 JUMPI RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP6 PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE DUP4 PUSH1 0x44 MSTORE DUP3 PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xAC7 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP5 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP8 PUSH1 0x4 MSTORE DUP7 PUSH1 0x24 MSTORE DUP6 PUSH1 0x44 MSTORE DUP5 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE PUSH1 0x0 PUSH1 0xA4 MSTORE PUSH1 0x0 DUP1 PUSH1 0xC4 PUSH1 0x0 DUP1 DUP14 GAS CALL DUP1 PUSH2 0xBAC JUMPI RETURNDATASIZE ISZERO PUSH2 0xB6E JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP7 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP10 PUSH1 0x4 MSTORE DUP9 PUSH1 0x24 MSTORE DUP8 PUSH1 0x44 MSTORE DUP7 PUSH1 0x64 MSTORE DUP6 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE DUP2 PUSH1 0xC0 MSTORE DUP5 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xC0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D DUP6 DUP3 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBE DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xD79 DUP8 DUP3 DUP9 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP8 DUP3 DUP9 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5B DUP2 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBE DUP6 DUP3 DUP7 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP5 DUP3 DUP6 ADD PUSH2 0xFA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100F DUP5 DUP3 DUP6 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD CALLDATASIZE SWAP3 0x4F 0x4D 0xBB INVALID PUSH26 0x561A1FC04E45947433C8FCBA59787FFD458BB59436AA02226473 PUSH16 0x6C63430008110033A264697066735822 SLT KECCAK256 PUSH23 0x1BC6711F0AF030E64E4344395B1EF19179448B9D129D2B AND 0xBF 0xAF 0xAE DIV EXTCODESIZE SSTORE 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x104E PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x290 ADD MSTORE PUSH2 0x104E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CE34AA2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x899E104C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC4E8FCB5 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x140 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F JUMPI PUSH2 0x174 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14B JUMP JUMPDEST POP PUSH4 0x4CE34AA2 PUSH1 0xE0 SHL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D4 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH2 0x208 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST POP PUSH2 0x21E DUP5 DUP5 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x899E104C PUSH1 0xE0 SHL SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x274 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x8DF25D92 PUSH1 0xE0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x3A8 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP3 SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4D9 JUMPI PUSH2 0x4D4 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x80C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x5A0 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD CALLDATALOAD EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x62D JUMPI PUSH2 0x628 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FF JUMPI DUP3 CALLDATALOAD DUP3 ADD DUP1 CALLDATALOAD DUP1 EXTCODESIZE PUSH2 0x6D0 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP2 MUL PUSH1 0xC0 ADD DUP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD EQ PUSH1 0xA0 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND DUP2 DUP6 ADD CALLDATALOAD DUP4 EQ AND ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x80 PUSH1 0x20 DUP7 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x40 DUP4 MUL PUSH1 0x40 ADD DUP1 PUSH1 0xA0 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 DUP2 PUSH1 0xC4 ADD MSTORE DUP1 PUSH1 0xC4 ADD DUP2 PUSH1 0xA0 DUP9 ADD PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 PUSH1 0x0 DUP11 GAS CALL DUP1 PUSH2 0x7EC JUMPI RETURNDATASIZE ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x7AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0xC0 PUSH1 0x64 MSTORE PUSH1 0x84 MLOAD PUSH1 0x20 ADD PUSH1 0x84 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x80 PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND PUSH2 0x96D JUMPI DUP1 DUP8 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x96C JUMPI DUP1 PUSH2 0x93E JUMPI DUP2 PUSH2 0x904 JUMPI RETURNDATASIZE ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP5 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x0 PUSH1 0x64 MSTORE DUP4 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0x84 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x9B3 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 PUSH2 0xA82 JUMPI RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP6 PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE DUP4 PUSH1 0x44 MSTORE DUP3 PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xAC7 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP5 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP8 PUSH1 0x4 MSTORE DUP7 PUSH1 0x24 MSTORE DUP6 PUSH1 0x44 MSTORE DUP5 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE PUSH1 0x0 PUSH1 0xA4 MSTORE PUSH1 0x0 DUP1 PUSH1 0xC4 PUSH1 0x0 DUP1 DUP14 GAS CALL DUP1 PUSH2 0xBAC JUMPI RETURNDATASIZE ISZERO PUSH2 0xB6E JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP7 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP10 PUSH1 0x4 MSTORE DUP9 PUSH1 0x24 MSTORE DUP8 PUSH1 0x44 MSTORE DUP7 PUSH1 0x64 MSTORE DUP6 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE DUP2 PUSH1 0xC0 MSTORE DUP5 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xC0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D DUP6 DUP3 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBE DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xD79 DUP8 DUP3 DUP9 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP8 DUP3 DUP9 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5B DUP2 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBE DUP6 DUP3 DUP7 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP5 DUP3 DUP6 ADD PUSH2 0xFA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100F DUP5 DUP3 DUP6 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD CALLDATASIZE SWAP3 0x4F 0x4D 0xBB INVALID PUSH26 0x561A1FC04E45947433C8FCBA59787FFD458BB59436AA02226473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "556:19422:1:-:0;;;1121:448;;;;;;;;;;1262:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1252:37;;;;;;1222:67;;;;;;1360:19;1409:1;1401:10;;1382:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:55;;1541:11;1533:29;;;1504:58;;;;;;1135:434;556:19422;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_assertCallerIsConduitOwner_1014": {
									"entryPoint": 5677,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_assertConduitExists_1035": {
									"entryPoint": 5549,
									"id": 1035,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_742": {
									"entryPoint": 2438,
									"id": 742,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cancelOwnershipTransfer_682": {
									"entryPoint": 4663,
									"id": 682,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createConduit_451": {
									"entryPoint": 3880,
									"id": 451,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getChannelStatus_886": {
									"entryPoint": 2201,
									"id": 886,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getChannel_950": {
									"entryPoint": 815,
									"id": 950,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getChannels_972": {
									"entryPoint": 5082,
									"id": 972,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getConduitCodeHashes_990": {
									"entryPoint": 1102,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getConduit_838": {
									"entryPoint": 3726,
									"id": 838,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getKey_791": {
									"entryPoint": 5414,
									"id": 791,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPotentialOwner_859": {
									"entryPoint": 5298,
									"id": 859,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalChannels_908": {
									"entryPoint": 2351,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_763": {
									"entryPoint": 2085,
									"id": 763,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_638": {
									"entryPoint": 3194,
									"id": 638,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateChannel_588": {
									"entryPoint": 1179,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_bool": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 6821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7429,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes1": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11929:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:10",
														"type": ""
													}
												],
												"src": "1677:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:10",
														"type": ""
													}
												],
												"src": "1801:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2074:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2084:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2095:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2084:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2056:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2066:7:10",
														"type": ""
													}
												],
												"src": "2029:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2177:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2194:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2217:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2199:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2187:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2187:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2165:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2172:3:10",
														"type": ""
													}
												],
												"src": "2112:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2372:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2372:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2452:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2476:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2461:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2461:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2408:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2408:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2408:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2533:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2546:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2557:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2542:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2489:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2338:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2346:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2357:4:10",
														"type": ""
													}
												],
												"src": "2236:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2616:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2626:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2651:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2644:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2637:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2626:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2598:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2608:7:10",
														"type": ""
													}
												],
												"src": "2574:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2710:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2764:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2773:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2776:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2766:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2766:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2766:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2733:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2755:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2740:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2740:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2730:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2730:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2723:40:10"
															},
															"nodeType": "YulIf",
															"src": "2720:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2703:5:10",
														"type": ""
													}
												],
												"src": "2670:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2841:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2851:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2860:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2851:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2889:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2889:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2819:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2827:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2835:5:10",
														"type": ""
													}
												],
												"src": "2792:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3028:516:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3074:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3076:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3076:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3076:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3049:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3070:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3041:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3041:32:10"
															},
															"nodeType": "YulIf",
															"src": "3038:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3167:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3182:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3196:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3186:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3211:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3246:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3257:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3242:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3242:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3266:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3221:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3221:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3211:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3294:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3309:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3313:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3339:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3374:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3385:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3370:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3370:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3394:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3349:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3339:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3422:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3437:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3451:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3441:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3467:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3499:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3510:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3495:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3495:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3477:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3477:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3467:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2982:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2993:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3005:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3013:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3021:6:10",
														"type": ""
													}
												],
												"src": "2931:613:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3616:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3662:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3664:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3664:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3664:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3637:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3633:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3633:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:32:10"
															},
															"nodeType": "YulIf",
															"src": "3626:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3755:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3770:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3784:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3774:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3799:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3834:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3845:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3830:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3830:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3854:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3809:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3799:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3586:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3597:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3609:6:10",
														"type": ""
													}
												],
												"src": "3550:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:10"
															},
															"nodeType": "YulIf",
															"src": "3978:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4314:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4325:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4310:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4310:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4334:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4289:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:10",
														"type": ""
													}
												],
												"src": "3885:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4424:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4441:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4461:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4446:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4446:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4434:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4412:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4419:3:10",
														"type": ""
													}
												],
												"src": "4365:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4582:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4594:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4605:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4582:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4656:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4618:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4618:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4544:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4556:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4567:4:10",
														"type": ""
													}
												],
												"src": "4480:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4761:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4778:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4801:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4783:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4783:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4771:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4771:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4749:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4756:3:10",
														"type": ""
													}
												],
												"src": "4696:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4918:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4928:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4940:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4936:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4928:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5008:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5021:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4964:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4964:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4964:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4890:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4902:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4913:4:10",
														"type": ""
													}
												],
												"src": "4820:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5091:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5148:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5157:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5160:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5150:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5150:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5150:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5114:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5139:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5121:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5121:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5111:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5111:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:43:10"
															},
															"nodeType": "YulIf",
															"src": "5101:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5084:5:10",
														"type": ""
													}
												],
												"src": "5048:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5228:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5238:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5260:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5247:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5238:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5303:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "5276:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5276:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5206:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5214:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5222:5:10",
														"type": ""
													}
												],
												"src": "5176:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5387:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5433:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5435:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5408:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5404:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:32:10"
															},
															"nodeType": "YulIf",
															"src": "5397:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5526:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5541:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5555:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5545:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5570:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5605:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5616:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5625:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5580:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5580:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5570:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5357:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5368:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5380:6:10",
														"type": ""
													}
												],
												"src": "5321:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5776:200:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5786:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5798:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5809:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5786:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5866:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5879:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5875:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5822:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5941:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5954:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5903:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5740:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5752:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5760:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5771:4:10",
														"type": ""
													}
												],
												"src": "5656:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6065:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6111:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6113:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6113:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6113:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6086:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6095:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6082:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6107:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:32:10"
															},
															"nodeType": "YulIf",
															"src": "6075:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6204:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6219:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6223:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6248:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6283:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6294:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6279:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6279:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6303:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6258:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6258:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6248:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6331:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6346:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6360:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6350:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6376:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6411:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6422:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6407:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6407:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6431:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6386:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6386:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6376:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6027:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6038:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6050:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6058:6:10",
														"type": ""
													}
												],
												"src": "5982:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6536:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6547:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6563:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6557:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6519:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6529:6:10",
														"type": ""
													}
												],
												"src": "6462:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6693:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6710:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6715:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6703:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6703:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6731:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6750:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6755:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6746:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6746:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6731:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6665:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6670:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6681:11:10",
														"type": ""
													}
												],
												"src": "6582:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6844:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6854:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6862:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6854:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6875:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6887:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6892:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6883:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6875:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6831:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6839:4:10",
														"type": ""
													}
												],
												"src": "6772:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6965:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6982:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7005:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6987:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6975:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6975:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6953:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6960:3:10",
														"type": ""
													}
												],
												"src": "6910:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7148:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7114:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7114:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7114:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7169:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7187:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7192:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7183:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "7169:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7077:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7085:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "7093:10:10",
														"type": ""
													}
												],
												"src": "7024:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7284:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7294:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7306:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7294:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7271:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7279:4:10",
														"type": ""
													}
												],
												"src": "7209:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7482:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7492:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7554:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7506:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7496:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7569:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7650:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7655:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7576:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7569:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7736:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7686:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7675:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7751:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7765:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7755:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7841:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7855:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7882:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7876:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7876:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7859:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7902:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7953:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7968:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "7909:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7909:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7902:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7985:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8048:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7995:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7995:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7985:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7803:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7806:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7800:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7814:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7816:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7825:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7828:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7821:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7821:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7816:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7785:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7787:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7796:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7791:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7781:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8074:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8081:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8074:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7461:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7468:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7477:3:10",
														"type": ""
													}
												],
												"src": "7358:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8244:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8254:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8266:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8277:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8262:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8254:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8312:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8297:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8320:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8326:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8346:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8448:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8457:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8354:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8354:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8346:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8216:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8228:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8239:4:10",
														"type": ""
													}
												],
												"src": "8096:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8573:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8583:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8595:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8606:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8591:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8583:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8663:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8676:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8687:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8672:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8619:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8545:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8557:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8568:4:10",
														"type": ""
													}
												],
												"src": "8475:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8731:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8748:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8751:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8845:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8848:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8838:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8838:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8838:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8872:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8862:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8703:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8917:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8934:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8937:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8927:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8927:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8927:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9031:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8889:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9120:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9130:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9153:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9135:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9130:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9164:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9187:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9169:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9164:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9198:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9210:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9213:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9206:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9198:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9240:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9242:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9242:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9242:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "9231:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9237:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9228:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:11:10"
															},
															"nodeType": "YulIf",
															"src": "9225:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9106:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9109:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9115:4:10",
														"type": ""
													}
												],
												"src": "9075:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9303:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9320:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9323:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9313:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9417:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9410:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9441:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9444:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9434:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9434:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "9275:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9587:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9597:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9609:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9620:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9597:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9677:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9690:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9701:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9686:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9686:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9633:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9633:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9633:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9758:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9782:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9767:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9714:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9714:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9714:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9551:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9563:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9571:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9582:4:10",
														"type": ""
													}
												],
												"src": "9461:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9843:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9853:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9868:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:66:10",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9864:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9864:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9853:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9825:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9835:7:10",
														"type": ""
													}
												],
												"src": "9799:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10000:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10010:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10021:5:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "10010:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9982:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "9992:7:10",
														"type": ""
													}
												],
												"src": "9954:78:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10119:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10136:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10177:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes1",
																					"nodeType": "YulIdentifier",
																					"src": "10160:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10160:23:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes1",
																			"nodeType": "YulIdentifier",
																			"src": "10141:18:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10141:43:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10129:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10129:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10129:56:10"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10107:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10114:3:10",
														"type": ""
													}
												],
												"src": "10038:153:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10239:52:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10249:35:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10274:2:10",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10278:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "10270:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:14:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "10249:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10220:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "10230:8:10",
														"type": ""
													}
												],
												"src": "10197:94:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10344:47:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10354:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10379:5:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "10365:13:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:20:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "10354:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10326:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "10336:7:10",
														"type": ""
													}
												],
												"src": "10297:94:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10444:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10454:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10485:5:10"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10465:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10465:26:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "10454:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10426:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "10436:7:10",
														"type": ""
													}
												],
												"src": "10397:100:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10586:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10603:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10646:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10628:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10628:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10608:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10608:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10596:58:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10574:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10581:3:10",
														"type": ""
													}
												],
												"src": "10503:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10713:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10723:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10734:5:10"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "10723:7:10"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10695:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "10705:7:10",
														"type": ""
													}
												],
												"src": "10666:79:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10834:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10851:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "10876:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "10856:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10856:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10844:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10844:58:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10822:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10829:3:10",
														"type": ""
													}
												],
												"src": "10751:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11112:476:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11183:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11192:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11123:59:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11123:73:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11205:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11216:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11221:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11212:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11212:11:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11205:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11295:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11304:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11233:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:75:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11233:75:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11317:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11328:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11333:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11324:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11324:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11317:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11408:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11417:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11346:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11346:75:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11346:75:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11430:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11441:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11446:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11437:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11437:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11430:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11521:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11459:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11459:75:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11459:75:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11543:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11554:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11559:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11543:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11572:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11579:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11572:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11067:3:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11073:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11081:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11089:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11097:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11108:3:10",
														"type": ""
													}
												],
												"src": "10914:674:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11720:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11730:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11742:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11753:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11730:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11810:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11823:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11834:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11819:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11819:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11766:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11891:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11904:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11915:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11900:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11847:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11847:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11847:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11684:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11696:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11704:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11715:4:10",
														"type": ""
													}
												],
												"src": "11594:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function leftAlign_t_bytes1(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes1(cleanup_t_bytes1(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_bytes1_to_t_bytes1_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"296": [
									{
										"length": 32,
										"start": 1107
									},
									{
										"length": 32,
										"start": 3738
									},
									{
										"length": 32,
										"start": 4096
									}
								],
								"298": [
									{
										"length": 32,
										"start": 1142
									},
									{
										"length": 32,
										"start": 3817
									},
									{
										"length": 32,
										"start": 4175
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636d4354211161008c5780637b37e561116100665780637b37e561146102835780638b9e028b1461029f578063906c87cc146102cf57806393790f44146102ff576100ea565b80636d435421146102065780636e9bfd9f14610222578063794593bc14610253576100ea565b806314afd79e116100c857806314afd79e1461015a57806333bc85721461018a5780634e3f9580146101ba57806351710e45146101ea576100ea565b8063027cc764146100ef5780630a96ad391461011f57806313ad9cab1461013e575b600080fd5b610109600480360381019061010491906117b0565b61032f565b60405161011691906117ff565b60405180910390f35b61012761044e565b604051610135929190611833565b60405180910390f35b61015860048036038101906101539190611894565b61049b565b005b610174600480360381019061016f91906118e7565b610825565b60405161018191906117ff565b60405180910390f35b6101a4600480360381019061019f9190611914565b610899565b6040516101b19190611963565b60405180910390f35b6101d460048036038101906101cf91906118e7565b61092f565b6040516101e1919061198d565b60405180910390f35b61020460048036038101906101ff91906118e7565b610986565b005b610220600480360381019061021b9190611914565b610c7a565b005b61023c600480360381019061023791906119d4565b610e8e565b60405161024a929190611a01565b60405180910390f35b61026d60048036038101906102689190611a2a565b610f28565b60405161027a91906117ff565b60405180910390f35b61029d600480360381019061029891906118e7565b611237565b005b6102b960048036038101906102b491906118e7565b6113da565b6040516102c69190611b28565b60405180910390f35b6102e960048036038101906102e491906118e7565b6114b2565b6040516102f691906117ff565b60405180910390f35b610319600480360381019061031491906118e7565b611526565b6040516103269190611b4a565b60405180910390f35b600061033a836115ad565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054905090508083106103c757836040517f6ceb340b0000000000000000000000000000000000000000000000000000000081526004016103be91906117ff565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301838154811061041a57610419611b65565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505092915050565b6000807f000000000000000000000000000000000000000000000000000000000000000091507f000000000000000000000000000000000000000000000000000000000000000090509091565b6104a48361162d565b8273ffffffffffffffffffffffffffffffffffffffff1663c4e8fcb583836040518363ffffffff1660e01b81526004016104df929190611a01565b600060405180830381600087803b1580156104f957600080fd5b505af115801561050d573d6000803e3d6000fd5b5050505060008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008082141590508380156105ac575080155b156106685782600301859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600301805490508360040160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061081d565b831580156106735750805b1561081c5760006001830390506000600185600301805490506106969190611bc3565b905081811461078b5760008560030182815481106106b7576106b6611b65565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808660030184815481106106fb576106fa611b65565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848660040160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b8460030180548061079f5761079e611bf7565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558460040160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000905550505b5b505050505050565b6000610830826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006108a4836115ad565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415905092915050565b600061093a826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301805490509050919050565b61098f816115ad565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6057806040517f88c3a115000000000000000000000000000000000000000000000000000000008152600401610a5791906117ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a260008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec60405160405180910390a4336000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c838261162d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cf457816040517fa388d263000000000000000000000000000000000000000000000000000000008152600401610ceb91906117ff565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dc75781816040517fcbc080ca000000000000000000000000000000000000000000000000000000008152600401610dbe929190611c26565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060ff60f81b30847f0000000000000000000000000000000000000000000000000000000000000000604051602001610ecc9493929190611d05565b6040516020818303038152906040528051906020012060001c91507f00000000000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff163f149050915091565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f8f576040517f99faaa0400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168360601c73ffffffffffffffffffffffffffffffffffffffff1614610ff7576040517fcb6e534400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60ff60f81b30847f00000000000000000000000000000000000000000000000000000000000000006040516020016110329493929190611d05565b6040516020818303038152906040528051906020012060001c90507f00000000000000000000000000000000000000000000000000000000000000008173ffffffffffffffffffffffffffffffffffffffff163f036110c857806040517f6328ccb20000000000000000000000000000000000000000000000000000000081526004016110bf91906117ff565b60405180910390fd5b826040516110d59061170a565b8190604051809103906000f59050801580156110f5573d6000803e3d6000fd5b505060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050828160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508381600001819055507f4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d1582856040516111b6929190611d53565b60405180910390a18273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec60405160405180910390a45092915050565b6112408161162d565b600073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361131257806040517f6b01361600000000000000000000000000000000000000000000000000000000815260040161130991906117ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff167f11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da60405160405180910390a260008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606113e5826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054806020026020016040519081016040528092919081815260200182805480156114a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161145c575b50505050509050919050565b60006114bd826115ad565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000801b81036115a8576040517f4ca8209000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000801b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540361162a576040517f4ca8209000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b611636816115ad565b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461170757806040517fd4ed9a170000000000000000000000000000000000000000000000000000000081526004016116fe91906117ff565b60405180910390fd5b50565b6110ae80611d7d83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117478261171c565b9050919050565b6117578161173c565b811461176257600080fd5b50565b6000813590506117748161174e565b92915050565b6000819050919050565b61178d8161177a565b811461179857600080fd5b50565b6000813590506117aa81611784565b92915050565b600080604083850312156117c7576117c6611717565b5b60006117d585828601611765565b92505060206117e68582860161179b565b9150509250929050565b6117f98161173c565b82525050565b600060208201905061181460008301846117f0565b92915050565b6000819050919050565b61182d8161181a565b82525050565b60006040820190506118486000830185611824565b6118556020830184611824565b9392505050565b60008115159050919050565b6118718161185c565b811461187c57600080fd5b50565b60008135905061188e81611868565b92915050565b6000806000606084860312156118ad576118ac611717565b5b60006118bb86828701611765565b93505060206118cc86828701611765565b92505060406118dd8682870161187f565b9150509250925092565b6000602082840312156118fd576118fc611717565b5b600061190b84828501611765565b91505092915050565b6000806040838503121561192b5761192a611717565b5b600061193985828601611765565b925050602061194a85828601611765565b9150509250929050565b61195d8161185c565b82525050565b60006020820190506119786000830184611954565b92915050565b6119878161177a565b82525050565b60006020820190506119a2600083018461197e565b92915050565b6119b18161181a565b81146119bc57600080fd5b50565b6000813590506119ce816119a8565b92915050565b6000602082840312156119ea576119e9611717565b5b60006119f8848285016119bf565b91505092915050565b6000604082019050611a1660008301856117f0565b611a236020830184611954565b9392505050565b60008060408385031215611a4157611a40611717565b5b6000611a4f858286016119bf565b9250506020611a6085828601611765565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a9f8161173c565b82525050565b6000611ab18383611a96565b60208301905092915050565b6000602082019050919050565b6000611ad582611a6a565b611adf8185611a75565b9350611aea83611a86565b8060005b83811015611b1b578151611b028882611aa5565b9750611b0d83611abd565b925050600181019050611aee565b5085935050505092915050565b60006020820190508181036000830152611b428184611aca565b905092915050565b6000602082019050611b5f6000830184611824565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bce8261177a565b9150611bd98361177a565b9250828203905081811115611bf157611bf0611b94565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000604082019050611c3b60008301856117f0565b611c4860208301846117f0565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b611c96611c9182611c4f565b611c7b565b82525050565b60008160601b9050919050565b6000611cb482611c9c565b9050919050565b6000611cc682611ca9565b9050919050565b611cde611cd98261173c565b611cbb565b82525050565b6000819050919050565b611cff611cfa8261181a565b611ce4565b82525050565b6000611d118287611c85565b600182019150611d218286611ccd565b601482019150611d318285611cee565b602082019150611d418284611cee565b60208201915081905095945050505050565b6000604082019050611d6860008301856117f0565b611d756020830184611824565b939250505056fe60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060805161104e6100606000396000610290015261104e6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634ce34aa214610051578063899e104c146100815780638df25d92146100b1578063c4e8fcb5146100e1575b600080fd5b61006b60048036038101906100669190610c3c565b6100fd565b6040516100789190610cc4565b60405180910390f35b61009b60048036038101906100969190610d35565b610191565b6040516100a89190610cc4565b60405180910390f35b6100cb60048036038101906100c69190610db6565b610231565b6040516100d89190610cc4565b60405180910390f35b6100fb60048036038101906100f69190610e99565b61028e565b005b6000336000526000602052604060002054610140577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600083839050905060005b8181101561017f5761017485858381811061016957610168610ed9565b5b905060c00201610450565b80600101905061014b565b50634ce34aa260e01b91505092915050565b60003360005260006020526040600020546101d4577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b600085859050905060005b81811015610213576102088787838181106101fd576101fc610ed9565b5b905060c00201610450565b8060010190506101df565b5061021e8484610664565b63899e104c60e01b915050949350505050565b6000336000526000602052604060002054610274577f93daadf2000000000000000000000000000000000000000000000000000000006000523360045260246000fd5b61027e8383610664565b638df25d9260e01b905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f6d5769be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015156000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036103a85781816040517f924e341e00000000000000000000000000000000000000000000000000000000815260040161039f929190610f26565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2826040516104449190610f4f565b60405180910390a25050565b6001600381111561046457610463610f6a565b5b8160000160208101906104779190610fbe565b600381111561048957610488610f6a565b5b036104d9576104d48160200160208101906104a49190610feb565b8260400160208101906104b79190610feb565b8360600160208101906104ca9190610feb565b8460a0013561080c565b610661565b600260038111156104ed576104ec610f6a565b5b8160000160208101906105009190610fbe565b600381111561051257610511610f6a565b5b036105a05760018160a0013514610555576040517fefcc00b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61059b81602001602081019061056b9190610feb565b82604001602081019061057e9190610feb565b8360600160208101906105919190610feb565b846080013561097f565b610660565b6003808111156105b3576105b2610f6a565b5b8160000160208101906105c69190610fbe565b60038111156105d8576105d7610f6a565b5b0361062d576106288160200160208101906105f39190610feb565b8260400160208101906106069190610feb565b8360600160208101906106199190610feb565b84608001358560a00135610a93565b61065f565b6040517f7932f1fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b50565b8082807f2eb2c2d60000000000000000000000000000000000000000000000000000000060205260005b838110156107ff57823582018035803b6106d0577f5f15d672000000000000000000000000000000000000000000000000000000006000528060045260246000fd5b60a08201356020810260c0018060808501351460a06060860135141681850135831416158015610724577feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fd5b602088019750608060208601602437604083026040018060a00160a45260008160c401528060c4018160a0880160c43760008082602060008a5af1806107ec573d156107b1576020601f3d010460208304816003028183111561079857610200828302848502030460038385030201810190505b5a6020820110156107ad573d6000803e3d6000fd5b5050505b7fafc445e2000000000000000000000000000000000000000000000000000000006000528660045260c0606452608451602001608452816000fd5b505050505050505060018101905061068e565b5060806040525050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661096d5780873b15151661096c578061093e5781610904573d156108c5576020601f3d01046020840481600302818311156108ac57610200828302848502030460038385030201810190505b5a6020820110156108c1573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005286600452856024528460445260006064528360845260a46000fd5b7f98891923000000000000000000000000000000000000000000000000000000006000528660045285602452846044528360645260846000fd5b7f5f15d672000000000000000000000000000000000000000000000000000000006000528660045260246000fd5b5b82604052600060605250505050505050565b833b6109b3577f5f15d672000000000000000000000000000000000000000000000000000000006000528360045260246000fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000006000528360045282602452816044526000806064600080895af180610a82573d15610a43576020601f3d0104602083048160030281831115610a2a57610200828302848502030460038385030201810190505b5a602082011015610a3f573d6000803e3d6000fd5b5050505b7ff486bc870000000000000000000000000000000000000000000000000000000060005285600452846024528360445282606452600160845260a46000fd5b816040526000606052505050505050565b843b610ac7577f5f15d672000000000000000000000000000000000000000000000000000000006000528460045260246000fd5b60405160805160a05160c0517ff242432a000000000000000000000000000000000000000000000000000000006000528760045286602452856044528460645260a0608452600060a45260008060c46000808d5af180610bac573d15610b6e576020601f3d0104602086048160030281831115610b5557610200828302848502030460038385030201810190505b5a602082011015610b6a573d6000803e3d6000fd5b5050505b7ff486bc8700000000000000000000000000000000000000000000000000000000600052896004528860245287604452866064528560845260a46000fd5b836080528260a0528160c05284604052600060605250505050505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610bfc57610bfb610bd7565b5b8235905067ffffffffffffffff811115610c1957610c18610bdc565b5b6020830191508360c0820283011115610c3557610c34610be1565b5b9250929050565b60008060208385031215610c5357610c52610bcd565b5b600083013567ffffffffffffffff811115610c7157610c70610bd2565b5b610c7d85828601610be6565b92509250509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cbe81610c89565b82525050565b6000602082019050610cd96000830184610cb5565b92915050565b60008083601f840112610cf557610cf4610bd7565b5b8235905067ffffffffffffffff811115610d1257610d11610bdc565b5b602083019150836020820283011115610d2e57610d2d610be1565b5b9250929050565b60008060008060408587031215610d4f57610d4e610bcd565b5b600085013567ffffffffffffffff811115610d6d57610d6c610bd2565b5b610d7987828801610be6565b9450945050602085013567ffffffffffffffff811115610d9c57610d9b610bd2565b5b610da887828801610cdf565b925092505092959194509250565b60008060208385031215610dcd57610dcc610bcd565b5b600083013567ffffffffffffffff811115610deb57610dea610bd2565b5b610df785828601610cdf565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2e82610e03565b9050919050565b610e3e81610e23565b8114610e4957600080fd5b50565b600081359050610e5b81610e35565b92915050565b60008115159050919050565b610e7681610e61565b8114610e8157600080fd5b50565b600081359050610e9381610e6d565b92915050565b60008060408385031215610eb057610eaf610bcd565b5b6000610ebe85828601610e4c565b9250506020610ecf85828601610e84565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610f1181610e23565b82525050565b610f2081610e61565b82525050565b6000604082019050610f3b6000830185610f08565b610f486020830184610f17565b9392505050565b6000602082019050610f646000830184610f17565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa657600080fd5b50565b600081359050610fb881610f99565b92915050565b600060208284031215610fd457610fd3610bcd565b5b6000610fe284828501610fa9565b91505092915050565b60006020828403121561100157611000610bcd565b5b600061100f84828501610e4c565b9150509291505056fea26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033a2646970667358221220761bc6711f0af030e64e4344395b1ef19179448b9d129d2b16bfafae043b55cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D435421 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x7B37E561 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7B37E561 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x8B9E028B EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x906C87CC EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x93790F44 EQ PUSH2 0x2FF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x6D435421 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6E9BFD9F EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x794593BC EQ PUSH2 0x253 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x14AFD79E GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x14AFD79E EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x33BC8572 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x4E3F9580 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0x1EA JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x27CC764 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xA96AD39 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x13AD9CAB EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x17B0 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP3 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x153 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1963 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0xC7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP3 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1237 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP4 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP1 DUP4 LT PUSH2 0x3C7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6CEB340B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x41A JUMPI PUSH2 0x419 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 SWAP2 POP PUSH32 0x0 SWAP1 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x4A4 DUP4 PUSH2 0x162D JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC4E8FCB5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP3 SWAP2 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x50D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ ISZERO SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x5AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x668 JUMPI DUP3 PUSH1 0x3 ADD DUP6 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x4 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x81D JUMP JUMPDEST DUP4 ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1BC3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP6 PUSH1 0x3 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP7 PUSH1 0x3 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6FB JUMPI PUSH2 0x6FA PUSH2 0x1B65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH1 0x4 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP5 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH2 0x79F JUMPI PUSH2 0x79E PUSH2 0x1BF7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP5 PUSH1 0x4 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830 DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A4 DUP4 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93A DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98F DUP2 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA60 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x88C3A11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC83 DUP3 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF4 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xA388D26300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEB SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC7 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0xCBC080CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBE SWAP3 SWAP2 SWAP1 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF PUSH1 0xF8 SHL ADDRESS DUP5 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xECC SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP2 POP PUSH32 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODEHASH EQ SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x99FAAA0400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x60 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB6E534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL ADDRESS DUP5 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1032 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH32 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODEHASH SUB PUSH2 0x10C8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x6328CCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH2 0x10D5 SWAP1 PUSH2 0x170A JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x4397AF6128D529B8AE0442F99DB1296D5136062597A15BBC61C1B2A6431A7D15 DUP3 DUP6 PUSH1 0x40 MLOAD PUSH2 0x11B6 SWAP3 SWAP2 SWAP1 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1240 DUP2 PUSH2 0x162D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1312 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x6B01361600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1309 SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E5 DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x145C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BD DUP3 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x15A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1636 DUP2 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1707 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD4ED9A1700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10AE DUP1 PUSH2 0x1D7D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1747 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP2 EQ PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1774 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178D DUP2 PUSH2 0x177A JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AA DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C7 JUMPI PUSH2 0x17C6 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17E6 DUP6 DUP3 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1814 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x181A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x1855 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1871 DUP2 PUSH2 0x185C JUMP JUMPDEST DUP2 EQ PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188E DUP2 PUSH2 0x1868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18AC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18DD DUP7 DUP3 DUP8 ADD PUSH2 0x187F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FC PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x190B DUP5 DUP3 DUP6 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192B JUMPI PUSH2 0x192A PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1939 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194A DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x195D DUP2 PUSH2 0x185C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1978 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1987 DUP2 PUSH2 0x177A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19B1 DUP2 PUSH2 0x181A JUMP JUMPDEST DUP2 EQ PUSH2 0x19BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19CE DUP2 PUSH2 0x19A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19F8 DUP5 DUP3 DUP6 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A16 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1A23 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1954 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x1717 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x19BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1765 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x173C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AB1 DUP4 DUP4 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD5 DUP3 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x1ADF DUP2 DUP6 PUSH2 0x1A75 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AEA DUP4 PUSH2 0x1A86 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B1B JUMPI DUP2 MLOAD PUSH2 0x1B02 DUP9 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST SWAP8 POP PUSH2 0x1B0D DUP4 PUSH2 0x1ABD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1AEE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B42 DUP2 DUP5 PUSH2 0x1ACA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BCE DUP3 PUSH2 0x177A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD9 DUP4 PUSH2 0x177A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BF1 JUMPI PUSH2 0x1BF0 PUSH2 0x1B94 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1C48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x1C91 DUP3 PUSH2 0x1C4F JUMP JUMPDEST PUSH2 0x1C7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB4 DUP3 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC6 DUP3 PUSH2 0x1CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE PUSH2 0x1CD9 DUP3 PUSH2 0x173C JUMP JUMPDEST PUSH2 0x1CBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CFF PUSH2 0x1CFA DUP3 PUSH2 0x181A JUMP JUMPDEST PUSH2 0x1CE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP3 DUP8 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH2 0x1D21 DUP3 DUP7 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1D31 DUP3 DUP6 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1D41 DUP3 DUP5 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D68 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17F0 JUMP JUMPDEST PUSH2 0x1D75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH2 0x104E PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x290 ADD MSTORE PUSH2 0x104E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CE34AA2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x899E104C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC4E8FCB5 EQ PUSH2 0xE1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0x231 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x140 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17F JUMPI PUSH2 0x174 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x169 JUMPI PUSH2 0x168 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14B JUMP JUMPDEST POP PUSH4 0x4CE34AA2 PUSH1 0xE0 SHL SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D4 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH2 0x208 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x1FD JUMPI PUSH2 0x1FC PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0xC0 MUL ADD PUSH2 0x450 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1DF JUMP JUMPDEST POP PUSH2 0x21E DUP5 DUP5 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x899E104C PUSH1 0xE0 SHL SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x274 JUMPI PUSH32 0x93DAADF200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E DUP4 DUP4 PUSH2 0x664 JUMP JUMPDEST PUSH4 0x8DF25D92 PUSH1 0xE0 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x3A8 JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x924E341E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP3 SWAP2 SWAP1 PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x444 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x464 JUMPI PUSH2 0x463 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4D9 JUMPI PUSH2 0x4D4 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4A4 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x80C JUMP JUMPDEST PUSH2 0x661 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x512 JUMPI PUSH2 0x511 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x5A0 JUMPI PUSH1 0x1 DUP2 PUSH1 0xA0 ADD CALLDATALOAD EQ PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x591 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x97F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x5D7 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x62D JUMPI PUSH2 0x628 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP3 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x606 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP4 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP6 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 DUP1 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 PUSH1 0x20 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7FF JUMPI DUP3 CALLDATALOAD DUP3 ADD DUP1 CALLDATALOAD DUP1 EXTCODESIZE PUSH2 0x6D0 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0x20 DUP2 MUL PUSH1 0xC0 ADD DUP1 PUSH1 0x80 DUP6 ADD CALLDATALOAD EQ PUSH1 0xA0 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND DUP2 DUP6 ADD CALLDATALOAD DUP4 EQ AND ISZERO DUP1 ISZERO PUSH2 0x724 JUMPI PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD SWAP8 POP PUSH1 0x80 PUSH1 0x20 DUP7 ADD PUSH1 0x24 CALLDATACOPY PUSH1 0x40 DUP4 MUL PUSH1 0x40 ADD DUP1 PUSH1 0xA0 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 DUP2 PUSH1 0xC4 ADD MSTORE DUP1 PUSH1 0xC4 ADD DUP2 PUSH1 0xA0 DUP9 ADD PUSH1 0xC4 CALLDATACOPY PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 PUSH1 0x0 DUP11 GAS CALL DUP1 PUSH2 0x7EC JUMPI RETURNDATASIZE ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x798 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x7AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0xC0 PUSH1 0x64 MSTORE PUSH1 0x84 MLOAD PUSH1 0x20 ADD PUSH1 0x84 MSTORE DUP2 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x68E JUMP JUMPDEST POP PUSH1 0x80 PUSH1 0x40 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 PUSH1 0x0 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND PUSH2 0x96D JUMPI DUP1 DUP8 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x96C JUMPI DUP1 PUSH2 0x93E JUMPI DUP2 PUSH2 0x904 JUMPI RETURNDATASIZE ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP5 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE PUSH1 0x0 PUSH1 0x64 MSTORE DUP4 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE DUP6 PUSH1 0x24 MSTORE DUP5 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0x84 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP7 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST JUMPDEST DUP3 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 EXTCODESIZE PUSH2 0x9B3 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP4 PUSH1 0x4 MSTORE DUP3 PUSH1 0x24 MSTORE DUP2 PUSH1 0x44 MSTORE PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0x0 DUP1 DUP10 GAS CALL DUP1 PUSH2 0xA82 JUMPI RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP4 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xA3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP6 PUSH1 0x4 MSTORE DUP5 PUSH1 0x24 MSTORE DUP4 PUSH1 0x44 MSTORE DUP3 PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0xAC7 JUMPI PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP5 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP8 PUSH1 0x4 MSTORE DUP7 PUSH1 0x24 MSTORE DUP6 PUSH1 0x44 MSTORE DUP5 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE PUSH1 0x0 PUSH1 0xA4 MSTORE PUSH1 0x0 DUP1 PUSH1 0xC4 PUSH1 0x0 DUP1 DUP14 GAS CALL DUP1 PUSH2 0xBAC JUMPI RETURNDATASIZE ISZERO PUSH2 0xB6E JUMPI PUSH1 0x20 PUSH1 0x1F RETURNDATASIZE ADD DIV PUSH1 0x20 DUP7 DIV DUP2 PUSH1 0x3 MUL DUP2 DUP4 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0x200 DUP3 DUP4 MUL DUP5 DUP6 MUL SUB DIV PUSH1 0x3 DUP4 DUP6 SUB MUL ADD DUP2 ADD SWAP1 POP JUMPDEST GAS PUSH1 0x20 DUP3 ADD LT ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMPDEST PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE DUP10 PUSH1 0x4 MSTORE DUP9 PUSH1 0x24 MSTORE DUP8 PUSH1 0x44 MSTORE DUP7 PUSH1 0x64 MSTORE DUP6 PUSH1 0x84 MSTORE PUSH1 0xA4 PUSH1 0x0 REVERT JUMPDEST DUP4 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE DUP2 PUSH1 0xC0 MSTORE DUP5 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 MSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBFC JUMPI PUSH2 0xBFB PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC19 JUMPI PUSH2 0xC18 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0xC0 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xC35 JUMPI PUSH2 0xC34 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH2 0xC52 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC71 JUMPI PUSH2 0xC70 PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xC7D DUP6 DUP3 DUP7 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBE DUP2 PUSH2 0xC89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xBD7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD12 JUMPI PUSH2 0xD11 PUSH2 0xBDC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD2E JUMPI PUSH2 0xD2D PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH2 0xD4E PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6C PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xD79 DUP8 DUP3 DUP9 ADD PUSH2 0xBE6 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9C JUMPI PUSH2 0xD9B PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDA8 DUP8 DUP3 DUP9 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xBD2 JUMP JUMPDEST JUMPDEST PUSH2 0xDF7 DUP6 DUP3 DUP7 ADD PUSH2 0xCDF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3E DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP2 EQ PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5B DUP2 PUSH2 0xE35 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP2 EQ PUSH2 0xE81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEBE DUP6 DUP3 DUP7 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECF DUP6 DUP3 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF11 DUP2 PUSH2 0xE23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF20 DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF3B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xF48 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0xFA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB8 DUP2 PUSH2 0xF99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFE2 DUP5 DUP3 DUP6 ADD PUSH2 0xFA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1001 JUMPI PUSH2 0x1000 PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100F DUP5 DUP3 DUP6 ADD PUSH2 0xE4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD CALLDATASIZE SWAP3 0x4F 0x4D 0xBB INVALID PUSH26 0x561A1FC04E45947433C8FCBA59787FFD458BB59436AA02226473 PUSH16 0x6C63430008110033A264697066735822 SLT KECCAK256 PUSH23 0x1BC6711F0AF030E64E4344395B1EF19179448B9D129D2B AND 0xBF 0xAF 0xAE DIV EXTCODESIZE SSTORE 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "556:19422:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17000:668;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18493:398;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;5181:2980;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12008:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15483:392;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16151:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10764:1009;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8654:923;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13497:784;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2328:2126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9841:648;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18043:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14752:374;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12654:379;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17000:668;17123:15;17209:29;17230:7;17209:20;:29::i;:::-;17327:21;17351:9;:18;17361:7;17351:18;;;;;;;;;;;;;;;:27;;:34;;;;17327:58;;17475:13;17459:12;:29;17455:93;;17529:7;17511:26;;;;;;;;;;;:::i;:::-;;;;;;;;17455:93;17620:9;:18;17630:7;17620:18;;;;;;;;;;;;;;;:27;;17648:12;17620:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17610:51;;17144:524;17000:668;;;;:::o;18493:398::-;18589:24;18615:23;18738:27;18719:46;;18858:26;18840:44;;18493:398;;:::o;5181:2980::-;5387:36;5415:7;5387:27;:36::i;:::-;5502:7;5485:39;;;5525:7;5534:6;5485:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5631:43;5677:9;:18;5687:7;5677:18;;;;;;;;;;;;;;;5631:64;;5787:27;5831:17;:39;;:48;5871:7;5831:48;;;;;;;;;;;;;;;;5787:102;;5977:26;6029:1;6006:19;:24;;5977:53;;6121:6;:32;;;;;6132:21;6131:22;6121:32;6117:2038;;;6239:17;:26;;6271:7;6239:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6442:17;:26;;:33;;;;6373:17;:39;;:48;6413:7;6373:48;;;;;;;;;;;;;;;:116;;;;6117:2038;;;6511:6;6510:7;:32;;;;;6521:21;6510:32;6506:1649;;;6717:27;6963:1;6941:19;:23;6919:45;;7073:25;7137:1;7101:17;:26;;:33;;;;:37;;;;:::i;:::-;7073:65;;7256:19;7235:17;:40;7231:640;;7375:20;7420:17;:26;;7447:17;7420:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7375:108;;7632:12;7582:17;:26;;7609:19;7582:47;;;;;;;;:::i;:::-;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;7819:19;7741:17;:39;;:53;7781:12;7741:53;;;;;;;;;;;;;;;:115;;;;7277:594;7231:640;7965:17;:26;;:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8096:17;:39;;:48;8136:7;8096:48;;;;;;;;;;;;;;;8089:55;;;6544:1611;;6506:1649;6117:2038;5299:2862;;;5181:2980;;;:::o;12008:327::-;12106:13;12190:29;12211:7;12190:20;:29::i;:::-;12304:9;:18;12314:7;12304:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;12296:32;;12008:327;;;:::o;15483:392::-;15607:11;15689:29;15710:7;15689:20;:29::i;:::-;15867:1;15814:9;:18;15824:7;15814:18;;;;;;;;;;;;;;;:40;;:49;15855:7;15814:49;;;;;;;;;;;;;;;;:54;;15805:63;;15483:392;;;;:::o;16151:374::-;16258:21;16350:29;16371:7;16350:20;:29::i;:::-;16484:9;:18;16494:7;16484:18;;;;;;;;;;;;;;;:27;;:34;;;;16468:50;;16151:374;;;:::o;10764:1009::-;10889:29;10910:7;10889:20;:29::i;:::-;11025:9;:18;11035:7;11025:18;;;;;;;;;;;;;;;:33;;;;;;;;;;;;11011:47;;:10;:47;;;11007:200;;11188:7;11159:37;;;;;;;;;;;:::i;:::-;;;;;;;;11007:200;11331:1;11301:33;;;;;;;;;;;;11456:1;11412:9;:18;11422:7;11412:18;;;;;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;11643:10;11550:113;;11605:9;:18;11615:7;11605:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;11550:113;;11584:7;11550:113;;;;;;;;;;;;11756:10;11729:9;:18;11739:7;11729:18;;;;;;;;;;;;;;;:24;;;:37;;;;;;;;;;;;;;;;;;10764:1009;:::o;8654:923::-;8851:36;8879:7;8851:27;:36::i;:::-;9000:1;8971:31;;:17;:31;;;8967:108;;9056:7;9025:39;;;;;;;;;;;:::i;:::-;;;;;;;;8967:108;9172:9;:18;9182:7;9172:18;;;;;;;;;;;;;;;:33;;;;;;;;;;;;9151:54;;:17;:54;;;9147:147;;9256:7;9265:17;9228:55;;;;;;;;;;;;:::i;:::-;;;;;;;;9147:147;9410:17;9388:40;;;;;;;;;;;;9553:17;9517:9;:18;9527:7;9517:18;;;;;;;;;;;;;;;:33;;;:53;;;;;;;;;;;;;;;;;;8654:923;;:::o;13497:784::-;13601:15;13618:11;13895:4;13888:12;;13938:4;13973:10;14013:27;13842:224;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13807:281;;;;;;13778:328;;13722:408;;14247:26;14227:7;:16;;;:46;14217:57;;13497:784;;;:::o;2328:2126::-;2444:15;2562:1;2538:26;;:12;:26;;;2534:85;;2587:21;;;;;;;;;;;;;;2534:85;2753:10;2712:51;;2736:10;2720:28;;2712:51;;;2708:181;;2862:16;;;;;;;;;;;;;;2708:181;3149:4;3142:12;;3192:4;3227:10;3267:27;3096:224;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3061:281;;;;;;3032:328;;2976:408;;3499:26;3479:7;:16;;;:46;3475:193;;3649:7;3628:29;;;;;;;;;;;:::i;:::-;;;;;;;;3475:193;3774:10;3755:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:43;3916:9;:18;3926:7;3916:18;;;;;;;;;;;;;;;3870:64;;4042:12;4016:17;:23;;;:38;;;;;;;;;;;;;;;;;;4169:10;4145:17;:21;;:34;;;;4267:31;4278:7;4287:10;4267:31;;;;;;;:::i;:::-;;;;;;;;4434:12;4392:55;;4430:1;4392:55;;4413:7;4392:55;;;;;;;;;;;;2465:1989;2328:2126;;;;:::o;9841:648::-;9997:36;10025:7;9997:27;:36::i;:::-;10158:1;10113:47;;:9;:18;10123:7;10113:18;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;10109:122;;10212:7;10183:37;;;;;;;;;;;:::i;:::-;;;;;;;;10109:122;10355:1;10325:33;;;;;;;;;;;;10480:1;10436:9;:18;10446:7;10436:18;;;;;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;9841:648;:::o;18043:356::-;18145:25;18241:29;18262:7;18241:20;:29::i;:::-;18365:9;:18;18375:7;18365:18;;;;;;;;;;;;;;;:27;;18354:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18043:356;;;:::o;14752:374::-;14860:22;14953:29;14974:7;14953:20;:29::i;:::-;15086:9;:18;15096:7;15086:18;;;;;;;;;;;;;;;:33;;;;;;;;;;;;15069:50;;14752:374;;;:::o;12654:379::-;12751:18;12872:9;:18;12882:7;12872:18;;;;;;;;;;;;;;;:22;;;12859:35;;12980:1;12972:10;;12958;:24;12954:73;;13005:11;;;;;;;;;;;;;;12954:73;12654:379;;;:::o;19688:288::-;19870:1;19862:10;;19836:9;:18;19846:7;19836:18;;;;;;;;;;;;;;;:22;;;:36;19832:138;;19948:11;;;;;;;;;;;;;;19832:138;19688:288;:::o;19092:423::-;19224:29;19245:7;19224:20;:29::i;:::-;19358:9;:18;19368:7;19358:18;;;;;;;;;;;;;;;:24;;;;;;;;;;;;19344:38;;:10;:38;;;19340:169;;19490:7;19473:25;;;;;;;;;;;:::i;:::-;;;;;;;;19340:169;19092:423;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:77::-;2066:7;2095:5;2084:16;;2029:77;;;:::o;2112:118::-;2199:24;2217:5;2199:24;:::i;:::-;2194:3;2187:37;2112:118;;:::o;2236:332::-;2357:4;2395:2;2384:9;2380:18;2372:26;;2408:71;2476:1;2465:9;2461:17;2452:6;2408:71;:::i;:::-;2489:72;2557:2;2546:9;2542:18;2533:6;2489:72;:::i;:::-;2236:332;;;;;:::o;2574:90::-;2608:7;2651:5;2644:13;2637:21;2626:32;;2574:90;;;:::o;2670:116::-;2740:21;2755:5;2740:21;:::i;:::-;2733:5;2730:32;2720:60;;2776:1;2773;2766:12;2720:60;2670:116;:::o;2792:133::-;2835:5;2873:6;2860:20;2851:29;;2889:30;2913:5;2889:30;:::i;:::-;2792:133;;;;:::o;2931:613::-;3005:6;3013;3021;3070:2;3058:9;3049:7;3045:23;3041:32;3038:119;;;3076:79;;:::i;:::-;3038:119;3196:1;3221:53;3266:7;3257:6;3246:9;3242:22;3221:53;:::i;:::-;3211:63;;3167:117;3323:2;3349:53;3394:7;3385:6;3374:9;3370:22;3349:53;:::i;:::-;3339:63;;3294:118;3451:2;3477:50;3519:7;3510:6;3499:9;3495:22;3477:50;:::i;:::-;3467:60;;3422:115;2931:613;;;;;:::o;3550:329::-;3609:6;3658:2;3646:9;3637:7;3633:23;3629:32;3626:119;;;3664:79;;:::i;:::-;3626:119;3784:1;3809:53;3854:7;3845:6;3834:9;3830:22;3809:53;:::i;:::-;3799:63;;3755:117;3550:329;;;;:::o;3885:474::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:53;4334:7;4325:6;4314:9;4310:22;4289:53;:::i;:::-;4279:63;;4234:118;3885:474;;;;;:::o;4365:109::-;4446:21;4461:5;4446:21;:::i;:::-;4441:3;4434:34;4365:109;;:::o;4480:210::-;4567:4;4605:2;4594:9;4590:18;4582:26;;4618:65;4680:1;4669:9;4665:17;4656:6;4618:65;:::i;:::-;4480:210;;;;:::o;4696:118::-;4783:24;4801:5;4783:24;:::i;:::-;4778:3;4771:37;4696:118;;:::o;4820:222::-;4913:4;4951:2;4940:9;4936:18;4928:26;;4964:71;5032:1;5021:9;5017:17;5008:6;4964:71;:::i;:::-;4820:222;;;;:::o;5048:122::-;5121:24;5139:5;5121:24;:::i;:::-;5114:5;5111:35;5101:63;;5160:1;5157;5150:12;5101:63;5048:122;:::o;5176:139::-;5222:5;5260:6;5247:20;5238:29;;5276:33;5303:5;5276:33;:::i;:::-;5176:139;;;;:::o;5321:329::-;5380:6;5429:2;5417:9;5408:7;5404:23;5400:32;5397:119;;;5435:79;;:::i;:::-;5397:119;5555:1;5580:53;5625:7;5616:6;5605:9;5601:22;5580:53;:::i;:::-;5570:63;;5526:117;5321:329;;;;:::o;5656:320::-;5771:4;5809:2;5798:9;5794:18;5786:26;;5822:71;5890:1;5879:9;5875:17;5866:6;5822:71;:::i;:::-;5903:66;5965:2;5954:9;5950:18;5941:6;5903:66;:::i;:::-;5656:320;;;;;:::o;5982:474::-;6050:6;6058;6107:2;6095:9;6086:7;6082:23;6078:32;6075:119;;;6113:79;;:::i;:::-;6075:119;6233:1;6258:53;6303:7;6294:6;6283:9;6279:22;6258:53;:::i;:::-;6248:63;;6204:117;6360:2;6386:53;6431:7;6422:6;6411:9;6407:22;6386:53;:::i;:::-;6376:63;;6331:118;5982:474;;;;;:::o;6462:114::-;6529:6;6563:5;6557:12;6547:22;;6462:114;;;:::o;6582:184::-;6681:11;6715:6;6710:3;6703:19;6755:4;6750:3;6746:14;6731:29;;6582:184;;;;:::o;6772:132::-;6839:4;6862:3;6854:11;;6892:4;6887:3;6883:14;6875:22;;6772:132;;;:::o;6910:108::-;6987:24;7005:5;6987:24;:::i;:::-;6982:3;6975:37;6910:108;;:::o;7024:179::-;7093:10;7114:46;7156:3;7148:6;7114:46;:::i;:::-;7192:4;7187:3;7183:14;7169:28;;7024:179;;;;:::o;7209:113::-;7279:4;7311;7306:3;7302:14;7294:22;;7209:113;;;:::o;7358:732::-;7477:3;7506:54;7554:5;7506:54;:::i;:::-;7576:86;7655:6;7650:3;7576:86;:::i;:::-;7569:93;;7686:56;7736:5;7686:56;:::i;:::-;7765:7;7796:1;7781:284;7806:6;7803:1;7800:13;7781:284;;;7882:6;7876:13;7909:63;7968:3;7953:13;7909:63;:::i;:::-;7902:70;;7995:60;8048:6;7995:60;:::i;:::-;7985:70;;7841:224;7828:1;7825;7821:9;7816:14;;7781:284;;;7785:14;8081:3;8074:10;;7482:608;;;7358:732;;;;:::o;8096:373::-;8239:4;8277:2;8266:9;8262:18;8254:26;;8326:9;8320:4;8316:20;8312:1;8301:9;8297:17;8290:47;8354:108;8457:4;8448:6;8354:108;:::i;:::-;8346:116;;8096:373;;;;:::o;8475:222::-;8568:4;8606:2;8595:9;8591:18;8583:26;;8619:71;8687:1;8676:9;8672:17;8663:6;8619:71;:::i;:::-;8475:222;;;;:::o;8703:180::-;8751:77;8748:1;8741:88;8848:4;8845:1;8838:15;8872:4;8869:1;8862:15;8889:180;8937:77;8934:1;8927:88;9034:4;9031:1;9024:15;9058:4;9055:1;9048:15;9075:194;9115:4;9135:20;9153:1;9135:20;:::i;:::-;9130:25;;9169:20;9187:1;9169:20;:::i;:::-;9164:25;;9213:1;9210;9206:9;9198:17;;9237:1;9231:4;9228:11;9225:37;;;9242:18;;:::i;:::-;9225:37;9075:194;;;;:::o;9275:180::-;9323:77;9320:1;9313:88;9420:4;9417:1;9410:15;9444:4;9441:1;9434:15;9461:332;9582:4;9620:2;9609:9;9605:18;9597:26;;9633:71;9701:1;9690:9;9686:17;9677:6;9633:71;:::i;:::-;9714:72;9782:2;9771:9;9767:18;9758:6;9714:72;:::i;:::-;9461:332;;;;;:::o;9799:149::-;9835:7;9875:66;9868:5;9864:78;9853:89;;9799:149;;;:::o;9954:78::-;9992:7;10021:5;10010:16;;9954:78;;;:::o;10038:153::-;10141:43;10160:23;10177:5;10160:23;:::i;:::-;10141:43;:::i;:::-;10136:3;10129:56;10038:153;;:::o;10197:94::-;10230:8;10278:5;10274:2;10270:14;10249:35;;10197:94;;;:::o;10297:::-;10336:7;10365:20;10379:5;10365:20;:::i;:::-;10354:31;;10297:94;;;:::o;10397:100::-;10436:7;10465:26;10485:5;10465:26;:::i;:::-;10454:37;;10397:100;;;:::o;10503:157::-;10608:45;10628:24;10646:5;10628:24;:::i;:::-;10608:45;:::i;:::-;10603:3;10596:58;10503:157;;:::o;10666:79::-;10705:7;10734:5;10723:16;;10666:79;;;:::o;10751:157::-;10856:45;10876:24;10894:5;10876:24;:::i;:::-;10856:45;:::i;:::-;10851:3;10844:58;10751:157;;:::o;10914:674::-;11108:3;11123:73;11192:3;11183:6;11123:73;:::i;:::-;11221:1;11216:3;11212:11;11205:18;;11233:75;11304:3;11295:6;11233:75;:::i;:::-;11333:2;11328:3;11324:12;11317:19;;11346:75;11417:3;11408:6;11346:75;:::i;:::-;11446:2;11441:3;11437:12;11430:19;;11459:75;11530:3;11521:6;11459:75;:::i;:::-;11559:2;11554:3;11550:12;11543:19;;11579:3;11572:10;;10914:674;;;;;;;:::o;11594:332::-;11715:4;11753:2;11742:9;11738:18;11730:26;;11766:71;11834:1;11823:9;11819:17;11810:6;11766:71;:::i;:::-;11847:72;11915:2;11904:9;11900:18;11891:6;11847:72;:::i;:::-;11594:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2374400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership(address)": "infinite",
								"cancelOwnershipTransfer(address)": "infinite",
								"createConduit(bytes32,address)": "infinite",
								"getChannel(address,uint256)": "infinite",
								"getChannelStatus(address,address)": "infinite",
								"getChannels(address)": "infinite",
								"getConduit(bytes32)": "infinite",
								"getConduitCodeHashes()": "infinite",
								"getKey(address)": "2964",
								"getPotentialOwner(address)": "infinite",
								"getTotalChannels(address)": "5176",
								"ownerOf(address)": "infinite",
								"transferOwnership(address,address)": "infinite",
								"updateChannel(address,address,bool)": "infinite"
							},
							"internal": {
								"_assertCallerIsConduitOwner(address)": "infinite",
								"_assertConduitExists(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1262,
									"end": 1288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1262,
									"end": 1288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1252,
									"end": 1289,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1289,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1409,
									"end": 1410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1401,
									"end": 1411,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 1411,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1382,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "CREATE2",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "RETURNDATACOPY",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1382,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1415,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1360,
									"end": 1415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1552,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1533,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1533,
									"end": 1562,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1533,
									"end": 1562,
									"name": "EXTCODEHASH",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1135,
									"end": 1569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000001"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "298"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "296"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 19978,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220761bc6711f0af030e64e4344395b1ef19179448b9d129d2b16bfafae043b55cd64736f6c63430008110033",
									".code": [
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "6D435421"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "7B37E561"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "7B37E561"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "8B9E028B"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "906C87CC"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "93790F44"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "6D435421"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "6E9BFD9F"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "794593BC"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "14AFD79E"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "14AFD79E"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "33BC8572"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "4E3F9580"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "51710E45"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "27CC764"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "A96AD39"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "13AD9CAB"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 19978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 17000,
											"end": 17668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 17000,
											"end": 17668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17000,
											"end": 17668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 18493,
											"end": 18891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 18493,
											"end": 18891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5181,
											"end": 8161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5181,
											"end": 8161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12008,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12008,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 12008,
											"end": 12335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15483,
											"end": 15875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15483,
											"end": 15875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15483,
											"end": 15875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 16151,
											"end": 16525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 16151,
											"end": 16525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 16151,
											"end": 16525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 10764,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10764,
											"end": 11773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8654,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8654,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 13497,
											"end": 14281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 13497,
											"end": 14281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 13497,
											"end": 14281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2328,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2328,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2328,
											"end": 4454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 9841,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 9841,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 18043,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 18043,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 18043,
											"end": 18399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 14752,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 14752,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 14752,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12654,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 12654,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 12654,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17209,
											"end": 17238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17230,
											"end": 17237,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17209,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 17209,
											"end": 17238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17209,
											"end": 17238,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 17209,
											"end": 17238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17351,
											"end": 17360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17361,
											"end": 17368,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17351,
											"end": 17369,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17378,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 17351,
											"end": 17378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17385,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17351,
											"end": 17385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17475,
											"end": 17488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17459,
											"end": 17471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17459,
											"end": 17488,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17529,
											"end": 17536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH",
											"source": 1,
											"value": "6CEB340B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 17511,
											"end": 17537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17511,
											"end": 17537,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 17455,
											"end": 17548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 17637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17638,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17647,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 17620,
											"end": 17647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17648,
											"end": 17660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 17620,
											"end": 17661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17620,
											"end": 17661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17000,
											"end": 17668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18615,
											"end": 18638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18738,
											"end": 18765,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 18719,
											"end": 18765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18719,
											"end": 18765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18858,
											"end": 18884,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 18840,
											"end": 18884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18840,
											"end": 18884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18493,
											"end": 18891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5415,
											"end": 5422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5387,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5423,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5387,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5524,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5524,
											"name": "PUSH",
											"source": 1,
											"value": "C4E8FCB5"
										},
										{
											"begin": 5525,
											"end": 5532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5485,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5694,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5695,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5831,
											"end": 5870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5879,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6030,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6121,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6239,
											"end": 6265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6278,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6468,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6442,
											"end": 6468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6373,
											"end": 6412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6420,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6421,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6489,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 8155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6506,
											"end": 8155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6941,
											"end": 6960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6941,
											"end": 6964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7101,
											"end": 7118,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7101,
											"end": 7127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7134,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7101,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7101,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7231,
											"end": 7871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7447,
											"end": 7464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7420,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7420,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7608,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7582,
											"end": 7608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7582,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7758,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7741,
											"end": 7780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7741,
											"end": 7794,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7856,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7871,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7231,
											"end": 7871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7982,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7991,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7965,
											"end": 7991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7965,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8143,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8144,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8089,
											"end": 8144,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 8155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 8155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 8155,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6506,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6117,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 8161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12190,
											"end": 12219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12211,
											"end": 12218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 12190,
											"end": 12219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12190,
											"end": 12219,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 12190,
											"end": 12219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12304,
											"end": 12328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12296,
											"end": 12328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12296,
											"end": 12328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15607,
											"end": 15618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 15710,
											"end": 15717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15689,
											"end": 15709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 15689,
											"end": 15718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 15689,
											"end": 15718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15814,
											"end": 15823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15824,
											"end": 15831,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15814,
											"end": 15832,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15854,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15814,
											"end": 15854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15868,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15483,
											"end": 15875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16258,
											"end": 16279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16350,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 16371,
											"end": 16378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16350,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 16350,
											"end": 16379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16350,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 16350,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16501,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16484,
											"end": 16502,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16511,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 16484,
											"end": 16511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16484,
											"end": 16518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16151,
											"end": 16525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 10910,
											"end": 10917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 10889,
											"end": 10918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10918,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 10889,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11035,
											"end": 11042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11025,
											"end": 11043,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11025,
											"end": 11058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11011,
											"end": 11058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11021,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11011,
											"end": 11058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11058,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11007,
											"end": 11207,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "88C3A11500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11159,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11159,
											"end": 11196,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11207,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11007,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA"
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11334,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11422,
											"end": 11429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11430,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11445,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11412,
											"end": 11445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11653,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11615,
											"end": 11622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11605,
											"end": 11629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "C8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11550,
											"end": 11663,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 11756,
											"end": 11766,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11739,
											"end": 11746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11753,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11729,
											"end": 11753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11729,
											"end": 11766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10764,
											"end": 11773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8879,
											"end": 8886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 8851,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8887,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8851,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8971,
											"end": 9002,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8971,
											"end": 9002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 9002,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8971,
											"end": 9002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 9002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8967,
											"end": 9075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "A388D26300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 9025,
											"end": 9064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9025,
											"end": 9064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8967,
											"end": 9075,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8967,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9182,
											"end": 9189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9172,
											"end": 9205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9151,
											"end": 9205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9151,
											"end": 9205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9151,
											"end": 9205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9147,
											"end": 9294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9265,
											"end": 9282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "CBC080CA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 9228,
											"end": 9283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9294,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9147,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA"
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9428,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9527,
											"end": 9534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9517,
											"end": 9550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 9577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13601,
											"end": 13616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13618,
											"end": 13629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13895,
											"end": 13899,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13888,
											"end": 13900,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 13888,
											"end": 13900,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13938,
											"end": 13942,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 13973,
											"end": 13983,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14040,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 13842,
											"end": 14066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13842,
											"end": 14066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13807,
											"end": 14088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13778,
											"end": 14106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13778,
											"end": 14106,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13722,
											"end": 14130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13722,
											"end": 14130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14273,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14227,
											"end": 14234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14227,
											"end": 14243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14243,
											"name": "EXTCODEHASH",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14273,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14217,
											"end": 14274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14217,
											"end": 14274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 14281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2564,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2534,
											"end": 2619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "99FAAA0400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2619,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2534,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2763,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2748,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2748,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2763,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2708,
											"end": 2889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "CB6E534400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2878,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2708,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3142,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 3142,
											"end": 3154,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3196,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3294,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3096,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3342,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3360,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3525,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "EXTCODEHASH",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3475,
											"end": 3668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 1,
											"value": "6328CCB200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3628,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3657,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3668,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3475,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3755,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "CREATE2",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4016,
											"end": 4039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 4179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4179,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "4397AF6128D529B8AE0442F99DB1296D5136062597A15BBC61C1B2A6431A7D15"
										},
										{
											"begin": 4278,
											"end": 4285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4267,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4298,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "C8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4447,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 4454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 4454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9997,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9997,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9997,
											"end": 10033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9997,
											"end": 10033,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9997,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10131,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10109,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 10109,
											"end": 10231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10212,
											"end": 10219,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "6B01361600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10183,
											"end": 10220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10183,
											"end": 10220,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10109,
											"end": 10231,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 10109,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "11A3CF439FB225BFE74225716B6774765670EC1060E3796802E62139D69974DA"
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10358,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10454,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10469,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10436,
											"end": 10469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10436,
											"end": 10482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9841,
											"end": 10489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18170,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18241,
											"end": 18270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 18262,
											"end": 18269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18241,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 18241,
											"end": 18270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18241,
											"end": 18270,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 18241,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18375,
											"end": 18382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18365,
											"end": 18383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18365,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18365,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18354,
											"end": 18392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14860,
											"end": 14882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14974,
											"end": 14981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 14953,
											"end": 14982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14982,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14953,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15096,
											"end": 15103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15104,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15086,
											"end": 15119,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 15126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12872,
											"end": 12881,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12882,
											"end": 12889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12872,
											"end": 12890,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12872,
											"end": 12894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12872,
											"end": 12894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12859,
											"end": 12894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12859,
											"end": 12894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 12981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12972,
											"end": 12982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12972,
											"end": 12982,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 12968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 12982,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12954,
											"end": 13027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "PUSH",
											"source": 1,
											"value": "4CA8209000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13005,
											"end": 13016,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13027,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 12954,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12654,
											"end": 13033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19976,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 19688,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19870,
											"end": 19871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19862,
											"end": 19872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19862,
											"end": 19872,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19846,
											"end": 19853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19836,
											"end": 19854,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19836,
											"end": 19858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19832,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 19832,
											"end": 19970,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "PUSH",
											"source": 1,
											"value": "4CA8209000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19948,
											"end": 19959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19832,
											"end": 19970,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 19832,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19688,
											"end": 19976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19515,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 19092,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19224,
											"end": 19253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 19245,
											"end": 19252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19224,
											"end": 19244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 19224,
											"end": 19253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19224,
											"end": 19253,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 19224,
											"end": 19253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19358,
											"end": 19376,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19358,
											"end": 19382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19344,
											"end": 19382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19354,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19344,
											"end": 19382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19344,
											"end": 19382,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19340,
											"end": 19509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 19340,
											"end": 19509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19490,
											"end": 19497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "D4ED9A1700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 19473,
											"end": 19498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19498,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19340,
											"end": 19509,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 19340,
											"end": 19509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "147"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2106,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2029,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2230,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2112,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2217,
											"end": 2222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2199,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2223,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 2199,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2397,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2380,
											"end": 2398,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2372,
											"end": 2398,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2372,
											"end": 2398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2452,
											"end": 2458,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2408,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2408,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2489,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2561,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2489,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2664,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2574,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2644,
											"end": 2657,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2626,
											"end": 2658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2664,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2786,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2670,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2740,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2740,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2740,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2720,
											"end": 2780,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2780,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2720,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2880,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2889,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2919,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2889,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2792,
											"end": 2925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3011,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3072,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3056,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3068,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3073,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3157,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3038,
											"end": 3157,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3076,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3076,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3076,
											"end": 3155,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 3076,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3038,
											"end": 3157,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 3038,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3266,
											"end": 3273,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3242,
											"end": 3264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3221,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3221,
											"end": 3274,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3221,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3211,
											"end": 3274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3167,
											"end": 3284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3394,
											"end": 3401,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3370,
											"end": 3392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3349,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 3349,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3402,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3495,
											"end": 3517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3477,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3527,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 3477,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3467,
											"end": 3527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3422,
											"end": 3537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3644,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3661,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3745,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3626,
											"end": 3745,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3664,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 3664,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3743,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 3664,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3626,
											"end": 3745,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 3626,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3843,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3809,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3862,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3809,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3799,
											"end": 3862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3755,
											"end": 3872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4016,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 4161,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 4289,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4342,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 4289,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4279,
											"end": 4342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4474,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4365,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4461,
											"end": 4466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4446,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4594,
											"end": 4603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4608,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4582,
											"end": 4608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4680,
											"end": 4681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4678,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4665,
											"end": 4682,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4618,
											"end": 4683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4683,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4618,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4801,
											"end": 4806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4783,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4807,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4783,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5032,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5008,
											"end": 5014,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4964,
											"end": 5035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4964,
											"end": 5035,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 4964,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4820,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5170,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5048,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5114,
											"end": 5119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5111,
											"end": 5146,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5101,
											"end": 5164,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5164,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5101,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5267,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5276,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5276,
											"end": 5309,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5276,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5176,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5417,
											"end": 5426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5404,
											"end": 5427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5432,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5435,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 5435,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5397,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5625,
											"end": 5632,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5601,
											"end": 5623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5580,
											"end": 5633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5580,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5570,
											"end": 5633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5526,
											"end": 5643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5811,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5786,
											"end": 5812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5822,
											"end": 5893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5893,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5822,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5965,
											"end": 5967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5947,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5903,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6086,
											"end": 6093,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6105,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 6113,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6303,
											"end": 6310,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6283,
											"end": 6292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 6258,
											"end": 6311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6258,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6204,
											"end": 6321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6360,
											"end": 6362,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6420,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6407,
											"end": 6429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6386,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6439,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6386,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6376,
											"end": 6439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 6456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6576,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 6462,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6557,
											"end": 6569,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6576,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 6713,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6746,
											"end": 6760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6731,
											"end": 6760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6731,
											"end": 6760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6582,
											"end": 6766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6904,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6772,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6862,
											"end": 6865,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6892,
											"end": 6896,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6883,
											"end": 6897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7018,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 6910,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 7005,
											"end": 7010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 6987,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6987,
											"end": 7011,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6987,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6982,
											"end": 6985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6910,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7114,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7114,
											"end": 7160,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 7114,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7192,
											"end": 7196,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7187,
											"end": 7190,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7024,
											"end": 7203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7279,
											"end": 7283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7294,
											"end": 7316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7294,
											"end": 7316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7209,
											"end": 7322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7477,
											"end": 7480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7506,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7554,
											"end": 7559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 7506,
											"end": 7560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7560,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7506,
											"end": 7560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7650,
											"end": 7653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 7576,
											"end": 7662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7576,
											"end": 7662,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7576,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7662,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7662,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7736,
											"end": 7741,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7686,
											"end": 7742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 7742,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7686,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7796,
											"end": 7797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7800,
											"end": 7813,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7889,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7968,
											"end": 7971,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7953,
											"end": 7966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7909,
											"end": 7972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7972,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 7909,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7972,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7972,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7995,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 8048,
											"end": 8054,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7995,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 7995,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7995,
											"end": 8055,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7995,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 8055,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7985,
											"end": 8055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 8065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7829,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7816,
											"end": 7830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7781,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7785,
											"end": 7799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8081,
											"end": 8084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8084,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 8090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 8090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 8090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 8090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8266,
											"end": 8275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8320,
											"end": 8324,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8336,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8290,
											"end": 8337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8457,
											"end": 8461,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8448,
											"end": 8454,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 8354,
											"end": 8462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8354,
											"end": 8462,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8354,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8568,
											"end": 8572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8591,
											"end": 8609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8583,
											"end": 8609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8687,
											"end": 8688,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8676,
											"end": 8685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8689,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8663,
											"end": 8669,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 8619,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8690,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8619,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8475,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8703,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 8703,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8828,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8848,
											"end": 8852,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 8845,
											"end": 8846,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8838,
											"end": 8853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8877,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 9069,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 8889,
											"end": 9069,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8937,
											"end": 9014,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 9015,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9034,
											"end": 9038,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9031,
											"end": 9032,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9024,
											"end": 9039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9058,
											"end": 9062,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9063,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9115,
											"end": 9119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 9153,
											"end": 9154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 9135,
											"end": 9155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 9135,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 9169,
											"end": 9189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 9169,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9189,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9213,
											"end": 9214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9206,
											"end": 9215,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9239,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9262,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9225,
											"end": 9262,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 9242,
											"end": 9260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 9242,
											"end": 9260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9225,
											"end": 9262,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 9225,
											"end": 9262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9075,
											"end": 9269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9275,
											"end": 9455,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 9275,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9400,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9420,
											"end": 9424,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 9417,
											"end": 9418,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9410,
											"end": 9425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9448,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9449,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9582,
											"end": 9586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9597,
											"end": 9623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9597,
											"end": 9623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9686,
											"end": 9703,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9677,
											"end": 9683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 9633,
											"end": 9704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9704,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9633,
											"end": 9704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9714,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9782,
											"end": 9784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9780,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9714,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 9714,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9714,
											"end": 9786,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 9714,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9461,
											"end": 9793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9799,
											"end": 9948,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 9799,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9835,
											"end": 9842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9941,
											"name": "PUSH",
											"source": 10,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9868,
											"end": 9873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9864,
											"end": 9942,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9853,
											"end": 9942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9799,
											"end": 9948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9799,
											"end": 9948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9799,
											"end": 9948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9799,
											"end": 9948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 10032,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 9954,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 9999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10021,
											"end": 10026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 10032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 10032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 10032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 10032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10191,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 10038,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10160,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10177,
											"end": 10182,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 10160,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10160,
											"end": 10183,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 10160,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10141,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 10141,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10136,
											"end": 10139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10038,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10291,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 10197,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10230,
											"end": 10238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10274,
											"end": 10276,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10270,
											"end": 10284,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10249,
											"end": 10284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10291,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10391,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 10297,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10336,
											"end": 10343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10365,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 10379,
											"end": 10384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 10365,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10365,
											"end": 10385,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 10365,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10354,
											"end": 10385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10497,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 10397,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 10465,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10465,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10503,
											"end": 10660,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 10503,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10628,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 10646,
											"end": 10651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 10628,
											"end": 10652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10652,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 10628,
											"end": 10652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 10608,
											"end": 10653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10608,
											"end": 10653,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10608,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10596,
											"end": 10654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10503,
											"end": 10660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10503,
											"end": 10660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10503,
											"end": 10660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10666,
											"end": 10745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10908,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 10751,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 10876,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 10894,
											"end": 10899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10876,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10876,
											"end": 10900,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 10876,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 10856,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10856,
											"end": 10901,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 10856,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10851,
											"end": 10854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11108,
											"end": 11111,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 11123,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11216,
											"end": 11219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11233,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11295,
											"end": 11301,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11233,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 11233,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11233,
											"end": 11308,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 11233,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11333,
											"end": 11335,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 11328,
											"end": 11331,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 11417,
											"end": 11420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 11346,
											"end": 11421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11421,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 11346,
											"end": 11421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11446,
											"end": 11448,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11437,
											"end": 11449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11430,
											"end": 11449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11521,
											"end": 11527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 11459,
											"end": 11534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11534,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 11459,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11554,
											"end": 11557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11543,
											"end": 11562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11579,
											"end": 11582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10914,
											"end": 11588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11715,
											"end": 11719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11753,
											"end": 11755,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11742,
											"end": 11751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11730,
											"end": 11756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 11834,
											"end": 11835,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11832,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11819,
											"end": 11836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11810,
											"end": 11816,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 11766,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 11766,
											"end": 11837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 11915,
											"end": 11917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11913,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11891,
											"end": 11897,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 11847,
											"end": 11919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 11847,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "A0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2751,
													"end": 2853,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2836,
													"end": 2846,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2822,
													"end": 2846,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH #[$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "CODECOPY",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "ASSIGNIMMUTABLE",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH #[$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "RETURN",
													"source": 0
												}
											],
											".data": {
												"0": {
													".auxdata": "a26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
													".code": [
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "CALLVALUE",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "tag",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "E0"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "SHR",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "4CE34AA2"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "899E104C"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "8DF25D92"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "C4E8FCB5"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "tag",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1078,
															"end": 10213,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "tag",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "7"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "8"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "9"
														},
														{
															"begin": 3602,
															"end": 4376,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "tag",
															"source": 0,
															"value": "8"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 3602,
															"end": 4376,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "tag",
															"source": 0,
															"value": "7"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 3602,
															"end": 4376,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "tag",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "tag",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "15"
														},
														{
															"begin": 6540,
															"end": 7672,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "tag",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "16"
														},
														{
															"begin": 6540,
															"end": 7672,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "tag",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "17"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 6540,
															"end": 7672,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "tag",
															"source": 0,
															"value": "17"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "tag",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "18"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "19"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 5137,
															"end": 5619,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "tag",
															"source": 0,
															"value": "19"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "21"
														},
														{
															"begin": 5137,
															"end": 5619,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "tag",
															"source": 0,
															"value": "18"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "22"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 5137,
															"end": 5619,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "tag",
															"source": 0,
															"value": "22"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "tag",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "25"
														},
														{
															"begin": 7905,
															"end": 8508,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "tag",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "26"
														},
														{
															"begin": 7905,
															"end": 8508,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "tag",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "tag",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3732,
															"end": 3749,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1695,
															"end": 1703,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 1671,
															"end": 1693,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1664,
															"end": 1704,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1816,
															"end": 1830,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1795,
															"end": 1814,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 1788,
															"end": 1831,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2037,
															"end": 2054,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2013,
															"end": 2035,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2003,
															"end": 2055,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 1997,
															"end": 2056,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "28"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 2267,
															"end": 2296,
															"name": "PUSH",
															"source": 0,
															"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2242,
															"end": 2265,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2235,
															"end": 2297,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2406,
															"end": 2414,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 2379,
															"end": 2404,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2372,
															"end": 2415,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2544,
															"end": 2570,
															"name": "PUSH",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 2519,
															"end": 2542,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2512,
															"end": 2571,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "tag",
															"source": 0,
															"value": "28"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3839,
															"end": 3869,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3872,
															"end": 3881,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 3872,
															"end": 3881,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 3872,
															"end": 3888,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3872,
															"end": 3888,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3839,
															"end": 3888,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3839,
															"end": 3888,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3943,
															"end": 3952,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "30"
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3962,
															"end": 3984,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3958,
															"end": 3959,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3958,
															"end": 3984,
															"modifierDepth": 1,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "31"
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 4077,
															"end": 4100,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 4087,
															"end": 4096,
															"modifierDepth": 1,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4096,
															"modifierDepth": 1,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 4097,
															"end": 4098,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "34"
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "35"
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "36"
														},
														{
															"begin": 4087,
															"end": 4099,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "35"
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "34"
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "C0"
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 4087,
															"end": 4099,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 4077,
															"end": 4086,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "37"
														},
														{
															"begin": 4077,
															"end": 4100,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 4077,
															"end": 4100,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 4077,
															"end": 4100,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 4219,
															"end": 4222,
															"modifierDepth": 1,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 4219,
															"end": 4222,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 4219,
															"end": 4222,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 4219,
															"end": 4222,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 4219,
															"end": 4222,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "30"
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "31"
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 3938,
															"end": 4247,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 4348,
															"end": 4369,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "4CE34AA2"
														},
														{
															"begin": 4348,
															"end": 4369,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "E0"
														},
														{
															"begin": 4348,
															"end": 4369,
															"modifierDepth": 1,
															"name": "SHL",
															"source": 0
														},
														{
															"begin": 4335,
															"end": 4369,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 4335,
															"end": 4369,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3755,
															"end": 4376,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3602,
															"end": 4376,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "tag",
															"source": 0,
															"value": "16"
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6733,
															"end": 6750,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1695,
															"end": 1703,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 1671,
															"end": 1693,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1664,
															"end": 1704,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1816,
															"end": 1830,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1795,
															"end": 1814,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 1788,
															"end": 1831,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2037,
															"end": 2054,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2013,
															"end": 2035,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2003,
															"end": 2055,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 1997,
															"end": 2056,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "39"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 2267,
															"end": 2296,
															"name": "PUSH",
															"source": 0,
															"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2242,
															"end": 2265,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2235,
															"end": 2297,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2406,
															"end": 2414,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 2379,
															"end": 2404,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2372,
															"end": 2415,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2544,
															"end": 2570,
															"name": "PUSH",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 2519,
															"end": 2542,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2512,
															"end": 2571,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "tag",
															"source": 0,
															"value": "39"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6836,
															"end": 6866,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 6869,
															"end": 6886,
															"modifierDepth": 1,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 6869,
															"end": 6886,
															"modifierDepth": 1,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 6869,
															"end": 6893,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6869,
															"end": 6893,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6836,
															"end": 6893,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 6836,
															"end": 6893,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6957,
															"end": 6966,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "41"
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6976,
															"end": 6998,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 6972,
															"end": 6973,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 6972,
															"end": 6998,
															"modifierDepth": 1,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "42"
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 7091,
															"end": 7122,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "44"
														},
														{
															"begin": 7101,
															"end": 7118,
															"modifierDepth": 1,
															"name": "DUP8",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7118,
															"modifierDepth": 1,
															"name": "DUP8",
															"source": 0
														},
														{
															"begin": 7119,
															"end": 7120,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "45"
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "46"
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "36"
														},
														{
															"begin": 7101,
															"end": 7121,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "46"
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "45"
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "C0"
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 7101,
															"end": 7121,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 7091,
															"end": 7100,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "37"
														},
														{
															"begin": 7091,
															"end": 7122,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7091,
															"end": 7122,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "44"
														},
														{
															"begin": 7091,
															"end": 7122,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7241,
															"end": 7244,
															"modifierDepth": 1,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 7241,
															"end": 7244,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 7241,
															"end": 7244,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 7241,
															"end": 7244,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 7241,
															"end": 7244,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "41"
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "42"
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 6952,
															"end": 7269,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 7484,
															"end": 7529,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "47"
														},
														{
															"begin": 7514,
															"end": 7528,
															"modifierDepth": 1,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 7514,
															"end": 7528,
															"modifierDepth": 1,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 7484,
															"end": 7513,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "48"
														},
														{
															"begin": 7484,
															"end": 7529,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7484,
															"end": 7529,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "47"
														},
														{
															"begin": 7484,
															"end": 7529,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 7631,
															"end": 7665,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "899E104C"
														},
														{
															"begin": 7631,
															"end": 7665,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "E0"
														},
														{
															"begin": 7631,
															"end": 7665,
															"modifierDepth": 1,
															"name": "SHL",
															"source": 0
														},
														{
															"begin": 7618,
															"end": 7665,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 7618,
															"end": 7665,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6752,
															"end": 7672,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP5",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "SWAP4",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 6540,
															"end": 7672,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "tag",
															"source": 0,
															"value": "21"
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5272,
															"end": 5289,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1695,
															"end": 1703,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 1671,
															"end": 1693,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1664,
															"end": 1704,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1816,
															"end": 1830,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1795,
															"end": 1814,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 1788,
															"end": 1831,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2037,
															"end": 2054,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2013,
															"end": 2035,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2003,
															"end": 2055,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 1997,
															"end": 2056,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "50"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 2267,
															"end": 2296,
															"name": "PUSH",
															"source": 0,
															"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2242,
															"end": 2265,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2235,
															"end": 2297,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2406,
															"end": 2414,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 2379,
															"end": 2404,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2372,
															"end": 2415,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2544,
															"end": 2570,
															"name": "PUSH",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 2519,
															"end": 2542,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2512,
															"end": 2571,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "tag",
															"source": 0,
															"value": "50"
														},
														{
															"begin": 1970,
															"end": 2585,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5435,
															"end": 5480,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "52"
														},
														{
															"begin": 5465,
															"end": 5479,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 5465,
															"end": 5479,
															"modifierDepth": 1,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 5435,
															"end": 5464,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "48"
														},
														{
															"begin": 5435,
															"end": 5480,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 5435,
															"end": 5480,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "52"
														},
														{
															"begin": 5435,
															"end": 5480,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 5582,
															"end": 5612,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "8DF25D92"
														},
														{
															"begin": 5582,
															"end": 5612,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "E0"
														},
														{
															"begin": 5582,
															"end": 5612,
															"modifierDepth": 1,
															"name": "SHL",
															"source": 0
														},
														{
															"begin": 5569,
															"end": 5612,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 5569,
															"end": 5612,
															"modifierDepth": 1,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 5137,
															"end": 5619,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "tag",
															"source": 0,
															"value": "26"
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8074,
															"end": 8085,
															"name": "PUSHIMMUTABLE",
															"source": 0,
															"value": "18"
														},
														{
															"begin": 8060,
															"end": 8085,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8060,
															"end": 8085,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8060,
															"end": 8070,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 8060,
															"end": 8085,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8060,
															"end": 8085,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8060,
															"end": 8085,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 8056,
															"end": 8138,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "54"
														},
														{
															"begin": 8056,
															"end": 8138,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "PUSH",
															"source": 0,
															"value": "6D5769BE00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8108,
															"end": 8127,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 8056,
															"end": 8138,
															"name": "tag",
															"source": 0,
															"value": "54"
														},
														{
															"begin": 8056,
															"end": 8138,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8253,
															"end": 8259,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8259,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8259,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8240,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8241,
															"end": 8248,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "EXP",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "DIV",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "PUSH",
															"source": 0,
															"value": "FF"
														},
														{
															"begin": 8231,
															"end": 8249,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8259,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8259,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8231,
															"end": 8259,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 8227,
															"end": 8333,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "55"
														},
														{
															"begin": 8227,
															"end": 8333,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 8306,
															"end": 8313,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8315,
															"end": 8321,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH",
															"source": 0,
															"value": "924E341E00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "56"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "57"
														},
														{
															"begin": 8282,
															"end": 8322,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "tag",
															"source": 0,
															"value": "56"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8282,
															"end": 8322,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 8227,
															"end": 8333,
															"name": "tag",
															"source": 0,
															"value": "55"
														},
														{
															"begin": 8227,
															"end": 8333,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8409,
															"end": 8415,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8397,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8398,
															"end": 8405,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8406,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "PUSH",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "EXP",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "PUSH",
															"source": 0,
															"value": "FF"
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "NOT",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "OR",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "SSTORE",
															"source": 0
														},
														{
															"begin": 8388,
															"end": 8415,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 8485,
															"end": 8492,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH",
															"source": 0,
															"value": "AE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2"
														},
														{
															"begin": 8494,
															"end": 8500,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "58"
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "59"
														},
														{
															"begin": 8470,
															"end": 8501,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "tag",
															"source": 0,
															"value": "58"
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8470,
															"end": 8501,
															"name": "LOG2",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 7905,
															"end": 8508,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8814,
															"end": 10211,
															"name": "tag",
															"source": 0,
															"value": "37"
														},
														{
															"begin": 8814,
															"end": 10211,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8980,
															"end": 9001,
															"name": "PUSH",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "61"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "62"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 8963,
															"end": 9001,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "tag",
															"source": 0,
															"value": "62"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "tag",
															"source": 0,
															"value": "61"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8967,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "64"
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "65"
														},
														{
															"begin": 8963,
															"end": 8976,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "tag",
															"source": 0,
															"value": "64"
														},
														{
															"begin": 8963,
															"end": 8976,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "66"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "67"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 8963,
															"end": 9001,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "tag",
															"source": 0,
															"value": "67"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "tag",
															"source": 0,
															"value": "66"
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8963,
															"end": 9001,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "68"
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9304,
															"end": 9370,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "69"
														},
														{
															"begin": 9326,
															"end": 9330,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "70"
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9326,
															"end": 9336,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "tag",
															"source": 0,
															"value": "70"
														},
														{
															"begin": 9326,
															"end": 9336,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9342,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "72"
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9338,
															"end": 9347,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "tag",
															"source": 0,
															"value": "72"
														},
														{
															"begin": 9338,
															"end": 9347,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9353,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "PUSH",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "73"
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9349,
															"end": 9356,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "tag",
															"source": 0,
															"value": "73"
														},
														{
															"begin": 9349,
															"end": 9356,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9358,
															"end": 9362,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 9358,
															"end": 9369,
															"name": "PUSH",
															"source": 0,
															"value": "A0"
														},
														{
															"begin": 9358,
															"end": 9369,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9358,
															"end": 9369,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 9304,
															"end": 9325,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "74"
														},
														{
															"begin": 9304,
															"end": 9370,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9304,
															"end": 9370,
															"name": "tag",
															"source": 0,
															"value": "69"
														},
														{
															"begin": 9304,
															"end": 9370,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "75"
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "68"
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9408,
															"end": 9430,
															"name": "PUSH",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "76"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "77"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 9391,
															"end": 9430,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "tag",
															"source": 0,
															"value": "77"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "tag",
															"source": 0,
															"value": "76"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9395,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "78"
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "65"
														},
														{
															"begin": 9391,
															"end": 9404,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "tag",
															"source": 0,
															"value": "78"
														},
														{
															"begin": 9391,
															"end": 9404,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "79"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 9391,
															"end": 9430,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "tag",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "tag",
															"source": 0,
															"value": "79"
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9391,
															"end": 9430,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "81"
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9535,
															"end": 9536,
															"name": "PUSH",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 9520,
															"end": 9524,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9520,
															"end": 9531,
															"name": "PUSH",
															"source": 0,
															"value": "A0"
														},
														{
															"begin": 9520,
															"end": 9531,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9520,
															"end": 9531,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 9520,
															"end": 9536,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 9516,
															"end": 9607,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "82"
														},
														{
															"begin": 9516,
															"end": 9607,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "PUSH",
															"source": 0,
															"value": "EFCC00B100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9563,
															"end": 9592,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 9516,
															"end": 9607,
															"name": "tag",
															"source": 0,
															"value": "82"
														},
														{
															"begin": 9516,
															"end": 9607,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9659,
															"end": 9808,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "83"
														},
														{
															"begin": 9699,
															"end": 9703,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "84"
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9699,
															"end": 9709,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "tag",
															"source": 0,
															"value": "84"
														},
														{
															"begin": 9699,
															"end": 9709,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9731,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "85"
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9727,
															"end": 9736,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "tag",
															"source": 0,
															"value": "85"
														},
														{
															"begin": 9727,
															"end": 9736,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9758,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "PUSH",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "86"
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9754,
															"end": 9761,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "tag",
															"source": 0,
															"value": "86"
														},
														{
															"begin": 9754,
															"end": 9761,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9779,
															"end": 9783,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 9779,
															"end": 9794,
															"name": "PUSH",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 9779,
															"end": 9794,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9779,
															"end": 9794,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 9659,
															"end": 9681,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "87"
														},
														{
															"begin": 9659,
															"end": 9808,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9659,
															"end": 9808,
															"name": "tag",
															"source": 0,
															"value": "83"
														},
														{
															"begin": 9659,
															"end": 9808,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "88"
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "81"
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9846,
															"end": 9869,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "89"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "90"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 9829,
															"end": 9869,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "tag",
															"source": 0,
															"value": "90"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "tag",
															"source": 0,
															"value": "89"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9833,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "91"
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "65"
														},
														{
															"begin": 9829,
															"end": 9842,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "tag",
															"source": 0,
															"value": "91"
														},
														{
															"begin": 9829,
															"end": 9842,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "GT",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "92"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "93"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "63"
														},
														{
															"begin": 9829,
															"end": 9869,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "tag",
															"source": 0,
															"value": "93"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "tag",
															"source": 0,
															"value": "92"
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9829,
															"end": 9869,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "94"
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 9924,
															"end": 10103,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "95"
														},
														{
															"begin": 9965,
															"end": 9969,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "96"
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9965,
															"end": 9975,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "tag",
															"source": 0,
															"value": "96"
														},
														{
															"begin": 9965,
															"end": 9975,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 9997,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "97"
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 9993,
															"end": 10002,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "tag",
															"source": 0,
															"value": "97"
														},
														{
															"begin": 9993,
															"end": 10002,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10024,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "PUSH",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "98"
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "71"
														},
														{
															"begin": 10020,
															"end": 10027,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "tag",
															"source": 0,
															"value": "98"
														},
														{
															"begin": 10020,
															"end": 10027,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 10045,
															"end": 10049,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 10045,
															"end": 10060,
															"name": "PUSH",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 10045,
															"end": 10060,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 10045,
															"end": 10060,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 10078,
															"end": 10082,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 10078,
															"end": 10089,
															"name": "PUSH",
															"source": 0,
															"value": "A0"
														},
														{
															"begin": 10078,
															"end": 10089,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 10078,
															"end": 10089,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 9924,
															"end": 9947,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "99"
														},
														{
															"begin": 9924,
															"end": 10103,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9924,
															"end": 10103,
															"name": "tag",
															"source": 0,
															"value": "95"
														},
														{
															"begin": 9924,
															"end": 10103,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "94"
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "PUSH",
															"source": 0,
															"value": "7932F1FC00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 10177,
															"end": 10194,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 9825,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "88"
														},
														{
															"begin": 9387,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "tag",
															"source": 0,
															"value": "75"
														},
														{
															"begin": 8959,
															"end": 10205,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 8814,
															"end": 10211,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 8814,
															"end": 10211,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 23697,
															"end": 35180,
															"name": "tag",
															"source": 8,
															"value": "48"
														},
														{
															"begin": 23697,
															"end": 35180,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 23926,
															"end": 23947,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 24213,
															"end": 24234,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 24493,
															"end": 24511,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 24763,
															"end": 24802,
															"name": "PUSH",
															"source": 8,
															"value": "2EB2C2D600000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 24709,
															"end": 24745,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 24685,
															"end": 24816,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 24910,
															"end": 24911,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "tag",
															"source": 8,
															"value": "102"
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 24932,
															"end": 24935,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 24929,
															"end": 24930,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 24926,
															"end": 24936,
															"name": "LT",
															"source": 8
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "104"
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 25311,
															"end": 25329,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 25298,
															"end": 25330,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 25264,
															"end": 25276,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 25239,
															"end": 25348,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 25445,
															"end": 25455,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 25432,
															"end": 25456,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 25549,
															"end": 25554,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 25537,
															"end": 25555,
															"name": "EXTCODESIZE",
															"source": 8
														},
														{
															"begin": 25527,
															"end": 25797,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "105"
														},
														{
															"begin": 25527,
															"end": 25797,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 25612,
															"end": 25638,
															"name": "PUSH",
															"source": 8,
															"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 25586,
															"end": 25610,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 25579,
															"end": 25639,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 25695,
															"end": 25700,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 25667,
															"end": 25693,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 25660,
															"end": 25701,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 25755,
															"end": 25778,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 25729,
															"end": 25753,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 25722,
															"end": 25779,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 25527,
															"end": 25797,
															"name": "tag",
															"source": 8,
															"value": "105"
														},
														{
															"begin": 25527,
															"end": 25797,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 25939,
															"end": 25981,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 25927,
															"end": 25937,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 25923,
															"end": 25982,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 25889,
															"end": 26000,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 26231,
															"end": 26238,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 26220,
															"end": 26229,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 26216,
															"end": 26239,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 26144,
															"end": 26194,
															"name": "PUSH",
															"source": 8,
															"value": "C0"
														},
														{
															"begin": 26119,
															"end": 26257,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 27544,
															"end": 27565,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 27398,
															"end": 27438,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 27346,
															"end": 27356,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 27301,
															"end": 27476,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 27251,
															"end": 27510,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 27215,
															"end": 27595,
															"name": "EQ",
															"source": 8
														},
														{
															"begin": 27043,
															"end": 27085,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 26897,
															"end": 26937,
															"name": "PUSH",
															"source": 8,
															"value": "60"
														},
														{
															"begin": 26845,
															"end": 26855,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 26800,
															"end": 26975,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 26750,
															"end": 27009,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 26714,
															"end": 27115,
															"name": "EQ",
															"source": 8
														},
														{
															"begin": 26631,
															"end": 27621,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 26556,
															"end": 26577,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 26544,
															"end": 26554,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 26540,
															"end": 26578,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 26527,
															"end": 26579,
															"name": "CALLDATALOAD",
															"source": 8
														},
														{
															"begin": 26488,
															"end": 26497,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 26456,
															"end": 26605,
															"name": "EQ",
															"source": 8
														},
														{
															"begin": 26371,
															"end": 27643,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 26343,
															"end": 27661,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 27752,
															"end": 27767,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 27749,
															"end": 28141,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 27749,
															"end": 28141,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "106"
														},
														{
															"begin": 27749,
															"end": 28141,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 27884,
															"end": 27925,
															"name": "PUSH",
															"source": 8,
															"value": "EBA2084C00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 27822,
															"end": 27858,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 27790,
															"end": 27947,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 28062,
															"end": 28101,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 28000,
															"end": 28036,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 27968,
															"end": 28123,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 27749,
															"end": 28141,
															"name": "tag",
															"source": 8,
															"value": "106"
														},
														{
															"begin": 27749,
															"end": 28141,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 28269,
															"end": 28276,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 28249,
															"end": 28267,
															"name": "DUP9",
															"source": 8
														},
														{
															"begin": 28245,
															"end": 28277,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 28223,
															"end": 28277,
															"name": "SWAP8",
															"source": 8
														},
														{
															"begin": 28223,
															"end": 28277,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 28532,
															"end": 28573,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 28473,
															"end": 28509,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 28461,
															"end": 28471,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 28457,
															"end": 28510,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 28408,
															"end": 28435,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 28374,
															"end": 28591,
															"name": "CALLDATACOPY",
															"source": 8
														},
														{
															"begin": 28820,
															"end": 28828,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 28809,
															"end": 28818,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 28805,
															"end": 28829,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 28795,
															"end": 28803,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 28791,
															"end": 28830,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 29098,
															"end": 29115,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 29031,
															"end": 29072,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 29002,
															"end": 29137,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 28943,
															"end": 28980,
															"name": "PUSH",
															"source": 8,
															"value": "A4"
														},
														{
															"begin": 28915,
															"end": 29155,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 29431,
															"end": 29432,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 29370,
															"end": 29387,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 29301,
															"end": 29344,
															"name": "PUSH",
															"source": 8,
															"value": "C4"
														},
														{
															"begin": 29272,
															"end": 29409,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 29244,
															"end": 29450,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 29659,
															"end": 29676,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 29596,
															"end": 29637,
															"name": "PUSH",
															"source": 8,
															"value": "C4"
														},
														{
															"begin": 29571,
															"end": 29694,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 29966,
															"end": 29983,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 29901,
															"end": 29943,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 29889,
															"end": 29899,
															"name": "DUP9",
															"source": 8
														},
														{
															"begin": 29885,
															"end": 29944,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 29825,
															"end": 29863,
															"name": "PUSH",
															"source": 8,
															"value": "C4"
														},
														{
															"begin": 29791,
															"end": 30001,
															"name": "CALLDATACOPY",
															"source": 8
														},
														{
															"begin": 30379,
															"end": 30380,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 30356,
															"end": 30357,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 30279,
															"end": 30295,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 30198,
															"end": 30234,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 30175,
															"end": 30176,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 30148,
															"end": 30153,
															"name": "DUP11",
															"source": 8
														},
														{
															"begin": 30121,
															"end": 30126,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 30095,
															"end": 30398,
															"name": "CALL",
															"source": 8
														},
														{
															"begin": 30471,
															"end": 30478,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 30461,
															"end": 34761,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "107"
														},
														{
															"begin": 30461,
															"end": 34761,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 30634,
															"end": 30650,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 30631,
															"end": 33627,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 30631,
															"end": 33627,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "108"
														},
														{
															"begin": 30631,
															"end": 33627,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 31106,
															"end": 31113,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 31062,
															"end": 31075,
															"name": "PUSH",
															"source": 8,
															"value": "1F"
														},
														{
															"begin": 31044,
															"end": 31060,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 31040,
															"end": 31076,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 31007,
															"end": 31139,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 31800,
															"end": 31807,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 31782,
															"end": 31798,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 31778,
															"end": 31808,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 31936,
															"end": 31951,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 31923,
															"end": 31934,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 31919,
															"end": 31952,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 32073,
															"end": 32083,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 32056,
															"end": 32071,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 32053,
															"end": 32084,
															"name": "GT",
															"source": 8
														},
														{
															"begin": 32050,
															"end": 33029,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 32050,
															"end": 33029,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "109"
														},
														{
															"begin": 32050,
															"end": 33029,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 32875,
															"end": 32901,
															"name": "PUSH",
															"source": 8,
															"value": "200"
														},
														{
															"begin": 32780,
															"end": 32790,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 32768,
															"end": 32778,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 32764,
															"end": 32791,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 32657,
															"end": 32672,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 32592,
															"end": 32607,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 32539,
															"end": 32718,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 32490,
															"end": 32833,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 32445,
															"end": 32939,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 32358,
															"end": 32369,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 32305,
															"end": 32315,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 32288,
															"end": 32303,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 32284,
															"end": 32316,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 32239,
															"end": 32407,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 32198,
															"end": 32973,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 32160,
															"end": 32164,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 32123,
															"end": 33003,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 32115,
															"end": 33003,
															"name": "SWAP1",
															"source": 8
														},
														{
															"begin": 32115,
															"end": 33003,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 32050,
															"end": 33029,
															"name": "tag",
															"source": 8,
															"value": "109"
														},
														{
															"begin": 32050,
															"end": 33029,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 33289,
															"end": 33294,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 33272,
															"end": 33286,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 33266,
															"end": 33270,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 33262,
															"end": 33287,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 33259,
															"end": 33295,
															"name": "LT",
															"source": 8
														},
														{
															"begin": 33256,
															"end": 33605,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 33256,
															"end": 33605,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "110"
														},
														{
															"begin": 33256,
															"end": 33605,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 33425,
															"end": 33441,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 33422,
															"end": 33423,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 33419,
															"end": 33420,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 33404,
															"end": 33442,
															"name": "RETURNDATACOPY",
															"source": 8
														},
														{
															"begin": 33562,
															"end": 33578,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 33559,
															"end": 33560,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 33552,
															"end": 33579,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 33256,
															"end": 33605,
															"name": "tag",
															"source": 8,
															"value": "110"
														},
														{
															"begin": 33256,
															"end": 33605,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 30651,
															"end": 33627,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 30651,
															"end": 33627,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 30651,
															"end": 33627,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 30631,
															"end": 33627,
															"name": "tag",
															"source": 8,
															"value": "108"
														},
														{
															"begin": 30631,
															"end": 33627,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 33756,
															"end": 33806,
															"name": "PUSH",
															"source": 8,
															"value": "AFC445E200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 33729,
															"end": 33730,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 33697,
															"end": 33828,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 33943,
															"end": 33948,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 33897,
															"end": 33941,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 33890,
															"end": 33949,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 34122,
															"end": 34167,
															"name": "PUSH",
															"source": 8,
															"value": "C0"
														},
														{
															"begin": 34060,
															"end": 34096,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 34028,
															"end": 34189,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 34446,
															"end": 34486,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 34440,
															"end": 34487,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 34403,
															"end": 34410,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 34370,
															"end": 34513,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 34304,
															"end": 34344,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 34272,
															"end": 34535,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 34726,
															"end": 34742,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 34723,
															"end": 34724,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 34716,
															"end": 34743,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 30461,
															"end": 34761,
															"name": "tag",
															"source": 8,
															"value": "107"
														},
														{
															"begin": 30461,
															"end": 34761,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24984,
															"end": 34775,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24967,
															"end": 24968,
															"name": "PUSH",
															"source": 8,
															"value": "1"
														},
														{
															"begin": 24964,
															"end": 24965,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 24960,
															"end": 24969,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 24955,
															"end": 24969,
															"name": "SWAP1",
															"source": 8
														},
														{
															"begin": 24955,
															"end": 24969,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "102"
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "tag",
															"source": 8,
															"value": "104"
														},
														{
															"begin": 24879,
															"end": 34775,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 24883,
															"end": 24925,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 35139,
															"end": 35163,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 35116,
															"end": 35137,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 35109,
															"end": 35164,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 23901,
															"end": 35174,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 23901,
															"end": 35174,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 23901,
															"end": 35174,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 23697,
															"end": 35180,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 23697,
															"end": 35180,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 23697,
															"end": 35180,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "tag",
															"source": 8,
															"value": "74"
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 1771,
															"end": 1792,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 1765,
															"end": 1793,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 1919,
															"end": 1947,
															"name": "PUSH",
															"source": 8,
															"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1891,
															"end": 1917,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 1884,
															"end": 1948,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 1997,
															"end": 2001,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 1968,
															"end": 1995,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 1961,
															"end": 2002,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 2049,
															"end": 2051,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 2022,
															"end": 2047,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 2015,
															"end": 2052,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 2103,
															"end": 2109,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 2072,
															"end": 2101,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 2065,
															"end": 2110,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 2797,
															"end": 2804,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 2778,
															"end": 2779,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 2735,
															"end": 2760,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 2691,
															"end": 2717,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 2672,
															"end": 2673,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 2649,
															"end": 2654,
															"name": "DUP10",
															"source": 8
														},
														{
															"begin": 2626,
															"end": 2631,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 2604,
															"end": 2818,
															"name": "CALL",
															"source": 8
														},
														{
															"begin": 3295,
															"end": 3305,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 3242,
															"end": 3258,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 3235,
															"end": 3259,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 3209,
															"end": 3211,
															"name": "PUSH",
															"source": 8,
															"value": "1F"
														},
														{
															"begin": 3191,
															"end": 3207,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 3188,
															"end": 3212,
															"name": "GT",
															"source": 8
														},
														{
															"begin": 3184,
															"end": 3185,
															"name": "PUSH",
															"source": 8,
															"value": "1"
														},
														{
															"begin": 3180,
															"end": 3181,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 3174,
															"end": 3182,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 3171,
															"end": 3186,
															"name": "EQ",
															"source": 8
														},
														{
															"begin": 3167,
															"end": 3213,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 3143,
															"end": 3277,
															"name": "OR",
															"source": 8
														},
														{
															"begin": 2927,
															"end": 3319,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 3680,
															"end": 3696,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 3673,
															"end": 3697,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 3666,
															"end": 3698,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 3657,
															"end": 3664,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 3653,
															"end": 3699,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 3643,
															"end": 10753,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "112"
														},
														{
															"begin": 3643,
															"end": 10753,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 4001,
															"end": 4008,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 3991,
															"end": 3996,
															"name": "DUP8",
															"source": 8
														},
														{
															"begin": 3979,
															"end": 3997,
															"name": "EXTCODESIZE",
															"source": 8
														},
														{
															"begin": 3972,
															"end": 3998,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 3965,
															"end": 3999,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 3961,
															"end": 4009,
															"name": "AND",
															"source": 8
														},
														{
															"begin": 3951,
															"end": 10533,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "113"
														},
														{
															"begin": 3951,
															"end": 10533,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 4090,
															"end": 4097,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 4080,
															"end": 10212,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "114"
														},
														{
															"begin": 4080,
															"end": 10212,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 4189,
															"end": 4199,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 4179,
															"end": 8938,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "115"
														},
														{
															"begin": 4179,
															"end": 8938,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 4379,
															"end": 4395,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 4376,
															"end": 7698,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 4376,
															"end": 7698,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "116"
														},
														{
															"begin": 4376,
															"end": 7698,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 4946,
															"end": 4953,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 4894,
															"end": 4907,
															"name": "PUSH",
															"source": 8,
															"value": "1F"
														},
														{
															"begin": 4876,
															"end": 4892,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 4872,
															"end": 4908,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 4831,
															"end": 4987,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 5352,
															"end": 5359,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 5340,
															"end": 5350,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 5336,
															"end": 5360,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 5504,
															"end": 5519,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 5491,
															"end": 5502,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 5487,
															"end": 5520,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 5657,
															"end": 5667,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 5640,
															"end": 5655,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 5637,
															"end": 5668,
															"name": "GT",
															"source": 8
														},
														{
															"begin": 5634,
															"end": 6927,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 5634,
															"end": 6927,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "117"
														},
														{
															"begin": 5634,
															"end": 6927,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 6741,
															"end": 6767,
															"name": "PUSH",
															"source": 8,
															"value": "200"
														},
														{
															"begin": 6630,
															"end": 6640,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 6618,
															"end": 6628,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 6614,
															"end": 6641,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 6491,
															"end": 6506,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 6418,
															"end": 6433,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 6357,
															"end": 6560,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 6300,
															"end": 6691,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 6247,
															"end": 6813,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 6144,
															"end": 6155,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 6034,
															"end": 6044,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 5965,
															"end": 5980,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 5908,
															"end": 6094,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 5855,
															"end": 6201,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 5806,
															"end": 6855,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 5760,
															"end": 5764,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 5715,
															"end": 6893,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 5707,
															"end": 6893,
															"name": "SWAP1",
															"source": 8
														},
														{
															"begin": 5707,
															"end": 6893,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 5634,
															"end": 6927,
															"name": "tag",
															"source": 8,
															"value": "117"
														},
														{
															"begin": 5634,
															"end": 6927,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 7219,
															"end": 7224,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 7202,
															"end": 7216,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 7196,
															"end": 7200,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 7192,
															"end": 7217,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 7189,
															"end": 7225,
															"name": "LT",
															"source": 8
														},
														{
															"begin": 7186,
															"end": 7668,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 7186,
															"end": 7668,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "118"
														},
														{
															"begin": 7186,
															"end": 7668,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 7417,
															"end": 7433,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 7414,
															"end": 7415,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 7411,
															"end": 7412,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 7396,
															"end": 7434,
															"name": "RETURNDATACOPY",
															"source": 8
														},
														{
															"begin": 7617,
															"end": 7633,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 7614,
															"end": 7615,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 7607,
															"end": 7634,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 7186,
															"end": 7668,
															"name": "tag",
															"source": 8,
															"value": "118"
														},
														{
															"begin": 7186,
															"end": 7668,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 4396,
															"end": 7698,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 4396,
															"end": 7698,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 4396,
															"end": 7698,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 4376,
															"end": 7698,
															"name": "tag",
															"source": 8,
															"value": "116"
														},
														{
															"begin": 4376,
															"end": 7698,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 7921,
															"end": 7964,
															"name": "PUSH",
															"source": 8,
															"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 7846,
															"end": 7887,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 7806,
															"end": 7994,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8140,
															"end": 8145,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 8063,
															"end": 8106,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 8023,
															"end": 8175,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8320,
															"end": 8324,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 8244,
															"end": 8286,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 8204,
															"end": 8354,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8432,
															"end": 8434,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 8390,
															"end": 8430,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 8383,
															"end": 8435,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8513,
															"end": 8514,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 8471,
															"end": 8511,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 8464,
															"end": 8515,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8662,
															"end": 8668,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 8584,
															"end": 8628,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 8544,
															"end": 8698,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 8842,
															"end": 8882,
															"name": "PUSH",
															"source": 8,
															"value": "A4"
														},
														{
															"begin": 8767,
															"end": 8808,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 8727,
															"end": 8912,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 4179,
															"end": 8938,
															"name": "tag",
															"source": 8,
															"value": "115"
														},
														{
															"begin": 4179,
															"end": 8938,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 9227,
															"end": 9276,
															"name": "PUSH",
															"source": 8,
															"value": "9889192300000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 9150,
															"end": 9197,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 9114,
															"end": 9302,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 9442,
															"end": 9447,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 9363,
															"end": 9412,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 9327,
															"end": 9473,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 9612,
															"end": 9616,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 9534,
															"end": 9582,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 9498,
															"end": 9642,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 9779,
															"end": 9781,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 9703,
															"end": 9749,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 9667,
															"end": 9807,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 9948,
															"end": 9954,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 9868,
															"end": 9918,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 9832,
															"end": 9980,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 10118,
															"end": 10164,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 10041,
															"end": 10088,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 10005,
															"end": 10190,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 4080,
															"end": 10212,
															"name": "tag",
															"source": 8,
															"value": "114"
														},
														{
															"begin": 4080,
															"end": 10212,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 10348,
															"end": 10374,
															"name": "PUSH",
															"source": 8,
															"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 10322,
															"end": 10346,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 10315,
															"end": 10375,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 10431,
															"end": 10436,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 10403,
															"end": 10429,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 10396,
															"end": 10437,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 10491,
															"end": 10514,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 10465,
															"end": 10489,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 10458,
															"end": 10515,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 3951,
															"end": 10533,
															"name": "tag",
															"source": 8,
															"value": "113"
														},
														{
															"begin": 3951,
															"end": 10533,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 3643,
															"end": 10753,
															"name": "tag",
															"source": 8,
															"value": "112"
														},
														{
															"begin": 3643,
															"end": 10753,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 10854,
															"end": 10864,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 10831,
															"end": 10852,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 10824,
															"end": 10865,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 10942,
															"end": 10943,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 10932,
															"end": 10940,
															"name": "PUSH",
															"source": 8,
															"value": "60"
														},
														{
															"begin": 10925,
															"end": 10944,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 1573,
															"end": 10954,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1573,
															"end": 10954,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1573,
															"end": 10954,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 1345,
															"end": 10960,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "tag",
															"source": 8,
															"value": "87"
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 11883,
															"end": 11888,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 11871,
															"end": 11889,
															"name": "EXTCODESIZE",
															"source": 8
														},
														{
															"begin": 11861,
															"end": 12115,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "120"
														},
														{
															"begin": 11861,
															"end": 12115,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 11942,
															"end": 11968,
															"name": "PUSH",
															"source": 8,
															"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 11916,
															"end": 11940,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 11909,
															"end": 11969,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12021,
															"end": 12026,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 11993,
															"end": 12019,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 11986,
															"end": 12027,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12077,
															"end": 12100,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 12051,
															"end": 12075,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 12044,
															"end": 12101,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 11861,
															"end": 12115,
															"name": "tag",
															"source": 8,
															"value": "120"
														},
														{
															"begin": 11861,
															"end": 12115,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 12313,
															"end": 12334,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 12307,
															"end": 12335,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 12459,
															"end": 12488,
															"name": "PUSH",
															"source": 8,
															"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 12430,
															"end": 12457,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 12423,
															"end": 12489,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12539,
															"end": 12543,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 12509,
															"end": 12537,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 12502,
															"end": 12544,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12592,
															"end": 12594,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 12564,
															"end": 12590,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 12557,
															"end": 12595,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12643,
															"end": 12653,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 12615,
															"end": 12641,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 12608,
															"end": 12654,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 12933,
															"end": 12934,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 12914,
															"end": 12915,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 12870,
															"end": 12896,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 12825,
															"end": 12852,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 12806,
															"end": 12807,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 12783,
															"end": 12788,
															"name": "DUP10",
															"source": 8
														},
														{
															"begin": 12760,
															"end": 12765,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 12738,
															"end": 12948,
															"name": "CALL",
															"source": 8
														},
														{
															"begin": 13013,
															"end": 13020,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 13003,
															"end": 16271,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "121"
														},
														{
															"begin": 13003,
															"end": 16271,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 13164,
															"end": 13180,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 13161,
															"end": 15489,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 13161,
															"end": 15489,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "122"
														},
														{
															"begin": 13161,
															"end": 15489,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 13606,
															"end": 13613,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 13566,
															"end": 13579,
															"name": "PUSH",
															"source": 8,
															"value": "1F"
														},
														{
															"begin": 13548,
															"end": 13564,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 13544,
															"end": 13580,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 13515,
															"end": 13635,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 13917,
															"end": 13924,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 13905,
															"end": 13915,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 13901,
															"end": 13925,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 14045,
															"end": 14060,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 14032,
															"end": 14043,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 14028,
															"end": 14061,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 14174,
															"end": 14184,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 14157,
															"end": 14172,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 14154,
															"end": 14185,
															"name": "GT",
															"source": 8
														},
														{
															"begin": 14151,
															"end": 14920,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 14151,
															"end": 14920,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "123"
														},
														{
															"begin": 14151,
															"end": 14920,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 14782,
															"end": 14808,
															"name": "PUSH",
															"source": 8,
															"value": "200"
														},
														{
															"begin": 14695,
															"end": 14705,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 14683,
															"end": 14693,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 14679,
															"end": 14706,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 14621,
															"end": 14636,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 14604,
															"end": 14619,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 14600,
															"end": 14637,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 14555,
															"end": 14744,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 14514,
															"end": 14842,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 14435,
															"end": 14446,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 14386,
															"end": 14396,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 14369,
															"end": 14384,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 14365,
															"end": 14397,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 14324,
															"end": 14480,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 14287,
															"end": 14872,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 14253,
															"end": 14257,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 14220,
															"end": 14898,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 14212,
															"end": 14898,
															"name": "SWAP1",
															"source": 8
														},
														{
															"begin": 14212,
															"end": 14898,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 14151,
															"end": 14920,
															"name": "tag",
															"source": 8,
															"value": "123"
														},
														{
															"begin": 14151,
															"end": 14920,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 15164,
															"end": 15169,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 15147,
															"end": 15161,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 15141,
															"end": 15145,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 15137,
															"end": 15162,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 15134,
															"end": 15170,
															"name": "LT",
															"source": 8
														},
														{
															"begin": 15131,
															"end": 15471,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 15131,
															"end": 15471,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "124"
														},
														{
															"begin": 15131,
															"end": 15471,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 15299,
															"end": 15315,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 15296,
															"end": 15297,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 15293,
															"end": 15294,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 15278,
															"end": 15316,
															"name": "RETURNDATACOPY",
															"source": 8
														},
														{
															"begin": 15432,
															"end": 15448,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 15429,
															"end": 15430,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 15422,
															"end": 15449,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 15131,
															"end": 15471,
															"name": "tag",
															"source": 8,
															"value": "124"
														},
														{
															"begin": 15131,
															"end": 15471,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 13181,
															"end": 15489,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 13181,
															"end": 15489,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 13181,
															"end": 15489,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 13161,
															"end": 15489,
															"name": "tag",
															"source": 8,
															"value": "122"
														},
														{
															"begin": 13161,
															"end": 15489,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 15664,
															"end": 15707,
															"name": "PUSH",
															"source": 8,
															"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 15601,
															"end": 15642,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 15573,
															"end": 15725,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 15794,
															"end": 15799,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 15749,
															"end": 15792,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 15742,
															"end": 15800,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 15868,
															"end": 15872,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 15824,
															"end": 15866,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 15817,
															"end": 15873,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 15939,
															"end": 15941,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 15897,
															"end": 15937,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 15890,
															"end": 15942,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 16008,
															"end": 16018,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 15966,
															"end": 16006,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 15959,
															"end": 16019,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 16089,
															"end": 16090,
															"name": "PUSH",
															"source": 8,
															"value": "1"
														},
														{
															"begin": 16043,
															"end": 16087,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 16036,
															"end": 16091,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 16199,
															"end": 16239,
															"name": "PUSH",
															"source": 8,
															"value": "A4"
														},
														{
															"begin": 16136,
															"end": 16177,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 16108,
															"end": 16257,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 13003,
															"end": 16271,
															"name": "tag",
															"source": 8,
															"value": "121"
														},
														{
															"begin": 13003,
															"end": 16271,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 16372,
															"end": 16382,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 16349,
															"end": 16370,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 16342,
															"end": 16383,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 16460,
															"end": 16461,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 16450,
															"end": 16458,
															"name": "PUSH",
															"source": 8,
															"value": "60"
														},
														{
															"begin": 16443,
															"end": 16462,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 11798,
															"end": 16472,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11798,
															"end": 16472,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 11564,
															"end": 16478,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "tag",
															"source": 8,
															"value": "99"
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 17471,
															"end": 17476,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 17459,
															"end": 17477,
															"name": "EXTCODESIZE",
															"source": 8
														},
														{
															"begin": 17449,
															"end": 17703,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "126"
														},
														{
															"begin": 17449,
															"end": 17703,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 17530,
															"end": 17556,
															"name": "PUSH",
															"source": 8,
															"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 17504,
															"end": 17528,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 17497,
															"end": 17557,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 17609,
															"end": 17614,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 17581,
															"end": 17607,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 17574,
															"end": 17615,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 17665,
															"end": 17688,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 17639,
															"end": 17663,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 17632,
															"end": 17689,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 17449,
															"end": 17703,
															"name": "tag",
															"source": 8,
															"value": "126"
														},
														{
															"begin": 17449,
															"end": 17703,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 17895,
															"end": 17916,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 17889,
															"end": 17917,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 17952,
															"end": 17960,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 17946,
															"end": 17961,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 17996,
															"end": 18004,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 17990,
															"end": 18005,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 18040,
															"end": 18048,
															"name": "PUSH",
															"source": 8,
															"value": "C0"
														},
														{
															"begin": 18034,
															"end": 18049,
															"name": "MLOAD",
															"source": 8
														},
														{
															"begin": 18215,
															"end": 18249,
															"name": "PUSH",
															"source": 8,
															"value": "F242432A00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 18165,
															"end": 18197,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 18141,
															"end": 18263,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18318,
															"end": 18322,
															"name": "DUP8",
															"source": 8
														},
														{
															"begin": 18283,
															"end": 18316,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 18276,
															"end": 18323,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18376,
															"end": 18378,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 18343,
															"end": 18374,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 18336,
															"end": 18379,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18432,
															"end": 18442,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 18399,
															"end": 18430,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 18392,
															"end": 18443,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18500,
															"end": 18506,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 18463,
															"end": 18498,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 18456,
															"end": 18507,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18602,
															"end": 18645,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 18544,
															"end": 18584,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 18520,
															"end": 18659,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 18721,
															"end": 18722,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 18679,
															"end": 18719,
															"name": "PUSH",
															"source": 8,
															"value": "A4"
														},
														{
															"begin": 18672,
															"end": 18723,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 19012,
															"end": 19013,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 18993,
															"end": 18994,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 18944,
															"end": 18975,
															"name": "PUSH",
															"source": 8,
															"value": "C4"
														},
														{
															"begin": 18894,
															"end": 18926,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 18875,
															"end": 18876,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 18852,
															"end": 18857,
															"name": "DUP14",
															"source": 8
														},
														{
															"begin": 18829,
															"end": 18834,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 18807,
															"end": 19027,
															"name": "CALL",
															"source": 8
														},
														{
															"begin": 19092,
															"end": 19099,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 19082,
															"end": 22355,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "127"
														},
														{
															"begin": 19082,
															"end": 22355,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 19243,
															"end": 19259,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 19240,
															"end": 21568,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 19240,
															"end": 21568,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "128"
														},
														{
															"begin": 19240,
															"end": 21568,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 19685,
															"end": 19692,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 19645,
															"end": 19658,
															"name": "PUSH",
															"source": 8,
															"value": "1F"
														},
														{
															"begin": 19627,
															"end": 19643,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 19623,
															"end": 19659,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 19594,
															"end": 19714,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 19996,
															"end": 20003,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 19984,
															"end": 19994,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 19980,
															"end": 20004,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 20124,
															"end": 20139,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 20111,
															"end": 20122,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 20107,
															"end": 20140,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 20253,
															"end": 20263,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 20236,
															"end": 20251,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 20233,
															"end": 20264,
															"name": "GT",
															"source": 8
														},
														{
															"begin": 20230,
															"end": 20999,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 20230,
															"end": 20999,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "129"
														},
														{
															"begin": 20230,
															"end": 20999,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 20861,
															"end": 20887,
															"name": "PUSH",
															"source": 8,
															"value": "200"
														},
														{
															"begin": 20774,
															"end": 20784,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 20762,
															"end": 20772,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 20758,
															"end": 20785,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 20700,
															"end": 20715,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 20683,
															"end": 20698,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 20679,
															"end": 20716,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 20634,
															"end": 20823,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 20593,
															"end": 20921,
															"name": "DIV",
															"source": 8
														},
														{
															"begin": 20514,
															"end": 20525,
															"name": "PUSH",
															"source": 8,
															"value": "3"
														},
														{
															"begin": 20465,
															"end": 20475,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 20448,
															"end": 20463,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 20444,
															"end": 20476,
															"name": "SUB",
															"source": 8
														},
														{
															"begin": 20403,
															"end": 20559,
															"name": "MUL",
															"source": 8
														},
														{
															"begin": 20366,
															"end": 20951,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 20332,
															"end": 20336,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 20299,
															"end": 20977,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 20291,
															"end": 20977,
															"name": "SWAP1",
															"source": 8
														},
														{
															"begin": 20291,
															"end": 20977,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 20230,
															"end": 20999,
															"name": "tag",
															"source": 8,
															"value": "129"
														},
														{
															"begin": 20230,
															"end": 20999,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 21243,
															"end": 21248,
															"name": "GAS",
															"source": 8
														},
														{
															"begin": 21226,
															"end": 21240,
															"name": "PUSH",
															"source": 8,
															"value": "20"
														},
														{
															"begin": 21220,
															"end": 21224,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 21216,
															"end": 21241,
															"name": "ADD",
															"source": 8
														},
														{
															"begin": 21213,
															"end": 21249,
															"name": "LT",
															"source": 8
														},
														{
															"begin": 21210,
															"end": 21550,
															"name": "ISZERO",
															"source": 8
														},
														{
															"begin": 21210,
															"end": 21550,
															"name": "PUSH [tag]",
															"source": 8,
															"value": "130"
														},
														{
															"begin": 21210,
															"end": 21550,
															"name": "JUMPI",
															"source": 8
														},
														{
															"begin": 21378,
															"end": 21394,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 21375,
															"end": 21376,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 21372,
															"end": 21373,
															"name": "DUP1",
															"source": 8
														},
														{
															"begin": 21357,
															"end": 21395,
															"name": "RETURNDATACOPY",
															"source": 8
														},
														{
															"begin": 21511,
															"end": 21527,
															"name": "RETURNDATASIZE",
															"source": 8
														},
														{
															"begin": 21508,
															"end": 21509,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 21501,
															"end": 21528,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 21210,
															"end": 21550,
															"name": "tag",
															"source": 8,
															"value": "130"
														},
														{
															"begin": 21210,
															"end": 21550,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 19260,
															"end": 21568,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 19260,
															"end": 21568,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 19260,
															"end": 21568,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 19240,
															"end": 21568,
															"name": "tag",
															"source": 8,
															"value": "128"
														},
														{
															"begin": 19240,
															"end": 21568,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 21743,
															"end": 21786,
															"name": "PUSH",
															"source": 8,
															"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 21680,
															"end": 21721,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 21652,
															"end": 21804,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 21873,
															"end": 21878,
															"name": "DUP10",
															"source": 8
														},
														{
															"begin": 21828,
															"end": 21871,
															"name": "PUSH",
															"source": 8,
															"value": "4"
														},
														{
															"begin": 21821,
															"end": 21879,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 21947,
															"end": 21951,
															"name": "DUP9",
															"source": 8
														},
														{
															"begin": 21903,
															"end": 21945,
															"name": "PUSH",
															"source": 8,
															"value": "24"
														},
														{
															"begin": 21896,
															"end": 21952,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22018,
															"end": 22020,
															"name": "DUP8",
															"source": 8
														},
														{
															"begin": 21976,
															"end": 22016,
															"name": "PUSH",
															"source": 8,
															"value": "44"
														},
														{
															"begin": 21969,
															"end": 22021,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22087,
															"end": 22097,
															"name": "DUP7",
															"source": 8
														},
														{
															"begin": 22045,
															"end": 22085,
															"name": "PUSH",
															"source": 8,
															"value": "64"
														},
														{
															"begin": 22038,
															"end": 22098,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22168,
															"end": 22174,
															"name": "DUP6",
															"source": 8
														},
														{
															"begin": 22122,
															"end": 22166,
															"name": "PUSH",
															"source": 8,
															"value": "84"
														},
														{
															"begin": 22115,
															"end": 22175,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22283,
															"end": 22323,
															"name": "PUSH",
															"source": 8,
															"value": "A4"
														},
														{
															"begin": 22220,
															"end": 22261,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 22192,
															"end": 22341,
															"name": "REVERT",
															"source": 8
														},
														{
															"begin": 19082,
															"end": 22355,
															"name": "tag",
															"source": 8,
															"value": "127"
														},
														{
															"begin": 19082,
															"end": 22355,
															"name": "JUMPDEST",
															"source": 8
														},
														{
															"begin": 22386,
															"end": 22394,
															"name": "DUP4",
															"source": 8
														},
														{
															"begin": 22376,
															"end": 22384,
															"name": "PUSH",
															"source": 8,
															"value": "80"
														},
														{
															"begin": 22369,
															"end": 22395,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22447,
															"end": 22455,
															"name": "DUP3",
															"source": 8
														},
														{
															"begin": 22437,
															"end": 22445,
															"name": "PUSH",
															"source": 8,
															"value": "A0"
														},
														{
															"begin": 22430,
															"end": 22456,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22508,
															"end": 22516,
															"name": "DUP2",
															"source": 8
														},
														{
															"begin": 22498,
															"end": 22506,
															"name": "PUSH",
															"source": 8,
															"value": "C0"
														},
														{
															"begin": 22491,
															"end": 22517,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22640,
															"end": 22650,
															"name": "DUP5",
															"source": 8
														},
														{
															"begin": 22617,
															"end": 22638,
															"name": "PUSH",
															"source": 8,
															"value": "40"
														},
														{
															"begin": 22610,
															"end": 22651,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 22728,
															"end": 22729,
															"name": "PUSH",
															"source": 8,
															"value": "0"
														},
														{
															"begin": 22718,
															"end": 22726,
															"name": "PUSH",
															"source": 8,
															"value": "60"
														},
														{
															"begin": 22711,
															"end": 22730,
															"name": "MSTORE",
															"source": 8
														},
														{
															"begin": 17386,
															"end": 22740,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17386,
															"end": 22740,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17386,
															"end": 22740,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17386,
															"end": 22740,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17386,
															"end": 22740,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"name": "POP",
															"source": 8
														},
														{
															"begin": 17126,
															"end": 22746,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 8
														},
														{
															"begin": 88,
															"end": 205,
															"name": "tag",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 88,
															"end": 205,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 197,
															"end": 198,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 194,
															"end": 195,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 187,
															"end": 199,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 211,
															"end": 328,
															"name": "tag",
															"source": 10,
															"value": "133"
														},
														{
															"begin": 211,
															"end": 328,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 320,
															"end": 321,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 317,
															"end": 318,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 310,
															"end": 322,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 334,
															"end": 451,
															"name": "tag",
															"source": 10,
															"value": "134"
														},
														{
															"begin": 334,
															"end": 451,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 443,
															"end": 444,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 440,
															"end": 441,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 433,
															"end": 445,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 457,
															"end": 574,
															"name": "tag",
															"source": 10,
															"value": "135"
														},
														{
															"begin": 457,
															"end": 574,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 566,
															"end": 567,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 563,
															"end": 564,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 556,
															"end": 568,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 580,
															"end": 697,
															"name": "tag",
															"source": 10,
															"value": "136"
														},
														{
															"begin": 580,
															"end": 697,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 689,
															"end": 690,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 686,
															"end": 687,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 679,
															"end": 691,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "tag",
															"source": 10,
															"value": "137"
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 843,
															"end": 851,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 853,
															"end": 859,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 903,
															"end": 906,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 896,
															"end": 900,
															"name": "PUSH",
															"source": 10,
															"value": "1F"
														},
														{
															"begin": 888,
															"end": 894,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 884,
															"end": 901,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 880,
															"end": 907,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 870,
															"end": 992,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "160"
														},
														{
															"begin": 870,
															"end": 992,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 911,
															"end": 990,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "161"
														},
														{
															"begin": 911,
															"end": 990,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "134"
														},
														{
															"begin": 911,
															"end": 990,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 911,
															"end": 990,
															"name": "tag",
															"source": 10,
															"value": "161"
														},
														{
															"begin": 911,
															"end": 990,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 870,
															"end": 992,
															"name": "tag",
															"source": 10,
															"value": "160"
														},
														{
															"begin": 870,
															"end": 992,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1024,
															"end": 1030,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 1011,
															"end": 1031,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 1001,
															"end": 1031,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1001,
															"end": 1031,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1054,
															"end": 1072,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1046,
															"end": 1052,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1043,
															"end": 1073,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 1040,
															"end": 1157,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1040,
															"end": 1157,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "162"
														},
														{
															"begin": 1040,
															"end": 1157,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 1076,
															"end": 1155,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "163"
														},
														{
															"begin": 1076,
															"end": 1155,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "135"
														},
														{
															"begin": 1076,
															"end": 1155,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1076,
															"end": 1155,
															"name": "tag",
															"source": 10,
															"value": "163"
														},
														{
															"begin": 1076,
															"end": 1155,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1040,
															"end": 1157,
															"name": "tag",
															"source": 10,
															"value": "162"
														},
														{
															"begin": 1040,
															"end": 1157,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1190,
															"end": 1194,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1182,
															"end": 1188,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 1178,
															"end": 1195,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1166,
															"end": 1195,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 1166,
															"end": 1195,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1244,
															"end": 1247,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 1236,
															"end": 1240,
															"name": "PUSH",
															"source": 10,
															"value": "C0"
														},
														{
															"begin": 1228,
															"end": 1234,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 1224,
															"end": 1241,
															"name": "MUL",
															"source": 10
														},
														{
															"begin": 1214,
															"end": 1222,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 1210,
															"end": 1242,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1207,
															"end": 1248,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 1204,
															"end": 1332,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1204,
															"end": 1332,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "164"
														},
														{
															"begin": 1204,
															"end": 1332,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 1251,
															"end": 1330,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "165"
														},
														{
															"begin": 1251,
															"end": 1330,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "136"
														},
														{
															"begin": 1251,
															"end": 1330,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1251,
															"end": 1330,
															"name": "tag",
															"source": 10,
															"value": "165"
														},
														{
															"begin": 1251,
															"end": 1330,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1204,
															"end": 1332,
															"name": "tag",
															"source": 10,
															"value": "164"
														},
														{
															"begin": 1204,
															"end": 1332,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 735,
															"end": 1338,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "tag",
															"source": 10,
															"value": "9"
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1465,
															"end": 1471,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 1473,
															"end": 1479,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 1522,
															"end": 1524,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 1510,
															"end": 1519,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 1501,
															"end": 1508,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 1497,
															"end": 1520,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 1493,
															"end": 1525,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 1490,
															"end": 1609,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1490,
															"end": 1609,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "167"
														},
														{
															"begin": 1490,
															"end": 1609,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 1528,
															"end": 1607,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "168"
														},
														{
															"begin": 1528,
															"end": 1607,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 1528,
															"end": 1607,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1528,
															"end": 1607,
															"name": "tag",
															"source": 10,
															"value": "168"
														},
														{
															"begin": 1528,
															"end": 1607,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1490,
															"end": 1609,
															"name": "tag",
															"source": 10,
															"value": "167"
														},
														{
															"begin": 1490,
															"end": 1609,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1676,
															"end": 1677,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 1665,
															"end": 1674,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 1661,
															"end": 1678,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1648,
															"end": 1679,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 1706,
															"end": 1724,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1698,
															"end": 1704,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 1695,
															"end": 1725,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 1692,
															"end": 1809,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 1692,
															"end": 1809,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "169"
														},
														{
															"begin": 1692,
															"end": 1809,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 1728,
															"end": 1807,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "170"
														},
														{
															"begin": 1728,
															"end": 1807,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "133"
														},
														{
															"begin": 1728,
															"end": 1807,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1728,
															"end": 1807,
															"name": "tag",
															"source": 10,
															"value": "170"
														},
														{
															"begin": 1728,
															"end": 1807,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1692,
															"end": 1809,
															"name": "tag",
															"source": 10,
															"value": "169"
														},
														{
															"begin": 1692,
															"end": 1809,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1841,
															"end": 1956,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "171"
														},
														{
															"begin": 1948,
															"end": 1955,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 1939,
															"end": 1945,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 1928,
															"end": 1937,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 1924,
															"end": 1946,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 1841,
															"end": 1956,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "137"
														},
														{
															"begin": 1841,
															"end": 1956,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1841,
															"end": 1956,
															"name": "tag",
															"source": 10,
															"value": "171"
														},
														{
															"begin": 1841,
															"end": 1956,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 1823,
															"end": 1956,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1823,
															"end": 1956,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1823,
															"end": 1956,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1823,
															"end": 1956,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1619,
															"end": 1966,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1344,
															"end": 1973,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 1979,
															"end": 2128,
															"name": "tag",
															"source": 10,
															"value": "138"
														},
														{
															"begin": 1979,
															"end": 2128,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2015,
															"end": 2022,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2055,
															"end": 2121,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2048,
															"end": 2053,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2044,
															"end": 2122,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 2033,
															"end": 2122,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2033,
															"end": 2122,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1979,
															"end": 2128,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 1979,
															"end": 2128,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 1979,
															"end": 2128,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 1979,
															"end": 2128,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2134,
															"end": 2249,
															"name": "tag",
															"source": 10,
															"value": "139"
														},
														{
															"begin": 2134,
															"end": 2249,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2219,
															"end": 2242,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "174"
														},
														{
															"begin": 2236,
															"end": 2241,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2219,
															"end": 2242,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "138"
														},
														{
															"begin": 2219,
															"end": 2242,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2219,
															"end": 2242,
															"name": "tag",
															"source": 10,
															"value": "174"
														},
														{
															"begin": 2219,
															"end": 2242,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2214,
															"end": 2217,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2207,
															"end": 2243,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 2134,
															"end": 2249,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2134,
															"end": 2249,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2134,
															"end": 2249,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "tag",
															"source": 10,
															"value": "12"
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2346,
															"end": 2350,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2384,
															"end": 2386,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2373,
															"end": 2382,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2369,
															"end": 2387,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2361,
															"end": 2387,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2361,
															"end": 2387,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2397,
															"end": 2466,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "176"
														},
														{
															"begin": 2463,
															"end": 2464,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2452,
															"end": 2461,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 2448,
															"end": 2465,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2439,
															"end": 2445,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 2397,
															"end": 2466,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "139"
														},
														{
															"begin": 2397,
															"end": 2466,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2397,
															"end": 2466,
															"name": "tag",
															"source": 10,
															"value": "176"
														},
														{
															"begin": 2397,
															"end": 2466,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2255,
															"end": 2473,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "tag",
															"source": 10,
															"value": "140"
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2637,
															"end": 2645,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 2647,
															"end": 2653,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 2697,
															"end": 2700,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 2690,
															"end": 2694,
															"name": "PUSH",
															"source": 10,
															"value": "1F"
														},
														{
															"begin": 2682,
															"end": 2688,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 2678,
															"end": 2695,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2674,
															"end": 2701,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 2664,
															"end": 2786,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "178"
														},
														{
															"begin": 2664,
															"end": 2786,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2705,
															"end": 2784,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "179"
														},
														{
															"begin": 2705,
															"end": 2784,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "134"
														},
														{
															"begin": 2705,
															"end": 2784,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2705,
															"end": 2784,
															"name": "tag",
															"source": 10,
															"value": "179"
														},
														{
															"begin": 2705,
															"end": 2784,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2664,
															"end": 2786,
															"name": "tag",
															"source": 10,
															"value": "178"
														},
														{
															"begin": 2664,
															"end": 2786,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2818,
															"end": 2824,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 2805,
															"end": 2825,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 2795,
															"end": 2825,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2795,
															"end": 2825,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2848,
															"end": 2866,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2840,
															"end": 2846,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 2837,
															"end": 2867,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 2834,
															"end": 2951,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 2834,
															"end": 2951,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "180"
														},
														{
															"begin": 2834,
															"end": 2951,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 2870,
															"end": 2949,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "181"
														},
														{
															"begin": 2870,
															"end": 2949,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "135"
														},
														{
															"begin": 2870,
															"end": 2949,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 2870,
															"end": 2949,
															"name": "tag",
															"source": 10,
															"value": "181"
														},
														{
															"begin": 2870,
															"end": 2949,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2834,
															"end": 2951,
															"name": "tag",
															"source": 10,
															"value": "180"
														},
														{
															"begin": 2834,
															"end": 2951,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2984,
															"end": 2988,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 2976,
															"end": 2982,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 2972,
															"end": 2989,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 2960,
															"end": 2989,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 2960,
															"end": 2989,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3038,
															"end": 3041,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 3030,
															"end": 3034,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 3022,
															"end": 3028,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3018,
															"end": 3035,
															"name": "MUL",
															"source": 10
														},
														{
															"begin": 3008,
															"end": 3016,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 3004,
															"end": 3036,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3001,
															"end": 3042,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 2998,
															"end": 3126,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 2998,
															"end": 3126,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "182"
														},
														{
															"begin": 2998,
															"end": 3126,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3045,
															"end": 3124,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "183"
														},
														{
															"begin": 3045,
															"end": 3124,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "136"
														},
														{
															"begin": 3045,
															"end": 3124,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3045,
															"end": 3124,
															"name": "tag",
															"source": 10,
															"value": "183"
														},
														{
															"begin": 3045,
															"end": 3124,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2998,
															"end": 3126,
															"name": "tag",
															"source": 10,
															"value": "182"
														},
														{
															"begin": 2998,
															"end": 3126,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 2520,
															"end": 3132,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "tag",
															"source": 10,
															"value": "15"
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3339,
															"end": 3345,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3347,
															"end": 3353,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 3355,
															"end": 3361,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3363,
															"end": 3369,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 3412,
															"end": 3414,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 3400,
															"end": 3409,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 3391,
															"end": 3398,
															"name": "DUP8",
															"source": 10
														},
														{
															"begin": 3387,
															"end": 3410,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 3383,
															"end": 3415,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 3380,
															"end": 3499,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 3380,
															"end": 3499,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "185"
														},
														{
															"begin": 3380,
															"end": 3499,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3418,
															"end": 3497,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "186"
														},
														{
															"begin": 3418,
															"end": 3497,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 3418,
															"end": 3497,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3418,
															"end": 3497,
															"name": "tag",
															"source": 10,
															"value": "186"
														},
														{
															"begin": 3418,
															"end": 3497,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3380,
															"end": 3499,
															"name": "tag",
															"source": 10,
															"value": "185"
														},
														{
															"begin": 3380,
															"end": 3499,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3566,
															"end": 3567,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 3555,
															"end": 3564,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 3551,
															"end": 3568,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3538,
															"end": 3569,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 3596,
															"end": 3614,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3588,
															"end": 3594,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 3585,
															"end": 3615,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 3582,
															"end": 3699,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 3582,
															"end": 3699,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "187"
														},
														{
															"begin": 3582,
															"end": 3699,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3618,
															"end": 3697,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "188"
														},
														{
															"begin": 3618,
															"end": 3697,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "133"
														},
														{
															"begin": 3618,
															"end": 3697,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3618,
															"end": 3697,
															"name": "tag",
															"source": 10,
															"value": "188"
														},
														{
															"begin": 3618,
															"end": 3697,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3582,
															"end": 3699,
															"name": "tag",
															"source": 10,
															"value": "187"
														},
														{
															"begin": 3582,
															"end": 3699,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3731,
															"end": 3846,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "189"
														},
														{
															"begin": 3838,
															"end": 3845,
															"name": "DUP8",
															"source": 10
														},
														{
															"begin": 3829,
															"end": 3835,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 3818,
															"end": 3827,
															"name": "DUP9",
															"source": 10
														},
														{
															"begin": 3814,
															"end": 3836,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3731,
															"end": 3846,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "137"
														},
														{
															"begin": 3731,
															"end": 3846,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3731,
															"end": 3846,
															"name": "tag",
															"source": 10,
															"value": "189"
														},
														{
															"begin": 3731,
															"end": 3846,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3713,
															"end": 3846,
															"name": "SWAP5",
															"source": 10
														},
														{
															"begin": 3713,
															"end": 3846,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3713,
															"end": 3846,
															"name": "SWAP5",
															"source": 10
														},
														{
															"begin": 3713,
															"end": 3846,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3509,
															"end": 3856,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3923,
															"end": 3925,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 3912,
															"end": 3921,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 3908,
															"end": 3926,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 3895,
															"end": 3927,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 3954,
															"end": 3972,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3946,
															"end": 3952,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 3943,
															"end": 3973,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 3940,
															"end": 4057,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 3940,
															"end": 4057,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "190"
														},
														{
															"begin": 3940,
															"end": 4057,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 3976,
															"end": 4055,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "191"
														},
														{
															"begin": 3976,
															"end": 4055,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "133"
														},
														{
															"begin": 3976,
															"end": 4055,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 3976,
															"end": 4055,
															"name": "tag",
															"source": 10,
															"value": "191"
														},
														{
															"begin": 3976,
															"end": 4055,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 3940,
															"end": 4057,
															"name": "tag",
															"source": 10,
															"value": "190"
														},
														{
															"begin": 3940,
															"end": 4057,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4089,
															"end": 4213,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "192"
														},
														{
															"begin": 4205,
															"end": 4212,
															"name": "DUP8",
															"source": 10
														},
														{
															"begin": 4196,
															"end": 4202,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 4185,
															"end": 4194,
															"name": "DUP9",
															"source": 10
														},
														{
															"begin": 4181,
															"end": 4203,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 4089,
															"end": 4213,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "140"
														},
														{
															"begin": 4089,
															"end": 4213,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4089,
															"end": 4213,
															"name": "tag",
															"source": 10,
															"value": "192"
														},
														{
															"begin": 4089,
															"end": 4213,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4071,
															"end": 4213,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4071,
															"end": 4213,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4071,
															"end": 4213,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4071,
															"end": 4213,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3866,
															"end": 4223,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "SWAP6",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "SWAP5",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 3138,
															"end": 4230,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "tag",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4366,
															"end": 4372,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 4374,
															"end": 4380,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 4423,
															"end": 4425,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 4411,
															"end": 4420,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 4402,
															"end": 4409,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 4398,
															"end": 4421,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 4394,
															"end": 4426,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 4391,
															"end": 4510,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 4391,
															"end": 4510,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "194"
														},
														{
															"begin": 4391,
															"end": 4510,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 4429,
															"end": 4508,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "195"
														},
														{
															"begin": 4429,
															"end": 4508,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 4429,
															"end": 4508,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4429,
															"end": 4508,
															"name": "tag",
															"source": 10,
															"value": "195"
														},
														{
															"begin": 4429,
															"end": 4508,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4391,
															"end": 4510,
															"name": "tag",
															"source": 10,
															"value": "194"
														},
														{
															"begin": 4391,
															"end": 4510,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4577,
															"end": 4578,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 4566,
															"end": 4575,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 4562,
															"end": 4579,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 4549,
															"end": 4580,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 4607,
															"end": 4625,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4599,
															"end": 4605,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 4596,
															"end": 4626,
															"name": "GT",
															"source": 10
														},
														{
															"begin": 4593,
															"end": 4710,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 4593,
															"end": 4710,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "196"
														},
														{
															"begin": 4593,
															"end": 4710,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 4629,
															"end": 4708,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "197"
														},
														{
															"begin": 4629,
															"end": 4708,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "133"
														},
														{
															"begin": 4629,
															"end": 4708,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4629,
															"end": 4708,
															"name": "tag",
															"source": 10,
															"value": "197"
														},
														{
															"begin": 4629,
															"end": 4708,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4593,
															"end": 4710,
															"name": "tag",
															"source": 10,
															"value": "196"
														},
														{
															"begin": 4593,
															"end": 4710,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4742,
															"end": 4866,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "198"
														},
														{
															"begin": 4858,
															"end": 4865,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 4849,
															"end": 4855,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 4838,
															"end": 4847,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 4834,
															"end": 4856,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 4742,
															"end": 4866,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "140"
														},
														{
															"begin": 4742,
															"end": 4866,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4742,
															"end": 4866,
															"name": "tag",
															"source": 10,
															"value": "198"
														},
														{
															"begin": 4742,
															"end": 4866,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4724,
															"end": 4866,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4724,
															"end": 4866,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4724,
															"end": 4866,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4724,
															"end": 4866,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4520,
															"end": 4876,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4236,
															"end": 4883,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 4889,
															"end": 5015,
															"name": "tag",
															"source": 10,
															"value": "141"
														},
														{
															"begin": 4889,
															"end": 5015,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 4926,
															"end": 4933,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 4966,
															"end": 5008,
															"name": "PUSH",
															"source": 10,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4959,
															"end": 4964,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 4955,
															"end": 5009,
															"name": "AND",
															"source": 10
														},
														{
															"begin": 4944,
															"end": 5009,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 4944,
															"end": 5009,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4889,
															"end": 5015,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 4889,
															"end": 5015,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 4889,
															"end": 5015,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 4889,
															"end": 5015,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5021,
															"end": 5117,
															"name": "tag",
															"source": 10,
															"value": "142"
														},
														{
															"begin": 5021,
															"end": 5117,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5058,
															"end": 5065,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5087,
															"end": 5111,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "201"
														},
														{
															"begin": 5105,
															"end": 5110,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 5087,
															"end": 5111,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "141"
														},
														{
															"begin": 5087,
															"end": 5111,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5087,
															"end": 5111,
															"name": "tag",
															"source": 10,
															"value": "201"
														},
														{
															"begin": 5087,
															"end": 5111,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5076,
															"end": 5111,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5076,
															"end": 5111,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5021,
															"end": 5117,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 5021,
															"end": 5117,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5021,
															"end": 5117,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5021,
															"end": 5117,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5123,
															"end": 5245,
															"name": "tag",
															"source": 10,
															"value": "143"
														},
														{
															"begin": 5123,
															"end": 5245,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5196,
															"end": 5220,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "203"
														},
														{
															"begin": 5214,
															"end": 5219,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5196,
															"end": 5220,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "142"
														},
														{
															"begin": 5196,
															"end": 5220,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5196,
															"end": 5220,
															"name": "tag",
															"source": 10,
															"value": "203"
														},
														{
															"begin": 5196,
															"end": 5220,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5189,
															"end": 5194,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5186,
															"end": 5221,
															"name": "EQ",
															"source": 10
														},
														{
															"begin": 5176,
															"end": 5239,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "204"
														},
														{
															"begin": 5176,
															"end": 5239,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 5235,
															"end": 5236,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5232,
															"end": 5233,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 5225,
															"end": 5237,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 5176,
															"end": 5239,
															"name": "tag",
															"source": 10,
															"value": "204"
														},
														{
															"begin": 5176,
															"end": 5239,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5123,
															"end": 5245,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5123,
															"end": 5245,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "tag",
															"source": 10,
															"value": "144"
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5297,
															"end": 5302,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5335,
															"end": 5341,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5322,
															"end": 5342,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 5313,
															"end": 5342,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5313,
															"end": 5342,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5351,
															"end": 5384,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "206"
														},
														{
															"begin": 5378,
															"end": 5383,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5351,
															"end": 5384,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "143"
														},
														{
															"begin": 5351,
															"end": 5384,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5351,
															"end": 5384,
															"name": "tag",
															"source": 10,
															"value": "206"
														},
														{
															"begin": 5351,
															"end": 5384,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5251,
															"end": 5390,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5396,
															"end": 5486,
															"name": "tag",
															"source": 10,
															"value": "145"
														},
														{
															"begin": 5396,
															"end": 5486,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5430,
															"end": 5437,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5473,
															"end": 5478,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5466,
															"end": 5479,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 5459,
															"end": 5480,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 5448,
															"end": 5480,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5448,
															"end": 5480,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5396,
															"end": 5486,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 5396,
															"end": 5486,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5396,
															"end": 5486,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5396,
															"end": 5486,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5492,
															"end": 5608,
															"name": "tag",
															"source": 10,
															"value": "146"
														},
														{
															"begin": 5492,
															"end": 5608,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5562,
															"end": 5583,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "209"
														},
														{
															"begin": 5577,
															"end": 5582,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5562,
															"end": 5583,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "145"
														},
														{
															"begin": 5562,
															"end": 5583,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5562,
															"end": 5583,
															"name": "tag",
															"source": 10,
															"value": "209"
														},
														{
															"begin": 5562,
															"end": 5583,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5555,
															"end": 5560,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5552,
															"end": 5584,
															"name": "EQ",
															"source": 10
														},
														{
															"begin": 5542,
															"end": 5602,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "210"
														},
														{
															"begin": 5542,
															"end": 5602,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 5598,
															"end": 5599,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5595,
															"end": 5596,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 5588,
															"end": 5600,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 5542,
															"end": 5602,
															"name": "tag",
															"source": 10,
															"value": "210"
														},
														{
															"begin": 5542,
															"end": 5602,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5492,
															"end": 5608,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5492,
															"end": 5608,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "tag",
															"source": 10,
															"value": "147"
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5657,
															"end": 5662,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5695,
															"end": 5701,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5682,
															"end": 5702,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 5673,
															"end": 5702,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5673,
															"end": 5702,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5711,
															"end": 5741,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "212"
														},
														{
															"begin": 5735,
															"end": 5740,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 5711,
															"end": 5741,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "146"
														},
														{
															"begin": 5711,
															"end": 5741,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5711,
															"end": 5741,
															"name": "tag",
															"source": 10,
															"value": "212"
														},
														{
															"begin": 5711,
															"end": 5741,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5614,
															"end": 5747,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "tag",
															"source": 10,
															"value": "25"
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5818,
															"end": 5824,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 5826,
															"end": 5832,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 5875,
															"end": 5877,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 5863,
															"end": 5872,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 5854,
															"end": 5861,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 5850,
															"end": 5873,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 5846,
															"end": 5878,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 5843,
															"end": 5962,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 5843,
															"end": 5962,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "214"
														},
														{
															"begin": 5843,
															"end": 5962,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 5881,
															"end": 5960,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "215"
														},
														{
															"begin": 5881,
															"end": 5960,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 5881,
															"end": 5960,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 5881,
															"end": 5960,
															"name": "tag",
															"source": 10,
															"value": "215"
														},
														{
															"begin": 5881,
															"end": 5960,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 5843,
															"end": 5962,
															"name": "tag",
															"source": 10,
															"value": "214"
														},
														{
															"begin": 5843,
															"end": 5962,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6001,
															"end": 6002,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 6026,
															"end": 6079,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "216"
														},
														{
															"begin": 6071,
															"end": 6078,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 6062,
															"end": 6068,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 6051,
															"end": 6060,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 6047,
															"end": 6069,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 6026,
															"end": 6079,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "144"
														},
														{
															"begin": 6026,
															"end": 6079,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6026,
															"end": 6079,
															"name": "tag",
															"source": 10,
															"value": "216"
														},
														{
															"begin": 6026,
															"end": 6079,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6016,
															"end": 6079,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 6016,
															"end": 6079,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5972,
															"end": 6089,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6128,
															"end": 6130,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 6154,
															"end": 6204,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "217"
														},
														{
															"begin": 6196,
															"end": 6203,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 6187,
															"end": 6193,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 6176,
															"end": 6185,
															"name": "DUP7",
															"source": 10
														},
														{
															"begin": 6172,
															"end": 6194,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 6154,
															"end": 6204,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "147"
														},
														{
															"begin": 6154,
															"end": 6204,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6154,
															"end": 6204,
															"name": "tag",
															"source": 10,
															"value": "217"
														},
														{
															"begin": 6154,
															"end": 6204,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6144,
															"end": 6204,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 6144,
															"end": 6204,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6099,
															"end": 6214,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 5753,
															"end": 6221,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6227,
															"end": 6407,
															"name": "tag",
															"source": 10,
															"value": "36"
														},
														{
															"begin": 6227,
															"end": 6407,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6275,
															"end": 6352,
															"name": "PUSH",
															"source": 10,
															"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 6272,
															"end": 6273,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 6265,
															"end": 6353,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 6372,
															"end": 6376,
															"name": "PUSH",
															"source": 10,
															"value": "32"
														},
														{
															"begin": 6369,
															"end": 6370,
															"name": "PUSH",
															"source": 10,
															"value": "4"
														},
														{
															"begin": 6362,
															"end": 6377,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 6396,
															"end": 6400,
															"name": "PUSH",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 6393,
															"end": 6394,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 6386,
															"end": 6401,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 6413,
															"end": 6531,
															"name": "tag",
															"source": 10,
															"value": "148"
														},
														{
															"begin": 6413,
															"end": 6531,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6500,
															"end": 6524,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "220"
														},
														{
															"begin": 6518,
															"end": 6523,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 6500,
															"end": 6524,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "142"
														},
														{
															"begin": 6500,
															"end": 6524,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6500,
															"end": 6524,
															"name": "tag",
															"source": 10,
															"value": "220"
														},
														{
															"begin": 6500,
															"end": 6524,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6495,
															"end": 6498,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 6488,
															"end": 6525,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 6413,
															"end": 6531,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6413,
															"end": 6531,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6413,
															"end": 6531,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6537,
															"end": 6646,
															"name": "tag",
															"source": 10,
															"value": "149"
														},
														{
															"begin": 6537,
															"end": 6646,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6618,
															"end": 6639,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "222"
														},
														{
															"begin": 6633,
															"end": 6638,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 6618,
															"end": 6639,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "145"
														},
														{
															"begin": 6618,
															"end": 6639,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6618,
															"end": 6639,
															"name": "tag",
															"source": 10,
															"value": "222"
														},
														{
															"begin": 6618,
															"end": 6639,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6613,
															"end": 6616,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 6606,
															"end": 6640,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 6537,
															"end": 6646,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6537,
															"end": 6646,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6537,
															"end": 6646,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "tag",
															"source": 10,
															"value": "57"
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6767,
															"end": 6771,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 6805,
															"end": 6807,
															"name": "PUSH",
															"source": 10,
															"value": "40"
														},
														{
															"begin": 6794,
															"end": 6803,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 6790,
															"end": 6808,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 6782,
															"end": 6808,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 6782,
															"end": 6808,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6818,
															"end": 6889,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "224"
														},
														{
															"begin": 6886,
															"end": 6887,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 6875,
															"end": 6884,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 6871,
															"end": 6888,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 6862,
															"end": 6868,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 6818,
															"end": 6889,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "148"
														},
														{
															"begin": 6818,
															"end": 6889,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6818,
															"end": 6889,
															"name": "tag",
															"source": 10,
															"value": "224"
														},
														{
															"begin": 6818,
															"end": 6889,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6899,
															"end": 6965,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "225"
														},
														{
															"begin": 6961,
															"end": 6963,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 6950,
															"end": 6959,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 6946,
															"end": 6964,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 6937,
															"end": 6943,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 6899,
															"end": 6965,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "149"
														},
														{
															"begin": 6899,
															"end": 6965,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6899,
															"end": 6965,
															"name": "tag",
															"source": 10,
															"value": "225"
														},
														{
															"begin": 6899,
															"end": 6965,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "SWAP4",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6652,
															"end": 6972,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "tag",
															"source": 10,
															"value": "59"
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7065,
															"end": 7069,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7103,
															"end": 7105,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 7092,
															"end": 7101,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 7088,
															"end": 7106,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 7080,
															"end": 7106,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 7080,
															"end": 7106,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7116,
															"end": 7181,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "227"
														},
														{
															"begin": 7178,
															"end": 7179,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7167,
															"end": 7176,
															"name": "DUP4",
															"source": 10
														},
														{
															"begin": 7163,
															"end": 7180,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 7154,
															"end": 7160,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 7116,
															"end": 7181,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "149"
														},
														{
															"begin": 7116,
															"end": 7181,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7116,
															"end": 7181,
															"name": "tag",
															"source": 10,
															"value": "227"
														},
														{
															"begin": 7116,
															"end": 7181,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 6978,
															"end": 7188,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7194,
															"end": 7374,
															"name": "tag",
															"source": 10,
															"value": "63"
														},
														{
															"begin": 7194,
															"end": 7374,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7242,
															"end": 7319,
															"name": "PUSH",
															"source": 10,
															"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 7239,
															"end": 7240,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7232,
															"end": 7320,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 7339,
															"end": 7343,
															"name": "PUSH",
															"source": 10,
															"value": "21"
														},
														{
															"begin": 7336,
															"end": 7337,
															"name": "PUSH",
															"source": 10,
															"value": "4"
														},
														{
															"begin": 7329,
															"end": 7344,
															"name": "MSTORE",
															"source": 10
														},
														{
															"begin": 7363,
															"end": 7367,
															"name": "PUSH",
															"source": 10,
															"value": "24"
														},
														{
															"begin": 7360,
															"end": 7361,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7353,
															"end": 7368,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 7380,
															"end": 7499,
															"name": "tag",
															"source": 10,
															"value": "150"
														},
														{
															"begin": 7380,
															"end": 7499,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7473,
															"end": 7474,
															"name": "PUSH",
															"source": 10,
															"value": "4"
														},
														{
															"begin": 7466,
															"end": 7471,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 7463,
															"end": 7475,
															"name": "LT",
															"source": 10
														},
														{
															"begin": 7453,
															"end": 7493,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "230"
														},
														{
															"begin": 7453,
															"end": 7493,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 7489,
															"end": 7490,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7486,
															"end": 7487,
															"name": "DUP1",
															"source": 10
														},
														{
															"begin": 7479,
															"end": 7491,
															"name": "REVERT",
															"source": 10
														},
														{
															"begin": 7453,
															"end": 7493,
															"name": "tag",
															"source": 10,
															"value": "230"
														},
														{
															"begin": 7453,
															"end": 7493,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7380,
															"end": 7499,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7380,
															"end": 7499,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "tag",
															"source": 10,
															"value": "151"
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7571,
															"end": 7576,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7609,
															"end": 7615,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 7596,
															"end": 7616,
															"name": "CALLDATALOAD",
															"source": 10
														},
														{
															"begin": 7587,
															"end": 7616,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 7587,
															"end": 7616,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7625,
															"end": 7678,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "232"
														},
														{
															"begin": 7672,
															"end": 7677,
															"name": "DUP2",
															"source": 10
														},
														{
															"begin": 7625,
															"end": 7678,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "150"
														},
														{
															"begin": 7625,
															"end": 7678,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7625,
															"end": 7678,
															"name": "tag",
															"source": 10,
															"value": "232"
														},
														{
															"begin": 7625,
															"end": 7678,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7505,
															"end": 7684,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "tag",
															"source": 10,
															"value": "65"
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7769,
															"end": 7775,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7818,
															"end": 7820,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 7806,
															"end": 7815,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 7797,
															"end": 7804,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 7793,
															"end": 7816,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 7789,
															"end": 7821,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 7786,
															"end": 7905,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 7786,
															"end": 7905,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "234"
														},
														{
															"begin": 7786,
															"end": 7905,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 7824,
															"end": 7903,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "235"
														},
														{
															"begin": 7824,
															"end": 7903,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 7824,
															"end": 7903,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7824,
															"end": 7903,
															"name": "tag",
															"source": 10,
															"value": "235"
														},
														{
															"begin": 7824,
															"end": 7903,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7786,
															"end": 7905,
															"name": "tag",
															"source": 10,
															"value": "234"
														},
														{
															"begin": 7786,
															"end": 7905,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7944,
															"end": 7945,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 7969,
															"end": 8042,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "236"
														},
														{
															"begin": 8034,
															"end": 8041,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 8025,
															"end": 8031,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 8014,
															"end": 8023,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 8010,
															"end": 8032,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 7969,
															"end": 8042,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "151"
														},
														{
															"begin": 7969,
															"end": 8042,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7969,
															"end": 8042,
															"name": "tag",
															"source": 10,
															"value": "236"
														},
														{
															"begin": 7969,
															"end": 8042,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 7959,
															"end": 8042,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 7959,
															"end": 8042,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7915,
															"end": 8052,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 7690,
															"end": 8059,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "tag",
															"source": 10,
															"value": "71"
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 8124,
															"end": 8130,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 8173,
															"end": 8175,
															"name": "PUSH",
															"source": 10,
															"value": "20"
														},
														{
															"begin": 8161,
															"end": 8170,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 8152,
															"end": 8159,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 8148,
															"end": 8171,
															"name": "SUB",
															"source": 10
														},
														{
															"begin": 8144,
															"end": 8176,
															"name": "SLT",
															"source": 10
														},
														{
															"begin": 8141,
															"end": 8260,
															"name": "ISZERO",
															"source": 10
														},
														{
															"begin": 8141,
															"end": 8260,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "238"
														},
														{
															"begin": 8141,
															"end": 8260,
															"name": "JUMPI",
															"source": 10
														},
														{
															"begin": 8179,
															"end": 8258,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "239"
														},
														{
															"begin": 8179,
															"end": 8258,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "132"
														},
														{
															"begin": 8179,
															"end": 8258,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 8179,
															"end": 8258,
															"name": "tag",
															"source": 10,
															"value": "239"
														},
														{
															"begin": 8179,
															"end": 8258,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 8141,
															"end": 8260,
															"name": "tag",
															"source": 10,
															"value": "238"
														},
														{
															"begin": 8141,
															"end": 8260,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 8299,
															"end": 8300,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 8324,
															"end": 8377,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "240"
														},
														{
															"begin": 8369,
															"end": 8376,
															"name": "DUP5",
															"source": 10
														},
														{
															"begin": 8360,
															"end": 8366,
															"name": "DUP3",
															"source": 10
														},
														{
															"begin": 8349,
															"end": 8358,
															"name": "DUP6",
															"source": 10
														},
														{
															"begin": 8345,
															"end": 8367,
															"name": "ADD",
															"source": 10
														},
														{
															"begin": 8324,
															"end": 8377,
															"name": "PUSH [tag]",
															"source": 10,
															"value": "144"
														},
														{
															"begin": 8324,
															"end": 8377,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 8324,
															"end": 8377,
															"name": "tag",
															"source": 10,
															"value": "240"
														},
														{
															"begin": 8324,
															"end": 8377,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 8314,
															"end": 8377,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 8314,
															"end": 8377,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 8270,
															"end": 8387,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "SWAP3",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "SWAP2",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 8065,
															"end": 8394,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														}
													]
												}
											}
										}
									}
								},
								"1": {
									".code": [
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 2853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2846,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2822,
											"end": 2846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH #[$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH [$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "ASSIGNIMMUTABLE",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH #[$]",
											"source": 0,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 10213,
											"name": "RETURN",
											"source": 0
										}
									],
									".data": {
										"0": {
											".auxdata": "a26469706673582212205136924f4dbbfe79561a1fc04e45947433c8fcba59787ffd458bb59436aa022264736f6c63430008110033",
											".code": [
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "SHR",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "4CE34AA2"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "899E104C"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "8DF25D92"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "C4E8FCB5"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "tag",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1078,
													"end": 10213,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "tag",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 3602,
													"end": 4376,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "tag",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 3602,
													"end": 4376,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 3602,
													"end": 4376,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "tag",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "15"
												},
												{
													"begin": 6540,
													"end": 7672,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "tag",
													"source": 0,
													"value": "14"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 6540,
													"end": 7672,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "tag",
													"source": 0,
													"value": "13"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 6540,
													"end": 7672,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "tag",
													"source": 0,
													"value": "17"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "tag",
													"source": 0,
													"value": "5"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 5137,
													"end": 5619,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "tag",
													"source": 0,
													"value": "19"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 5137,
													"end": 5619,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "tag",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "12"
												},
												{
													"begin": 5137,
													"end": 5619,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "tag",
													"source": 0,
													"value": "22"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "RETURN",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "tag",
													"source": 0,
													"value": "6"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "23"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "CALLDATASIZE",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "25"
												},
												{
													"begin": 7905,
													"end": 8508,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "tag",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "26"
												},
												{
													"begin": 7905,
													"end": 8508,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "tag",
													"source": 0,
													"value": "23"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "STOP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "tag",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3732,
													"end": 3749,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1695,
													"end": 1703,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 1671,
													"end": 1693,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1664,
													"end": 1704,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1816,
													"end": 1830,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1795,
													"end": 1814,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1788,
													"end": 1831,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2037,
													"end": 2054,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2013,
													"end": 2035,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2003,
													"end": 2055,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 1997,
													"end": 2056,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "28"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2267,
													"end": 2296,
													"name": "PUSH",
													"source": 0,
													"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 2242,
													"end": 2265,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2235,
													"end": 2297,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2406,
													"end": 2414,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 2379,
													"end": 2404,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2372,
													"end": 2415,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2544,
													"end": 2570,
													"name": "PUSH",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 2519,
													"end": 2542,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2512,
													"end": 2571,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "tag",
													"source": 0,
													"value": "28"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3839,
													"end": 3869,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3872,
													"end": 3881,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3872,
													"end": 3881,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3872,
													"end": 3888,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3872,
													"end": 3888,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3839,
													"end": 3888,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3839,
													"end": 3888,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3943,
													"end": 3952,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "30"
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3962,
													"end": 3984,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3958,
													"end": 3959,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3958,
													"end": 3984,
													"modifierDepth": 1,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "31"
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 4077,
													"end": 4100,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "33"
												},
												{
													"begin": 4087,
													"end": 4096,
													"modifierDepth": 1,
													"name": "DUP6",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4096,
													"modifierDepth": 1,
													"name": "DUP6",
													"source": 0
												},
												{
													"begin": 4097,
													"end": 4098,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "34"
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "35"
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "36"
												},
												{
													"begin": 4087,
													"end": 4099,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "35"
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "34"
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "C0"
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 4087,
													"end": 4099,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 4077,
													"end": 4086,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "37"
												},
												{
													"begin": 4077,
													"end": 4100,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 4077,
													"end": 4100,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "33"
												},
												{
													"begin": 4077,
													"end": 4100,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 4219,
													"end": 4222,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 4219,
													"end": 4222,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 4219,
													"end": 4222,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 4219,
													"end": 4222,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 4219,
													"end": 4222,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "30"
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "31"
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 3938,
													"end": 4247,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 4348,
													"end": 4369,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "4CE34AA2"
												},
												{
													"begin": 4348,
													"end": 4369,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 4348,
													"end": 4369,
													"modifierDepth": 1,
													"name": "SHL",
													"source": 0
												},
												{
													"begin": 4335,
													"end": 4369,
													"modifierDepth": 1,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 4335,
													"end": 4369,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3755,
													"end": 4376,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3602,
													"end": 4376,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "tag",
													"source": 0,
													"value": "16"
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6733,
													"end": 6750,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1695,
													"end": 1703,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 1671,
													"end": 1693,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1664,
													"end": 1704,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1816,
													"end": 1830,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1795,
													"end": 1814,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1788,
													"end": 1831,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2037,
													"end": 2054,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2013,
													"end": 2035,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2003,
													"end": 2055,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 1997,
													"end": 2056,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "39"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2267,
													"end": 2296,
													"name": "PUSH",
													"source": 0,
													"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 2242,
													"end": 2265,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2235,
													"end": 2297,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2406,
													"end": 2414,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 2379,
													"end": 2404,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2372,
													"end": 2415,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2544,
													"end": 2570,
													"name": "PUSH",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 2519,
													"end": 2542,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2512,
													"end": 2571,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "tag",
													"source": 0,
													"value": "39"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6836,
													"end": 6866,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 6869,
													"end": 6886,
													"modifierDepth": 1,
													"name": "DUP6",
													"source": 0
												},
												{
													"begin": 6869,
													"end": 6886,
													"modifierDepth": 1,
													"name": "DUP6",
													"source": 0
												},
												{
													"begin": 6869,
													"end": 6893,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6869,
													"end": 6893,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6836,
													"end": 6893,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 6836,
													"end": 6893,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6957,
													"end": 6966,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "41"
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6976,
													"end": 6998,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 6972,
													"end": 6973,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 6972,
													"end": 6998,
													"modifierDepth": 1,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "42"
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 7091,
													"end": 7122,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "44"
												},
												{
													"begin": 7101,
													"end": 7118,
													"modifierDepth": 1,
													"name": "DUP8",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7118,
													"modifierDepth": 1,
													"name": "DUP8",
													"source": 0
												},
												{
													"begin": 7119,
													"end": 7120,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "LT",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "46"
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "36"
												},
												{
													"begin": 7101,
													"end": 7121,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "46"
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "45"
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "C0"
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 7101,
													"end": 7121,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 7091,
													"end": 7100,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "37"
												},
												{
													"begin": 7091,
													"end": 7122,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7091,
													"end": 7122,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "44"
												},
												{
													"begin": 7091,
													"end": 7122,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7241,
													"end": 7244,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 7241,
													"end": 7244,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 7241,
													"end": 7244,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 7241,
													"end": 7244,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 7241,
													"end": 7244,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "41"
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "42"
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 6952,
													"end": 7269,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 7484,
													"end": 7529,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 7514,
													"end": 7528,
													"modifierDepth": 1,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 7514,
													"end": 7528,
													"modifierDepth": 1,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 7484,
													"end": 7513,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "48"
												},
												{
													"begin": 7484,
													"end": 7529,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7484,
													"end": 7529,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "47"
												},
												{
													"begin": 7484,
													"end": 7529,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 7631,
													"end": 7665,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "899E104C"
												},
												{
													"begin": 7631,
													"end": 7665,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 7631,
													"end": 7665,
													"modifierDepth": 1,
													"name": "SHL",
													"source": 0
												},
												{
													"begin": 7618,
													"end": 7665,
													"modifierDepth": 1,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 7618,
													"end": 7665,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6752,
													"end": 7672,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP5",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "SWAP4",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 6540,
													"end": 7672,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "tag",
													"source": 0,
													"value": "21"
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5272,
													"end": 5289,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1695,
													"end": 1703,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 1671,
													"end": 1693,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1664,
													"end": 1704,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1816,
													"end": 1830,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1795,
													"end": 1814,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1788,
													"end": 1831,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2037,
													"end": 2054,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 2013,
													"end": 2035,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2003,
													"end": 2055,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 1997,
													"end": 2056,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "50"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 2267,
													"end": 2296,
													"name": "PUSH",
													"source": 0,
													"value": "93DAADF200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 2242,
													"end": 2265,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2235,
													"end": 2297,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2406,
													"end": 2414,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 2379,
													"end": 2404,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 2372,
													"end": 2415,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 2544,
													"end": 2570,
													"name": "PUSH",
													"source": 0,
													"value": "24"
												},
												{
													"begin": 2519,
													"end": 2542,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 2512,
													"end": 2571,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "tag",
													"source": 0,
													"value": "50"
												},
												{
													"begin": 1970,
													"end": 2585,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5435,
													"end": 5480,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "52"
												},
												{
													"begin": 5465,
													"end": 5479,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 5465,
													"end": 5479,
													"modifierDepth": 1,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 5435,
													"end": 5464,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "48"
												},
												{
													"begin": 5435,
													"end": 5480,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 5435,
													"end": 5480,
													"modifierDepth": 1,
													"name": "tag",
													"source": 0,
													"value": "52"
												},
												{
													"begin": 5435,
													"end": 5480,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 5582,
													"end": 5612,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "8DF25D92"
												},
												{
													"begin": 5582,
													"end": 5612,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 0,
													"value": "E0"
												},
												{
													"begin": 5582,
													"end": 5612,
													"modifierDepth": 1,
													"name": "SHL",
													"source": 0
												},
												{
													"begin": 5569,
													"end": 5612,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 5569,
													"end": 5612,
													"modifierDepth": 1,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 5137,
													"end": 5619,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "tag",
													"source": 0,
													"value": "26"
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8074,
													"end": 8085,
													"name": "PUSHIMMUTABLE",
													"source": 0,
													"value": "18"
												},
												{
													"begin": 8060,
													"end": 8085,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8060,
													"end": 8085,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8060,
													"end": 8070,
													"name": "CALLER",
													"source": 0
												},
												{
													"begin": 8060,
													"end": 8085,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8060,
													"end": 8085,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8060,
													"end": 8085,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 8056,
													"end": 8138,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "54"
												},
												{
													"begin": 8056,
													"end": 8138,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "PUSH",
													"source": 0,
													"value": "6D5769BE00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8108,
													"end": 8127,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 8056,
													"end": 8138,
													"name": "tag",
													"source": 0,
													"value": "54"
												},
												{
													"begin": 8056,
													"end": 8138,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8253,
													"end": 8259,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8259,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8259,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8240,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8241,
													"end": 8248,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 8231,
													"end": 8249,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8259,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8259,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8231,
													"end": 8259,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 8227,
													"end": 8333,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "55"
												},
												{
													"begin": 8227,
													"end": 8333,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 8306,
													"end": 8313,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8315,
													"end": 8321,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH",
													"source": 0,
													"value": "924E341E00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "56"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SWAP3",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "57"
												},
												{
													"begin": 8282,
													"end": 8322,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "tag",
													"source": 0,
													"value": "56"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8282,
													"end": 8322,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 8227,
													"end": 8333,
													"name": "tag",
													"source": 0,
													"value": "55"
												},
												{
													"begin": 8227,
													"end": 8333,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8409,
													"end": 8415,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8397,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8398,
													"end": 8405,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "KECCAK256",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8406,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "PUSH",
													"source": 0,
													"value": "FF"
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 8388,
													"end": 8415,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 8485,
													"end": 8492,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH",
													"source": 0,
													"value": "AE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2"
												},
												{
													"begin": 8494,
													"end": 8500,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "58"
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "59"
												},
												{
													"begin": 8470,
													"end": 8501,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "tag",
													"source": 0,
													"value": "58"
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8470,
													"end": 8501,
													"name": "LOG2",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 7905,
													"end": 8508,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8814,
													"end": 10211,
													"name": "tag",
													"source": 0,
													"value": "37"
												},
												{
													"begin": 8814,
													"end": 10211,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8980,
													"end": 9001,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "61"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "62"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 8963,
													"end": 9001,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "tag",
													"source": 0,
													"value": "62"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "tag",
													"source": 0,
													"value": "61"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8967,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "64"
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 8963,
													"end": 8976,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "tag",
													"source": 0,
													"value": "64"
												},
												{
													"begin": 8963,
													"end": 8976,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "66"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "67"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 8963,
													"end": 9001,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "tag",
													"source": 0,
													"value": "67"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "tag",
													"source": 0,
													"value": "66"
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8963,
													"end": 9001,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "68"
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9304,
													"end": 9370,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 9326,
													"end": 9330,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "70"
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9326,
													"end": 9336,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "tag",
													"source": 0,
													"value": "70"
												},
												{
													"begin": 9326,
													"end": 9336,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9342,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "72"
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9338,
													"end": 9347,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "tag",
													"source": 0,
													"value": "72"
												},
												{
													"begin": 9338,
													"end": 9347,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9353,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "PUSH",
													"source": 0,
													"value": "60"
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "73"
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9349,
													"end": 9356,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "tag",
													"source": 0,
													"value": "73"
												},
												{
													"begin": 9349,
													"end": 9356,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9358,
													"end": 9362,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 9358,
													"end": 9369,
													"name": "PUSH",
													"source": 0,
													"value": "A0"
												},
												{
													"begin": 9358,
													"end": 9369,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9358,
													"end": 9369,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 9304,
													"end": 9325,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "74"
												},
												{
													"begin": 9304,
													"end": 9370,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9304,
													"end": 9370,
													"name": "tag",
													"source": 0,
													"value": "69"
												},
												{
													"begin": 9304,
													"end": 9370,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "75"
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "68"
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9408,
													"end": 9430,
													"name": "PUSH",
													"source": 0,
													"value": "2"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "76"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "77"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 9391,
													"end": 9430,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "tag",
													"source": 0,
													"value": "77"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "tag",
													"source": 0,
													"value": "76"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9395,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "78"
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 9391,
													"end": 9404,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "tag",
													"source": 0,
													"value": "78"
												},
												{
													"begin": 9391,
													"end": 9404,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "79"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 9391,
													"end": 9430,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "tag",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "tag",
													"source": 0,
													"value": "79"
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9391,
													"end": 9430,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "81"
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9535,
													"end": 9536,
													"name": "PUSH",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 9520,
													"end": 9524,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9520,
													"end": 9531,
													"name": "PUSH",
													"source": 0,
													"value": "A0"
												},
												{
													"begin": 9520,
													"end": 9531,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9520,
													"end": 9531,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 9520,
													"end": 9536,
													"name": "EQ",
													"source": 0
												},
												{
													"begin": 9516,
													"end": 9607,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "82"
												},
												{
													"begin": 9516,
													"end": 9607,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "PUSH",
													"source": 0,
													"value": "EFCC00B100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9563,
													"end": 9592,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 9516,
													"end": 9607,
													"name": "tag",
													"source": 0,
													"value": "82"
												},
												{
													"begin": 9516,
													"end": 9607,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9659,
													"end": 9808,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "83"
												},
												{
													"begin": 9699,
													"end": 9703,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "84"
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9699,
													"end": 9709,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "tag",
													"source": 0,
													"value": "84"
												},
												{
													"begin": 9699,
													"end": 9709,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9731,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "85"
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9727,
													"end": 9736,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "tag",
													"source": 0,
													"value": "85"
												},
												{
													"begin": 9727,
													"end": 9736,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9758,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "PUSH",
													"source": 0,
													"value": "60"
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "86"
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9754,
													"end": 9761,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "tag",
													"source": 0,
													"value": "86"
												},
												{
													"begin": 9754,
													"end": 9761,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9779,
													"end": 9783,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 9779,
													"end": 9794,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 9779,
													"end": 9794,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9779,
													"end": 9794,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 9659,
													"end": 9681,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "87"
												},
												{
													"begin": 9659,
													"end": 9808,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9659,
													"end": 9808,
													"name": "tag",
													"source": 0,
													"value": "83"
												},
												{
													"begin": 9659,
													"end": 9808,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "88"
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "81"
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9846,
													"end": 9869,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "89"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "90"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 9829,
													"end": 9869,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "tag",
													"source": 0,
													"value": "90"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "tag",
													"source": 0,
													"value": "89"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9833,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "91"
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "65"
												},
												{
													"begin": 9829,
													"end": 9842,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "tag",
													"source": 0,
													"value": "91"
												},
												{
													"begin": 9829,
													"end": 9842,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH",
													"source": 0,
													"value": "3"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "GT",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "92"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "93"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "63"
												},
												{
													"begin": 9829,
													"end": 9869,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "tag",
													"source": 0,
													"value": "93"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "tag",
													"source": 0,
													"value": "92"
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9829,
													"end": 9869,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "94"
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 9924,
													"end": 10103,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "95"
												},
												{
													"begin": 9965,
													"end": 9969,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "96"
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9965,
													"end": 9975,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "tag",
													"source": 0,
													"value": "96"
												},
												{
													"begin": 9965,
													"end": 9975,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 9997,
													"name": "DUP3",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "97"
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 9993,
													"end": 10002,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "tag",
													"source": 0,
													"value": "97"
												},
												{
													"begin": 9993,
													"end": 10002,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10024,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "PUSH",
													"source": 0,
													"value": "60"
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "98"
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "71"
												},
												{
													"begin": 10020,
													"end": 10027,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "tag",
													"source": 0,
													"value": "98"
												},
												{
													"begin": 10020,
													"end": 10027,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 10045,
													"end": 10049,
													"name": "DUP5",
													"source": 0
												},
												{
													"begin": 10045,
													"end": 10060,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 10045,
													"end": 10060,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 10045,
													"end": 10060,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 10078,
													"end": 10082,
													"name": "DUP6",
													"source": 0
												},
												{
													"begin": 10078,
													"end": 10089,
													"name": "PUSH",
													"source": 0,
													"value": "A0"
												},
												{
													"begin": 10078,
													"end": 10089,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 10078,
													"end": 10089,
													"name": "CALLDATALOAD",
													"source": 0
												},
												{
													"begin": 9924,
													"end": 9947,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "99"
												},
												{
													"begin": 9924,
													"end": 10103,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9924,
													"end": 10103,
													"name": "tag",
													"source": 0,
													"value": "95"
												},
												{
													"begin": 9924,
													"end": 10103,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "94"
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "PUSH",
													"source": 0,
													"value": "7932F1FC00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 10177,
													"end": 10194,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 9825,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "88"
												},
												{
													"begin": 9387,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "tag",
													"source": 0,
													"value": "75"
												},
												{
													"begin": 8959,
													"end": 10205,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 8814,
													"end": 10211,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 8814,
													"end": 10211,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 23697,
													"end": 35180,
													"name": "tag",
													"source": 8,
													"value": "48"
												},
												{
													"begin": 23697,
													"end": 35180,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 23926,
													"end": 23947,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 24213,
													"end": 24234,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 24493,
													"end": 24511,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 24763,
													"end": 24802,
													"name": "PUSH",
													"source": 8,
													"value": "2EB2C2D600000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 24709,
													"end": 24745,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 24685,
													"end": 24816,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 24910,
													"end": 24911,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "tag",
													"source": 8,
													"value": "102"
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 24932,
													"end": 24935,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 24929,
													"end": 24930,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 24926,
													"end": 24936,
													"name": "LT",
													"source": 8
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "104"
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 25311,
													"end": 25329,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 25298,
													"end": 25330,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 25264,
													"end": 25276,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 25239,
													"end": 25348,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 25445,
													"end": 25455,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 25432,
													"end": 25456,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 25549,
													"end": 25554,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 25537,
													"end": 25555,
													"name": "EXTCODESIZE",
													"source": 8
												},
												{
													"begin": 25527,
													"end": 25797,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "105"
												},
												{
													"begin": 25527,
													"end": 25797,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 25612,
													"end": 25638,
													"name": "PUSH",
													"source": 8,
													"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 25586,
													"end": 25610,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 25579,
													"end": 25639,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 25695,
													"end": 25700,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 25667,
													"end": 25693,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 25660,
													"end": 25701,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 25755,
													"end": 25778,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 25729,
													"end": 25753,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 25722,
													"end": 25779,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 25527,
													"end": 25797,
													"name": "tag",
													"source": 8,
													"value": "105"
												},
												{
													"begin": 25527,
													"end": 25797,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 25939,
													"end": 25981,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 25927,
													"end": 25937,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 25923,
													"end": 25982,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 25889,
													"end": 26000,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 26231,
													"end": 26238,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 26220,
													"end": 26229,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 26216,
													"end": 26239,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 26144,
													"end": 26194,
													"name": "PUSH",
													"source": 8,
													"value": "C0"
												},
												{
													"begin": 26119,
													"end": 26257,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 27544,
													"end": 27565,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 27398,
													"end": 27438,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 27346,
													"end": 27356,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 27301,
													"end": 27476,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 27251,
													"end": 27510,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 27215,
													"end": 27595,
													"name": "EQ",
													"source": 8
												},
												{
													"begin": 27043,
													"end": 27085,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 26897,
													"end": 26937,
													"name": "PUSH",
													"source": 8,
													"value": "60"
												},
												{
													"begin": 26845,
													"end": 26855,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 26800,
													"end": 26975,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 26750,
													"end": 27009,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 26714,
													"end": 27115,
													"name": "EQ",
													"source": 8
												},
												{
													"begin": 26631,
													"end": 27621,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 26556,
													"end": 26577,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 26544,
													"end": 26554,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 26540,
													"end": 26578,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 26527,
													"end": 26579,
													"name": "CALLDATALOAD",
													"source": 8
												},
												{
													"begin": 26488,
													"end": 26497,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 26456,
													"end": 26605,
													"name": "EQ",
													"source": 8
												},
												{
													"begin": 26371,
													"end": 27643,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 26343,
													"end": 27661,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 27752,
													"end": 27767,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 27749,
													"end": 28141,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 27749,
													"end": 28141,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "106"
												},
												{
													"begin": 27749,
													"end": 28141,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 27884,
													"end": 27925,
													"name": "PUSH",
													"source": 8,
													"value": "EBA2084C00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 27822,
													"end": 27858,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 27790,
													"end": 27947,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 28062,
													"end": 28101,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 28000,
													"end": 28036,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 27968,
													"end": 28123,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 27749,
													"end": 28141,
													"name": "tag",
													"source": 8,
													"value": "106"
												},
												{
													"begin": 27749,
													"end": 28141,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 28269,
													"end": 28276,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 28249,
													"end": 28267,
													"name": "DUP9",
													"source": 8
												},
												{
													"begin": 28245,
													"end": 28277,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 28223,
													"end": 28277,
													"name": "SWAP8",
													"source": 8
												},
												{
													"begin": 28223,
													"end": 28277,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 28532,
													"end": 28573,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 28473,
													"end": 28509,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 28461,
													"end": 28471,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 28457,
													"end": 28510,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 28408,
													"end": 28435,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 28374,
													"end": 28591,
													"name": "CALLDATACOPY",
													"source": 8
												},
												{
													"begin": 28820,
													"end": 28828,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 28809,
													"end": 28818,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 28805,
													"end": 28829,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 28795,
													"end": 28803,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 28791,
													"end": 28830,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 29098,
													"end": 29115,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 29031,
													"end": 29072,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 29002,
													"end": 29137,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 28943,
													"end": 28980,
													"name": "PUSH",
													"source": 8,
													"value": "A4"
												},
												{
													"begin": 28915,
													"end": 29155,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 29431,
													"end": 29432,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 29370,
													"end": 29387,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 29301,
													"end": 29344,
													"name": "PUSH",
													"source": 8,
													"value": "C4"
												},
												{
													"begin": 29272,
													"end": 29409,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 29244,
													"end": 29450,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 29659,
													"end": 29676,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 29596,
													"end": 29637,
													"name": "PUSH",
													"source": 8,
													"value": "C4"
												},
												{
													"begin": 29571,
													"end": 29694,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 29966,
													"end": 29983,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 29901,
													"end": 29943,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 29889,
													"end": 29899,
													"name": "DUP9",
													"source": 8
												},
												{
													"begin": 29885,
													"end": 29944,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 29825,
													"end": 29863,
													"name": "PUSH",
													"source": 8,
													"value": "C4"
												},
												{
													"begin": 29791,
													"end": 30001,
													"name": "CALLDATACOPY",
													"source": 8
												},
												{
													"begin": 30379,
													"end": 30380,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 30356,
													"end": 30357,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 30279,
													"end": 30295,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 30198,
													"end": 30234,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 30175,
													"end": 30176,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 30148,
													"end": 30153,
													"name": "DUP11",
													"source": 8
												},
												{
													"begin": 30121,
													"end": 30126,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 30095,
													"end": 30398,
													"name": "CALL",
													"source": 8
												},
												{
													"begin": 30471,
													"end": 30478,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 30461,
													"end": 34761,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "107"
												},
												{
													"begin": 30461,
													"end": 34761,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 30634,
													"end": 30650,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 30631,
													"end": 33627,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 30631,
													"end": 33627,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "108"
												},
												{
													"begin": 30631,
													"end": 33627,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 31106,
													"end": 31113,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 31062,
													"end": 31075,
													"name": "PUSH",
													"source": 8,
													"value": "1F"
												},
												{
													"begin": 31044,
													"end": 31060,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 31040,
													"end": 31076,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 31007,
													"end": 31139,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 31800,
													"end": 31807,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 31782,
													"end": 31798,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 31778,
													"end": 31808,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 31936,
													"end": 31951,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 31923,
													"end": 31934,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 31919,
													"end": 31952,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 32073,
													"end": 32083,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 32056,
													"end": 32071,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 32053,
													"end": 32084,
													"name": "GT",
													"source": 8
												},
												{
													"begin": 32050,
													"end": 33029,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 32050,
													"end": 33029,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "109"
												},
												{
													"begin": 32050,
													"end": 33029,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 32875,
													"end": 32901,
													"name": "PUSH",
													"source": 8,
													"value": "200"
												},
												{
													"begin": 32780,
													"end": 32790,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 32768,
													"end": 32778,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 32764,
													"end": 32791,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 32657,
													"end": 32672,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 32592,
													"end": 32607,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 32539,
													"end": 32718,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 32490,
													"end": 32833,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 32445,
													"end": 32939,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 32358,
													"end": 32369,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 32305,
													"end": 32315,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 32288,
													"end": 32303,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 32284,
													"end": 32316,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 32239,
													"end": 32407,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 32198,
													"end": 32973,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 32160,
													"end": 32164,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 32123,
													"end": 33003,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 32115,
													"end": 33003,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 32115,
													"end": 33003,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 32050,
													"end": 33029,
													"name": "tag",
													"source": 8,
													"value": "109"
												},
												{
													"begin": 32050,
													"end": 33029,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 33289,
													"end": 33294,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 33272,
													"end": 33286,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 33266,
													"end": 33270,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 33262,
													"end": 33287,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 33259,
													"end": 33295,
													"name": "LT",
													"source": 8
												},
												{
													"begin": 33256,
													"end": 33605,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 33256,
													"end": 33605,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "110"
												},
												{
													"begin": 33256,
													"end": 33605,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 33425,
													"end": 33441,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 33422,
													"end": 33423,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 33419,
													"end": 33420,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 33404,
													"end": 33442,
													"name": "RETURNDATACOPY",
													"source": 8
												},
												{
													"begin": 33562,
													"end": 33578,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 33559,
													"end": 33560,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 33552,
													"end": 33579,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 33256,
													"end": 33605,
													"name": "tag",
													"source": 8,
													"value": "110"
												},
												{
													"begin": 33256,
													"end": 33605,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 30651,
													"end": 33627,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 30651,
													"end": 33627,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 30651,
													"end": 33627,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 30631,
													"end": 33627,
													"name": "tag",
													"source": 8,
													"value": "108"
												},
												{
													"begin": 30631,
													"end": 33627,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 33756,
													"end": 33806,
													"name": "PUSH",
													"source": 8,
													"value": "AFC445E200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 33729,
													"end": 33730,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 33697,
													"end": 33828,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 33943,
													"end": 33948,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 33897,
													"end": 33941,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 33890,
													"end": 33949,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 34122,
													"end": 34167,
													"name": "PUSH",
													"source": 8,
													"value": "C0"
												},
												{
													"begin": 34060,
													"end": 34096,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 34028,
													"end": 34189,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 34446,
													"end": 34486,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 34440,
													"end": 34487,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 34403,
													"end": 34410,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 34370,
													"end": 34513,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 34304,
													"end": 34344,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 34272,
													"end": 34535,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 34726,
													"end": 34742,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 34723,
													"end": 34724,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 34716,
													"end": 34743,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 30461,
													"end": 34761,
													"name": "tag",
													"source": 8,
													"value": "107"
												},
												{
													"begin": 30461,
													"end": 34761,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24984,
													"end": 34775,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24967,
													"end": 24968,
													"name": "PUSH",
													"source": 8,
													"value": "1"
												},
												{
													"begin": 24964,
													"end": 24965,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 24960,
													"end": 24969,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 24955,
													"end": 24969,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 24955,
													"end": 24969,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "102"
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "tag",
													"source": 8,
													"value": "104"
												},
												{
													"begin": 24879,
													"end": 34775,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 24883,
													"end": 24925,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 35139,
													"end": 35163,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 35116,
													"end": 35137,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 35109,
													"end": 35164,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 23901,
													"end": 35174,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 23901,
													"end": 35174,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 23901,
													"end": 35174,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 23697,
													"end": 35180,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 23697,
													"end": 35180,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 23697,
													"end": 35180,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "tag",
													"source": 8,
													"value": "74"
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 1771,
													"end": 1792,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 1765,
													"end": 1793,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 1919,
													"end": 1947,
													"name": "PUSH",
													"source": 8,
													"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1891,
													"end": 1917,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 1884,
													"end": 1948,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 1997,
													"end": 2001,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 1968,
													"end": 1995,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 1961,
													"end": 2002,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 2049,
													"end": 2051,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 2022,
													"end": 2047,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 2015,
													"end": 2052,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 2103,
													"end": 2109,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 2072,
													"end": 2101,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 2065,
													"end": 2110,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 2797,
													"end": 2804,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 2778,
													"end": 2779,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 2735,
													"end": 2760,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 2691,
													"end": 2717,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 2672,
													"end": 2673,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 2649,
													"end": 2654,
													"name": "DUP10",
													"source": 8
												},
												{
													"begin": 2626,
													"end": 2631,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 2604,
													"end": 2818,
													"name": "CALL",
													"source": 8
												},
												{
													"begin": 3295,
													"end": 3305,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 3242,
													"end": 3258,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 3235,
													"end": 3259,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 3209,
													"end": 3211,
													"name": "PUSH",
													"source": 8,
													"value": "1F"
												},
												{
													"begin": 3191,
													"end": 3207,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 3188,
													"end": 3212,
													"name": "GT",
													"source": 8
												},
												{
													"begin": 3184,
													"end": 3185,
													"name": "PUSH",
													"source": 8,
													"value": "1"
												},
												{
													"begin": 3180,
													"end": 3181,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 3174,
													"end": 3182,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 3171,
													"end": 3186,
													"name": "EQ",
													"source": 8
												},
												{
													"begin": 3167,
													"end": 3213,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 3143,
													"end": 3277,
													"name": "OR",
													"source": 8
												},
												{
													"begin": 2927,
													"end": 3319,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 3680,
													"end": 3696,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 3673,
													"end": 3697,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 3666,
													"end": 3698,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 3657,
													"end": 3664,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 3653,
													"end": 3699,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 3643,
													"end": 10753,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "112"
												},
												{
													"begin": 3643,
													"end": 10753,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 4001,
													"end": 4008,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 3991,
													"end": 3996,
													"name": "DUP8",
													"source": 8
												},
												{
													"begin": 3979,
													"end": 3997,
													"name": "EXTCODESIZE",
													"source": 8
												},
												{
													"begin": 3972,
													"end": 3998,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 3965,
													"end": 3999,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 3961,
													"end": 4009,
													"name": "AND",
													"source": 8
												},
												{
													"begin": 3951,
													"end": 10533,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "113"
												},
												{
													"begin": 3951,
													"end": 10533,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 4090,
													"end": 4097,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 4080,
													"end": 10212,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "114"
												},
												{
													"begin": 4080,
													"end": 10212,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 4189,
													"end": 4199,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 4179,
													"end": 8938,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "115"
												},
												{
													"begin": 4179,
													"end": 8938,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 4379,
													"end": 4395,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 4376,
													"end": 7698,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 4376,
													"end": 7698,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "116"
												},
												{
													"begin": 4376,
													"end": 7698,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 4946,
													"end": 4953,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 4894,
													"end": 4907,
													"name": "PUSH",
													"source": 8,
													"value": "1F"
												},
												{
													"begin": 4876,
													"end": 4892,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 4872,
													"end": 4908,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 4831,
													"end": 4987,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 5352,
													"end": 5359,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 5340,
													"end": 5350,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 5336,
													"end": 5360,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 5504,
													"end": 5519,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 5491,
													"end": 5502,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 5487,
													"end": 5520,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 5657,
													"end": 5667,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 5640,
													"end": 5655,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 5637,
													"end": 5668,
													"name": "GT",
													"source": 8
												},
												{
													"begin": 5634,
													"end": 6927,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 5634,
													"end": 6927,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "117"
												},
												{
													"begin": 5634,
													"end": 6927,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 6741,
													"end": 6767,
													"name": "PUSH",
													"source": 8,
													"value": "200"
												},
												{
													"begin": 6630,
													"end": 6640,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 6618,
													"end": 6628,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 6614,
													"end": 6641,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 6491,
													"end": 6506,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 6418,
													"end": 6433,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 6357,
													"end": 6560,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 6300,
													"end": 6691,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 6247,
													"end": 6813,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 6144,
													"end": 6155,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 6034,
													"end": 6044,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 5965,
													"end": 5980,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 5908,
													"end": 6094,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 5855,
													"end": 6201,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 5806,
													"end": 6855,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 5760,
													"end": 5764,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 5715,
													"end": 6893,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 5707,
													"end": 6893,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 5707,
													"end": 6893,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 5634,
													"end": 6927,
													"name": "tag",
													"source": 8,
													"value": "117"
												},
												{
													"begin": 5634,
													"end": 6927,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 7219,
													"end": 7224,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 7202,
													"end": 7216,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 7196,
													"end": 7200,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 7192,
													"end": 7217,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 7189,
													"end": 7225,
													"name": "LT",
													"source": 8
												},
												{
													"begin": 7186,
													"end": 7668,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 7186,
													"end": 7668,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "118"
												},
												{
													"begin": 7186,
													"end": 7668,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 7417,
													"end": 7433,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 7414,
													"end": 7415,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 7411,
													"end": 7412,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 7396,
													"end": 7434,
													"name": "RETURNDATACOPY",
													"source": 8
												},
												{
													"begin": 7617,
													"end": 7633,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 7614,
													"end": 7615,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 7607,
													"end": 7634,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 7186,
													"end": 7668,
													"name": "tag",
													"source": 8,
													"value": "118"
												},
												{
													"begin": 7186,
													"end": 7668,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 4396,
													"end": 7698,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 4396,
													"end": 7698,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 4396,
													"end": 7698,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 4376,
													"end": 7698,
													"name": "tag",
													"source": 8,
													"value": "116"
												},
												{
													"begin": 4376,
													"end": 7698,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 7921,
													"end": 7964,
													"name": "PUSH",
													"source": 8,
													"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 7846,
													"end": 7887,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 7806,
													"end": 7994,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8140,
													"end": 8145,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 8063,
													"end": 8106,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 8023,
													"end": 8175,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8320,
													"end": 8324,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 8244,
													"end": 8286,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 8204,
													"end": 8354,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8432,
													"end": 8434,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 8390,
													"end": 8430,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 8383,
													"end": 8435,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8513,
													"end": 8514,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 8471,
													"end": 8511,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 8464,
													"end": 8515,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8662,
													"end": 8668,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 8584,
													"end": 8628,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 8544,
													"end": 8698,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 8842,
													"end": 8882,
													"name": "PUSH",
													"source": 8,
													"value": "A4"
												},
												{
													"begin": 8767,
													"end": 8808,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 8727,
													"end": 8912,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 4179,
													"end": 8938,
													"name": "tag",
													"source": 8,
													"value": "115"
												},
												{
													"begin": 4179,
													"end": 8938,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 9227,
													"end": 9276,
													"name": "PUSH",
													"source": 8,
													"value": "9889192300000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 9150,
													"end": 9197,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 9114,
													"end": 9302,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 9442,
													"end": 9447,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 9363,
													"end": 9412,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 9327,
													"end": 9473,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 9612,
													"end": 9616,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 9534,
													"end": 9582,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 9498,
													"end": 9642,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 9779,
													"end": 9781,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 9703,
													"end": 9749,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 9667,
													"end": 9807,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 9948,
													"end": 9954,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 9868,
													"end": 9918,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 9832,
													"end": 9980,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 10118,
													"end": 10164,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 10041,
													"end": 10088,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 10005,
													"end": 10190,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 4080,
													"end": 10212,
													"name": "tag",
													"source": 8,
													"value": "114"
												},
												{
													"begin": 4080,
													"end": 10212,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 10348,
													"end": 10374,
													"name": "PUSH",
													"source": 8,
													"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 10322,
													"end": 10346,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 10315,
													"end": 10375,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 10431,
													"end": 10436,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 10403,
													"end": 10429,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 10396,
													"end": 10437,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 10491,
													"end": 10514,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 10465,
													"end": 10489,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 10458,
													"end": 10515,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 3951,
													"end": 10533,
													"name": "tag",
													"source": 8,
													"value": "113"
												},
												{
													"begin": 3951,
													"end": 10533,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 3643,
													"end": 10753,
													"name": "tag",
													"source": 8,
													"value": "112"
												},
												{
													"begin": 3643,
													"end": 10753,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 10854,
													"end": 10864,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 10831,
													"end": 10852,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 10824,
													"end": 10865,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 10942,
													"end": 10943,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 10932,
													"end": 10940,
													"name": "PUSH",
													"source": 8,
													"value": "60"
												},
												{
													"begin": 10925,
													"end": 10944,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 1573,
													"end": 10954,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1573,
													"end": 10954,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1573,
													"end": 10954,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 1345,
													"end": 10960,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "tag",
													"source": 8,
													"value": "87"
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 11883,
													"end": 11888,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 11871,
													"end": 11889,
													"name": "EXTCODESIZE",
													"source": 8
												},
												{
													"begin": 11861,
													"end": 12115,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "120"
												},
												{
													"begin": 11861,
													"end": 12115,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 11942,
													"end": 11968,
													"name": "PUSH",
													"source": 8,
													"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 11916,
													"end": 11940,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 11909,
													"end": 11969,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12021,
													"end": 12026,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 11993,
													"end": 12019,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 11986,
													"end": 12027,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12077,
													"end": 12100,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 12051,
													"end": 12075,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 12044,
													"end": 12101,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 11861,
													"end": 12115,
													"name": "tag",
													"source": 8,
													"value": "120"
												},
												{
													"begin": 11861,
													"end": 12115,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 12313,
													"end": 12334,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 12307,
													"end": 12335,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 12459,
													"end": 12488,
													"name": "PUSH",
													"source": 8,
													"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 12430,
													"end": 12457,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 12423,
													"end": 12489,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12539,
													"end": 12543,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 12509,
													"end": 12537,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 12502,
													"end": 12544,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12592,
													"end": 12594,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 12564,
													"end": 12590,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 12557,
													"end": 12595,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12643,
													"end": 12653,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 12615,
													"end": 12641,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 12608,
													"end": 12654,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 12933,
													"end": 12934,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 12914,
													"end": 12915,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 12870,
													"end": 12896,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 12825,
													"end": 12852,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 12806,
													"end": 12807,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 12783,
													"end": 12788,
													"name": "DUP10",
													"source": 8
												},
												{
													"begin": 12760,
													"end": 12765,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 12738,
													"end": 12948,
													"name": "CALL",
													"source": 8
												},
												{
													"begin": 13013,
													"end": 13020,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 13003,
													"end": 16271,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "121"
												},
												{
													"begin": 13003,
													"end": 16271,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 13164,
													"end": 13180,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 13161,
													"end": 15489,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 13161,
													"end": 15489,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "122"
												},
												{
													"begin": 13161,
													"end": 15489,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 13606,
													"end": 13613,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 13566,
													"end": 13579,
													"name": "PUSH",
													"source": 8,
													"value": "1F"
												},
												{
													"begin": 13548,
													"end": 13564,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 13544,
													"end": 13580,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 13515,
													"end": 13635,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 13917,
													"end": 13924,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 13905,
													"end": 13915,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 13901,
													"end": 13925,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 14045,
													"end": 14060,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 14032,
													"end": 14043,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 14028,
													"end": 14061,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 14174,
													"end": 14184,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 14157,
													"end": 14172,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 14154,
													"end": 14185,
													"name": "GT",
													"source": 8
												},
												{
													"begin": 14151,
													"end": 14920,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 14151,
													"end": 14920,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "123"
												},
												{
													"begin": 14151,
													"end": 14920,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 14782,
													"end": 14808,
													"name": "PUSH",
													"source": 8,
													"value": "200"
												},
												{
													"begin": 14695,
													"end": 14705,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 14683,
													"end": 14693,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 14679,
													"end": 14706,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 14621,
													"end": 14636,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 14604,
													"end": 14619,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 14600,
													"end": 14637,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 14555,
													"end": 14744,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 14514,
													"end": 14842,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 14435,
													"end": 14446,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 14386,
													"end": 14396,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 14369,
													"end": 14384,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 14365,
													"end": 14397,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 14324,
													"end": 14480,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 14287,
													"end": 14872,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 14253,
													"end": 14257,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 14220,
													"end": 14898,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 14212,
													"end": 14898,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 14212,
													"end": 14898,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 14151,
													"end": 14920,
													"name": "tag",
													"source": 8,
													"value": "123"
												},
												{
													"begin": 14151,
													"end": 14920,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 15164,
													"end": 15169,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 15147,
													"end": 15161,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 15141,
													"end": 15145,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 15137,
													"end": 15162,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 15134,
													"end": 15170,
													"name": "LT",
													"source": 8
												},
												{
													"begin": 15131,
													"end": 15471,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 15131,
													"end": 15471,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "124"
												},
												{
													"begin": 15131,
													"end": 15471,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 15299,
													"end": 15315,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 15296,
													"end": 15297,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 15293,
													"end": 15294,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 15278,
													"end": 15316,
													"name": "RETURNDATACOPY",
													"source": 8
												},
												{
													"begin": 15432,
													"end": 15448,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 15429,
													"end": 15430,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 15422,
													"end": 15449,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 15131,
													"end": 15471,
													"name": "tag",
													"source": 8,
													"value": "124"
												},
												{
													"begin": 15131,
													"end": 15471,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 13181,
													"end": 15489,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 13181,
													"end": 15489,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 13181,
													"end": 15489,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 13161,
													"end": 15489,
													"name": "tag",
													"source": 8,
													"value": "122"
												},
												{
													"begin": 13161,
													"end": 15489,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 15664,
													"end": 15707,
													"name": "PUSH",
													"source": 8,
													"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 15601,
													"end": 15642,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 15573,
													"end": 15725,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 15794,
													"end": 15799,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 15749,
													"end": 15792,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 15742,
													"end": 15800,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 15868,
													"end": 15872,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 15824,
													"end": 15866,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 15817,
													"end": 15873,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 15939,
													"end": 15941,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 15897,
													"end": 15937,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 15890,
													"end": 15942,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 16008,
													"end": 16018,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 15966,
													"end": 16006,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 15959,
													"end": 16019,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 16089,
													"end": 16090,
													"name": "PUSH",
													"source": 8,
													"value": "1"
												},
												{
													"begin": 16043,
													"end": 16087,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 16036,
													"end": 16091,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 16199,
													"end": 16239,
													"name": "PUSH",
													"source": 8,
													"value": "A4"
												},
												{
													"begin": 16136,
													"end": 16177,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 16108,
													"end": 16257,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 13003,
													"end": 16271,
													"name": "tag",
													"source": 8,
													"value": "121"
												},
												{
													"begin": 13003,
													"end": 16271,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 16372,
													"end": 16382,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 16349,
													"end": 16370,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 16342,
													"end": 16383,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 16460,
													"end": 16461,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 16450,
													"end": 16458,
													"name": "PUSH",
													"source": 8,
													"value": "60"
												},
												{
													"begin": 16443,
													"end": 16462,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 11798,
													"end": 16472,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11798,
													"end": 16472,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 11564,
													"end": 16478,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "tag",
													"source": 8,
													"value": "99"
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 17471,
													"end": 17476,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 17459,
													"end": 17477,
													"name": "EXTCODESIZE",
													"source": 8
												},
												{
													"begin": 17449,
													"end": 17703,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "126"
												},
												{
													"begin": 17449,
													"end": 17703,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 17530,
													"end": 17556,
													"name": "PUSH",
													"source": 8,
													"value": "5F15D67200000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 17504,
													"end": 17528,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 17497,
													"end": 17557,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 17609,
													"end": 17614,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 17581,
													"end": 17607,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 17574,
													"end": 17615,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 17665,
													"end": 17688,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 17639,
													"end": 17663,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 17632,
													"end": 17689,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 17449,
													"end": 17703,
													"name": "tag",
													"source": 8,
													"value": "126"
												},
												{
													"begin": 17449,
													"end": 17703,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 17895,
													"end": 17916,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 17889,
													"end": 17917,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 17952,
													"end": 17960,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 17946,
													"end": 17961,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 17996,
													"end": 18004,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 17990,
													"end": 18005,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 18040,
													"end": 18048,
													"name": "PUSH",
													"source": 8,
													"value": "C0"
												},
												{
													"begin": 18034,
													"end": 18049,
													"name": "MLOAD",
													"source": 8
												},
												{
													"begin": 18215,
													"end": 18249,
													"name": "PUSH",
													"source": 8,
													"value": "F242432A00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 18165,
													"end": 18197,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 18141,
													"end": 18263,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18318,
													"end": 18322,
													"name": "DUP8",
													"source": 8
												},
												{
													"begin": 18283,
													"end": 18316,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 18276,
													"end": 18323,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18376,
													"end": 18378,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 18343,
													"end": 18374,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 18336,
													"end": 18379,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18432,
													"end": 18442,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 18399,
													"end": 18430,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 18392,
													"end": 18443,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18500,
													"end": 18506,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 18463,
													"end": 18498,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 18456,
													"end": 18507,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18602,
													"end": 18645,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 18544,
													"end": 18584,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 18520,
													"end": 18659,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 18721,
													"end": 18722,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 18679,
													"end": 18719,
													"name": "PUSH",
													"source": 8,
													"value": "A4"
												},
												{
													"begin": 18672,
													"end": 18723,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 19012,
													"end": 19013,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 18993,
													"end": 18994,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 18944,
													"end": 18975,
													"name": "PUSH",
													"source": 8,
													"value": "C4"
												},
												{
													"begin": 18894,
													"end": 18926,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 18875,
													"end": 18876,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 18852,
													"end": 18857,
													"name": "DUP14",
													"source": 8
												},
												{
													"begin": 18829,
													"end": 18834,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 18807,
													"end": 19027,
													"name": "CALL",
													"source": 8
												},
												{
													"begin": 19092,
													"end": 19099,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 19082,
													"end": 22355,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "127"
												},
												{
													"begin": 19082,
													"end": 22355,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 19243,
													"end": 19259,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 19240,
													"end": 21568,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 19240,
													"end": 21568,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "128"
												},
												{
													"begin": 19240,
													"end": 21568,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 19685,
													"end": 19692,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 19645,
													"end": 19658,
													"name": "PUSH",
													"source": 8,
													"value": "1F"
												},
												{
													"begin": 19627,
													"end": 19643,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 19623,
													"end": 19659,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 19594,
													"end": 19714,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 19996,
													"end": 20003,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 19984,
													"end": 19994,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 19980,
													"end": 20004,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 20124,
													"end": 20139,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 20111,
													"end": 20122,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 20107,
													"end": 20140,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 20253,
													"end": 20263,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 20236,
													"end": 20251,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 20233,
													"end": 20264,
													"name": "GT",
													"source": 8
												},
												{
													"begin": 20230,
													"end": 20999,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 20230,
													"end": 20999,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "129"
												},
												{
													"begin": 20230,
													"end": 20999,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 20861,
													"end": 20887,
													"name": "PUSH",
													"source": 8,
													"value": "200"
												},
												{
													"begin": 20774,
													"end": 20784,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 20762,
													"end": 20772,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 20758,
													"end": 20785,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 20700,
													"end": 20715,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 20683,
													"end": 20698,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 20679,
													"end": 20716,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 20634,
													"end": 20823,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 20593,
													"end": 20921,
													"name": "DIV",
													"source": 8
												},
												{
													"begin": 20514,
													"end": 20525,
													"name": "PUSH",
													"source": 8,
													"value": "3"
												},
												{
													"begin": 20465,
													"end": 20475,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 20448,
													"end": 20463,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 20444,
													"end": 20476,
													"name": "SUB",
													"source": 8
												},
												{
													"begin": 20403,
													"end": 20559,
													"name": "MUL",
													"source": 8
												},
												{
													"begin": 20366,
													"end": 20951,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 20332,
													"end": 20336,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 20299,
													"end": 20977,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 20291,
													"end": 20977,
													"name": "SWAP1",
													"source": 8
												},
												{
													"begin": 20291,
													"end": 20977,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 20230,
													"end": 20999,
													"name": "tag",
													"source": 8,
													"value": "129"
												},
												{
													"begin": 20230,
													"end": 20999,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 21243,
													"end": 21248,
													"name": "GAS",
													"source": 8
												},
												{
													"begin": 21226,
													"end": 21240,
													"name": "PUSH",
													"source": 8,
													"value": "20"
												},
												{
													"begin": 21220,
													"end": 21224,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 21216,
													"end": 21241,
													"name": "ADD",
													"source": 8
												},
												{
													"begin": 21213,
													"end": 21249,
													"name": "LT",
													"source": 8
												},
												{
													"begin": 21210,
													"end": 21550,
													"name": "ISZERO",
													"source": 8
												},
												{
													"begin": 21210,
													"end": 21550,
													"name": "PUSH [tag]",
													"source": 8,
													"value": "130"
												},
												{
													"begin": 21210,
													"end": 21550,
													"name": "JUMPI",
													"source": 8
												},
												{
													"begin": 21378,
													"end": 21394,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 21375,
													"end": 21376,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 21372,
													"end": 21373,
													"name": "DUP1",
													"source": 8
												},
												{
													"begin": 21357,
													"end": 21395,
													"name": "RETURNDATACOPY",
													"source": 8
												},
												{
													"begin": 21511,
													"end": 21527,
													"name": "RETURNDATASIZE",
													"source": 8
												},
												{
													"begin": 21508,
													"end": 21509,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 21501,
													"end": 21528,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 21210,
													"end": 21550,
													"name": "tag",
													"source": 8,
													"value": "130"
												},
												{
													"begin": 21210,
													"end": 21550,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 19260,
													"end": 21568,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 19260,
													"end": 21568,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 19260,
													"end": 21568,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 19240,
													"end": 21568,
													"name": "tag",
													"source": 8,
													"value": "128"
												},
												{
													"begin": 19240,
													"end": 21568,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 21743,
													"end": 21786,
													"name": "PUSH",
													"source": 8,
													"value": "F486BC8700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 21680,
													"end": 21721,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 21652,
													"end": 21804,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 21873,
													"end": 21878,
													"name": "DUP10",
													"source": 8
												},
												{
													"begin": 21828,
													"end": 21871,
													"name": "PUSH",
													"source": 8,
													"value": "4"
												},
												{
													"begin": 21821,
													"end": 21879,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 21947,
													"end": 21951,
													"name": "DUP9",
													"source": 8
												},
												{
													"begin": 21903,
													"end": 21945,
													"name": "PUSH",
													"source": 8,
													"value": "24"
												},
												{
													"begin": 21896,
													"end": 21952,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22018,
													"end": 22020,
													"name": "DUP8",
													"source": 8
												},
												{
													"begin": 21976,
													"end": 22016,
													"name": "PUSH",
													"source": 8,
													"value": "44"
												},
												{
													"begin": 21969,
													"end": 22021,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22087,
													"end": 22097,
													"name": "DUP7",
													"source": 8
												},
												{
													"begin": 22045,
													"end": 22085,
													"name": "PUSH",
													"source": 8,
													"value": "64"
												},
												{
													"begin": 22038,
													"end": 22098,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22168,
													"end": 22174,
													"name": "DUP6",
													"source": 8
												},
												{
													"begin": 22122,
													"end": 22166,
													"name": "PUSH",
													"source": 8,
													"value": "84"
												},
												{
													"begin": 22115,
													"end": 22175,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22283,
													"end": 22323,
													"name": "PUSH",
													"source": 8,
													"value": "A4"
												},
												{
													"begin": 22220,
													"end": 22261,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 22192,
													"end": 22341,
													"name": "REVERT",
													"source": 8
												},
												{
													"begin": 19082,
													"end": 22355,
													"name": "tag",
													"source": 8,
													"value": "127"
												},
												{
													"begin": 19082,
													"end": 22355,
													"name": "JUMPDEST",
													"source": 8
												},
												{
													"begin": 22386,
													"end": 22394,
													"name": "DUP4",
													"source": 8
												},
												{
													"begin": 22376,
													"end": 22384,
													"name": "PUSH",
													"source": 8,
													"value": "80"
												},
												{
													"begin": 22369,
													"end": 22395,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22447,
													"end": 22455,
													"name": "DUP3",
													"source": 8
												},
												{
													"begin": 22437,
													"end": 22445,
													"name": "PUSH",
													"source": 8,
													"value": "A0"
												},
												{
													"begin": 22430,
													"end": 22456,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22508,
													"end": 22516,
													"name": "DUP2",
													"source": 8
												},
												{
													"begin": 22498,
													"end": 22506,
													"name": "PUSH",
													"source": 8,
													"value": "C0"
												},
												{
													"begin": 22491,
													"end": 22517,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22640,
													"end": 22650,
													"name": "DUP5",
													"source": 8
												},
												{
													"begin": 22617,
													"end": 22638,
													"name": "PUSH",
													"source": 8,
													"value": "40"
												},
												{
													"begin": 22610,
													"end": 22651,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 22728,
													"end": 22729,
													"name": "PUSH",
													"source": 8,
													"value": "0"
												},
												{
													"begin": 22718,
													"end": 22726,
													"name": "PUSH",
													"source": 8,
													"value": "60"
												},
												{
													"begin": 22711,
													"end": 22730,
													"name": "MSTORE",
													"source": 8
												},
												{
													"begin": 17386,
													"end": 22740,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17386,
													"end": 22740,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17386,
													"end": 22740,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17386,
													"end": 22740,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17386,
													"end": 22740,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"name": "POP",
													"source": 8
												},
												{
													"begin": 17126,
													"end": 22746,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 8
												},
												{
													"begin": 88,
													"end": 205,
													"name": "tag",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 88,
													"end": 205,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 197,
													"end": 198,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 194,
													"end": 195,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 187,
													"end": 199,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 211,
													"end": 328,
													"name": "tag",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 211,
													"end": 328,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 320,
													"end": 321,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 317,
													"end": 318,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 310,
													"end": 322,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 334,
													"end": 451,
													"name": "tag",
													"source": 10,
													"value": "134"
												},
												{
													"begin": 334,
													"end": 451,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 443,
													"end": 444,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 440,
													"end": 441,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 433,
													"end": 445,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 457,
													"end": 574,
													"name": "tag",
													"source": 10,
													"value": "135"
												},
												{
													"begin": 457,
													"end": 574,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 566,
													"end": 567,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 563,
													"end": 564,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 556,
													"end": 568,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 580,
													"end": 697,
													"name": "tag",
													"source": 10,
													"value": "136"
												},
												{
													"begin": 580,
													"end": 697,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 689,
													"end": 690,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 686,
													"end": 687,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 679,
													"end": 691,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "tag",
													"source": 10,
													"value": "137"
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 843,
													"end": 851,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 853,
													"end": 859,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 903,
													"end": 906,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 896,
													"end": 900,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 888,
													"end": 894,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 884,
													"end": 901,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 880,
													"end": 907,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 870,
													"end": 992,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "160"
												},
												{
													"begin": 870,
													"end": 992,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 911,
													"end": 990,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "161"
												},
												{
													"begin": 911,
													"end": 990,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "134"
												},
												{
													"begin": 911,
													"end": 990,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 911,
													"end": 990,
													"name": "tag",
													"source": 10,
													"value": "161"
												},
												{
													"begin": 911,
													"end": 990,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 870,
													"end": 992,
													"name": "tag",
													"source": 10,
													"value": "160"
												},
												{
													"begin": 870,
													"end": 992,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1024,
													"end": 1030,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1011,
													"end": 1031,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 1001,
													"end": 1031,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1001,
													"end": 1031,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1054,
													"end": 1072,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1046,
													"end": 1052,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1043,
													"end": 1073,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 1040,
													"end": 1157,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1040,
													"end": 1157,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "162"
												},
												{
													"begin": 1040,
													"end": 1157,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1076,
													"end": 1155,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "163"
												},
												{
													"begin": 1076,
													"end": 1155,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "135"
												},
												{
													"begin": 1076,
													"end": 1155,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1076,
													"end": 1155,
													"name": "tag",
													"source": 10,
													"value": "163"
												},
												{
													"begin": 1076,
													"end": 1155,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1040,
													"end": 1157,
													"name": "tag",
													"source": 10,
													"value": "162"
												},
												{
													"begin": 1040,
													"end": 1157,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1190,
													"end": 1194,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1182,
													"end": 1188,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 1178,
													"end": 1195,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1166,
													"end": 1195,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 1166,
													"end": 1195,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1244,
													"end": 1247,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 1236,
													"end": 1240,
													"name": "PUSH",
													"source": 10,
													"value": "C0"
												},
												{
													"begin": 1228,
													"end": 1234,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1224,
													"end": 1241,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 1214,
													"end": 1222,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 1210,
													"end": 1242,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1207,
													"end": 1248,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 1204,
													"end": 1332,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1204,
													"end": 1332,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "164"
												},
												{
													"begin": 1204,
													"end": 1332,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1251,
													"end": 1330,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "165"
												},
												{
													"begin": 1251,
													"end": 1330,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "136"
												},
												{
													"begin": 1251,
													"end": 1330,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1251,
													"end": 1330,
													"name": "tag",
													"source": 10,
													"value": "165"
												},
												{
													"begin": 1251,
													"end": 1330,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1204,
													"end": 1332,
													"name": "tag",
													"source": 10,
													"value": "164"
												},
												{
													"begin": 1204,
													"end": 1332,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 735,
													"end": 1338,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "tag",
													"source": 10,
													"value": "9"
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1465,
													"end": 1471,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1473,
													"end": 1479,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 1522,
													"end": 1524,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 1510,
													"end": 1519,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 1501,
													"end": 1508,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1497,
													"end": 1520,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 1493,
													"end": 1525,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 1490,
													"end": 1609,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1490,
													"end": 1609,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "167"
												},
												{
													"begin": 1490,
													"end": 1609,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1528,
													"end": 1607,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "168"
												},
												{
													"begin": 1528,
													"end": 1607,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 1528,
													"end": 1607,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1528,
													"end": 1607,
													"name": "tag",
													"source": 10,
													"value": "168"
												},
												{
													"begin": 1528,
													"end": 1607,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1490,
													"end": 1609,
													"name": "tag",
													"source": 10,
													"value": "167"
												},
												{
													"begin": 1490,
													"end": 1609,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1676,
													"end": 1677,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 1665,
													"end": 1674,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 1661,
													"end": 1678,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1648,
													"end": 1679,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 1706,
													"end": 1724,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1698,
													"end": 1704,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 1695,
													"end": 1725,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 1692,
													"end": 1809,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 1692,
													"end": 1809,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "169"
												},
												{
													"begin": 1692,
													"end": 1809,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 1728,
													"end": 1807,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "170"
												},
												{
													"begin": 1728,
													"end": 1807,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 1728,
													"end": 1807,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1728,
													"end": 1807,
													"name": "tag",
													"source": 10,
													"value": "170"
												},
												{
													"begin": 1728,
													"end": 1807,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1692,
													"end": 1809,
													"name": "tag",
													"source": 10,
													"value": "169"
												},
												{
													"begin": 1692,
													"end": 1809,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1841,
													"end": 1956,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "171"
												},
												{
													"begin": 1948,
													"end": 1955,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 1939,
													"end": 1945,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 1928,
													"end": 1937,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 1924,
													"end": 1946,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 1841,
													"end": 1956,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "137"
												},
												{
													"begin": 1841,
													"end": 1956,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1841,
													"end": 1956,
													"name": "tag",
													"source": 10,
													"value": "171"
												},
												{
													"begin": 1841,
													"end": 1956,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 1823,
													"end": 1956,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1823,
													"end": 1956,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1823,
													"end": 1956,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1823,
													"end": 1956,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1619,
													"end": 1966,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1344,
													"end": 1973,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 1979,
													"end": 2128,
													"name": "tag",
													"source": 10,
													"value": "138"
												},
												{
													"begin": 1979,
													"end": 2128,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2015,
													"end": 2022,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2055,
													"end": 2121,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 2048,
													"end": 2053,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2044,
													"end": 2122,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 2033,
													"end": 2122,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2033,
													"end": 2122,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1979,
													"end": 2128,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 1979,
													"end": 2128,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 1979,
													"end": 2128,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 1979,
													"end": 2128,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2134,
													"end": 2249,
													"name": "tag",
													"source": 10,
													"value": "139"
												},
												{
													"begin": 2134,
													"end": 2249,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2219,
													"end": 2242,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "174"
												},
												{
													"begin": 2236,
													"end": 2241,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2219,
													"end": 2242,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "138"
												},
												{
													"begin": 2219,
													"end": 2242,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2219,
													"end": 2242,
													"name": "tag",
													"source": 10,
													"value": "174"
												},
												{
													"begin": 2219,
													"end": 2242,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2214,
													"end": 2217,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2207,
													"end": 2243,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 2134,
													"end": 2249,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2134,
													"end": 2249,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2134,
													"end": 2249,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "tag",
													"source": 10,
													"value": "12"
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2346,
													"end": 2350,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2384,
													"end": 2386,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2373,
													"end": 2382,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2369,
													"end": 2387,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2361,
													"end": 2387,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2361,
													"end": 2387,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2397,
													"end": 2466,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "176"
												},
												{
													"begin": 2463,
													"end": 2464,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2452,
													"end": 2461,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2448,
													"end": 2465,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2439,
													"end": 2445,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2397,
													"end": 2466,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "139"
												},
												{
													"begin": 2397,
													"end": 2466,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2397,
													"end": 2466,
													"name": "tag",
													"source": 10,
													"value": "176"
												},
												{
													"begin": 2397,
													"end": 2466,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2255,
													"end": 2473,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "tag",
													"source": 10,
													"value": "140"
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2637,
													"end": 2645,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 2647,
													"end": 2653,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 2697,
													"end": 2700,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2690,
													"end": 2694,
													"name": "PUSH",
													"source": 10,
													"value": "1F"
												},
												{
													"begin": 2682,
													"end": 2688,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 2678,
													"end": 2695,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2674,
													"end": 2701,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 2664,
													"end": 2786,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "178"
												},
												{
													"begin": 2664,
													"end": 2786,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2705,
													"end": 2784,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "179"
												},
												{
													"begin": 2705,
													"end": 2784,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "134"
												},
												{
													"begin": 2705,
													"end": 2784,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2705,
													"end": 2784,
													"name": "tag",
													"source": 10,
													"value": "179"
												},
												{
													"begin": 2705,
													"end": 2784,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2664,
													"end": 2786,
													"name": "tag",
													"source": 10,
													"value": "178"
												},
												{
													"begin": 2664,
													"end": 2786,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2818,
													"end": 2824,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 2805,
													"end": 2825,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 2795,
													"end": 2825,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2795,
													"end": 2825,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2848,
													"end": 2866,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 2840,
													"end": 2846,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 2837,
													"end": 2867,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 2951,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 2951,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "180"
												},
												{
													"begin": 2834,
													"end": 2951,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 2870,
													"end": 2949,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "181"
												},
												{
													"begin": 2870,
													"end": 2949,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "135"
												},
												{
													"begin": 2870,
													"end": 2949,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 2870,
													"end": 2949,
													"name": "tag",
													"source": 10,
													"value": "181"
												},
												{
													"begin": 2870,
													"end": 2949,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2834,
													"end": 2951,
													"name": "tag",
													"source": 10,
													"value": "180"
												},
												{
													"begin": 2834,
													"end": 2951,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2984,
													"end": 2988,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 2976,
													"end": 2982,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 2972,
													"end": 2989,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 2960,
													"end": 2989,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 2960,
													"end": 2989,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3038,
													"end": 3041,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 3030,
													"end": 3034,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3022,
													"end": 3028,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3018,
													"end": 3035,
													"name": "MUL",
													"source": 10
												},
												{
													"begin": 3008,
													"end": 3016,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 3004,
													"end": 3036,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3001,
													"end": 3042,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 2998,
													"end": 3126,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 2998,
													"end": 3126,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "182"
												},
												{
													"begin": 2998,
													"end": 3126,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3045,
													"end": 3124,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "183"
												},
												{
													"begin": 3045,
													"end": 3124,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "136"
												},
												{
													"begin": 3045,
													"end": 3124,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3045,
													"end": 3124,
													"name": "tag",
													"source": 10,
													"value": "183"
												},
												{
													"begin": 3045,
													"end": 3124,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2998,
													"end": 3126,
													"name": "tag",
													"source": 10,
													"value": "182"
												},
												{
													"begin": 2998,
													"end": 3126,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 2520,
													"end": 3132,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "tag",
													"source": 10,
													"value": "15"
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3339,
													"end": 3345,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3347,
													"end": 3353,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3355,
													"end": 3361,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3363,
													"end": 3369,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 3412,
													"end": 3414,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 3400,
													"end": 3409,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3391,
													"end": 3398,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 3387,
													"end": 3410,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 3383,
													"end": 3415,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 3380,
													"end": 3499,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3380,
													"end": 3499,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "185"
												},
												{
													"begin": 3380,
													"end": 3499,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3418,
													"end": 3497,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "186"
												},
												{
													"begin": 3418,
													"end": 3497,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 3418,
													"end": 3497,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3418,
													"end": 3497,
													"name": "tag",
													"source": 10,
													"value": "186"
												},
												{
													"begin": 3418,
													"end": 3497,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3380,
													"end": 3499,
													"name": "tag",
													"source": 10,
													"value": "185"
												},
												{
													"begin": 3380,
													"end": 3499,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3566,
													"end": 3567,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 3555,
													"end": 3564,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3551,
													"end": 3568,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3538,
													"end": 3569,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 3596,
													"end": 3614,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3588,
													"end": 3594,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3585,
													"end": 3615,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 3582,
													"end": 3699,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3582,
													"end": 3699,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "187"
												},
												{
													"begin": 3582,
													"end": 3699,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3618,
													"end": 3697,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "188"
												},
												{
													"begin": 3618,
													"end": 3697,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 3618,
													"end": 3697,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3618,
													"end": 3697,
													"name": "tag",
													"source": 10,
													"value": "188"
												},
												{
													"begin": 3618,
													"end": 3697,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3582,
													"end": 3699,
													"name": "tag",
													"source": 10,
													"value": "187"
												},
												{
													"begin": 3582,
													"end": 3699,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3731,
													"end": 3846,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "189"
												},
												{
													"begin": 3838,
													"end": 3845,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 3829,
													"end": 3835,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 3818,
													"end": 3827,
													"name": "DUP9",
													"source": 10
												},
												{
													"begin": 3814,
													"end": 3836,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3731,
													"end": 3846,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "137"
												},
												{
													"begin": 3731,
													"end": 3846,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3731,
													"end": 3846,
													"name": "tag",
													"source": 10,
													"value": "189"
												},
												{
													"begin": 3731,
													"end": 3846,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3713,
													"end": 3846,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 3713,
													"end": 3846,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3713,
													"end": 3846,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 3713,
													"end": 3846,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3509,
													"end": 3856,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3923,
													"end": 3925,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 3912,
													"end": 3921,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 3908,
													"end": 3926,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 3895,
													"end": 3927,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 3954,
													"end": 3972,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3946,
													"end": 3952,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 3943,
													"end": 3973,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 3940,
													"end": 4057,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 3940,
													"end": 4057,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "190"
												},
												{
													"begin": 3940,
													"end": 4057,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 3976,
													"end": 4055,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "191"
												},
												{
													"begin": 3976,
													"end": 4055,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 3976,
													"end": 4055,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 3976,
													"end": 4055,
													"name": "tag",
													"source": 10,
													"value": "191"
												},
												{
													"begin": 3976,
													"end": 4055,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 3940,
													"end": 4057,
													"name": "tag",
													"source": 10,
													"value": "190"
												},
												{
													"begin": 3940,
													"end": 4057,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4089,
													"end": 4213,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "192"
												},
												{
													"begin": 4205,
													"end": 4212,
													"name": "DUP8",
													"source": 10
												},
												{
													"begin": 4196,
													"end": 4202,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4185,
													"end": 4194,
													"name": "DUP9",
													"source": 10
												},
												{
													"begin": 4181,
													"end": 4203,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4089,
													"end": 4213,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "140"
												},
												{
													"begin": 4089,
													"end": 4213,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4089,
													"end": 4213,
													"name": "tag",
													"source": 10,
													"value": "192"
												},
												{
													"begin": 4089,
													"end": 4213,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4071,
													"end": 4213,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4071,
													"end": 4213,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4071,
													"end": 4213,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4071,
													"end": 4213,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3866,
													"end": 4223,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "SWAP6",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "SWAP5",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 3138,
													"end": 4230,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "tag",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4366,
													"end": 4372,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4374,
													"end": 4380,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 4423,
													"end": 4425,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 4411,
													"end": 4420,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4402,
													"end": 4409,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4398,
													"end": 4421,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 4394,
													"end": 4426,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 4391,
													"end": 4510,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4391,
													"end": 4510,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "194"
												},
												{
													"begin": 4391,
													"end": 4510,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4429,
													"end": 4508,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "195"
												},
												{
													"begin": 4429,
													"end": 4508,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 4429,
													"end": 4508,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4429,
													"end": 4508,
													"name": "tag",
													"source": 10,
													"value": "195"
												},
												{
													"begin": 4429,
													"end": 4508,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4391,
													"end": 4510,
													"name": "tag",
													"source": 10,
													"value": "194"
												},
												{
													"begin": 4391,
													"end": 4510,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4577,
													"end": 4578,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4566,
													"end": 4575,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 4562,
													"end": 4579,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4549,
													"end": 4580,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 4607,
													"end": 4625,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFF"
												},
												{
													"begin": 4599,
													"end": 4605,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 4596,
													"end": 4626,
													"name": "GT",
													"source": 10
												},
												{
													"begin": 4593,
													"end": 4710,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 4593,
													"end": 4710,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 4593,
													"end": 4710,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 4629,
													"end": 4708,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 4629,
													"end": 4708,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "133"
												},
												{
													"begin": 4629,
													"end": 4708,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4629,
													"end": 4708,
													"name": "tag",
													"source": 10,
													"value": "197"
												},
												{
													"begin": 4629,
													"end": 4708,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4593,
													"end": 4710,
													"name": "tag",
													"source": 10,
													"value": "196"
												},
												{
													"begin": 4593,
													"end": 4710,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4742,
													"end": 4866,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 4858,
													"end": 4865,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 4849,
													"end": 4855,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4838,
													"end": 4847,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 4834,
													"end": 4856,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 4742,
													"end": 4866,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "140"
												},
												{
													"begin": 4742,
													"end": 4866,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4742,
													"end": 4866,
													"name": "tag",
													"source": 10,
													"value": "198"
												},
												{
													"begin": 4742,
													"end": 4866,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4724,
													"end": 4866,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4724,
													"end": 4866,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4724,
													"end": 4866,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4724,
													"end": 4866,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4520,
													"end": 4876,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4236,
													"end": 4883,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 4889,
													"end": 5015,
													"name": "tag",
													"source": 10,
													"value": "141"
												},
												{
													"begin": 4889,
													"end": 5015,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 4926,
													"end": 4933,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 4966,
													"end": 5008,
													"name": "PUSH",
													"source": 10,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 4959,
													"end": 4964,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 4955,
													"end": 5009,
													"name": "AND",
													"source": 10
												},
												{
													"begin": 4944,
													"end": 5009,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4944,
													"end": 5009,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4889,
													"end": 5015,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 4889,
													"end": 5015,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 4889,
													"end": 5015,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 4889,
													"end": 5015,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5117,
													"name": "tag",
													"source": 10,
													"value": "142"
												},
												{
													"begin": 5021,
													"end": 5117,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5058,
													"end": 5065,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5087,
													"end": 5111,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "201"
												},
												{
													"begin": 5105,
													"end": 5110,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 5087,
													"end": 5111,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "141"
												},
												{
													"begin": 5087,
													"end": 5111,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5087,
													"end": 5111,
													"name": "tag",
													"source": 10,
													"value": "201"
												},
												{
													"begin": 5087,
													"end": 5111,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5076,
													"end": 5111,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5076,
													"end": 5111,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5117,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5117,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5117,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5021,
													"end": 5117,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5123,
													"end": 5245,
													"name": "tag",
													"source": 10,
													"value": "143"
												},
												{
													"begin": 5123,
													"end": 5245,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5196,
													"end": 5220,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "203"
												},
												{
													"begin": 5214,
													"end": 5219,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5196,
													"end": 5220,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "142"
												},
												{
													"begin": 5196,
													"end": 5220,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5196,
													"end": 5220,
													"name": "tag",
													"source": 10,
													"value": "203"
												},
												{
													"begin": 5196,
													"end": 5220,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5189,
													"end": 5194,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5186,
													"end": 5221,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 5176,
													"end": 5239,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "204"
												},
												{
													"begin": 5176,
													"end": 5239,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5235,
													"end": 5236,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5232,
													"end": 5233,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5225,
													"end": 5237,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 5176,
													"end": 5239,
													"name": "tag",
													"source": 10,
													"value": "204"
												},
												{
													"begin": 5176,
													"end": 5239,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5123,
													"end": 5245,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5123,
													"end": 5245,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "tag",
													"source": 10,
													"value": "144"
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5297,
													"end": 5302,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5335,
													"end": 5341,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5322,
													"end": 5342,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 5313,
													"end": 5342,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5313,
													"end": 5342,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5351,
													"end": 5384,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "206"
												},
												{
													"begin": 5378,
													"end": 5383,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5351,
													"end": 5384,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "143"
												},
												{
													"begin": 5351,
													"end": 5384,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5351,
													"end": 5384,
													"name": "tag",
													"source": 10,
													"value": "206"
												},
												{
													"begin": 5351,
													"end": 5384,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5251,
													"end": 5390,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5396,
													"end": 5486,
													"name": "tag",
													"source": 10,
													"value": "145"
												},
												{
													"begin": 5396,
													"end": 5486,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5430,
													"end": 5437,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5473,
													"end": 5478,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5466,
													"end": 5479,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5459,
													"end": 5480,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5448,
													"end": 5480,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5448,
													"end": 5480,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5396,
													"end": 5486,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5396,
													"end": 5486,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5396,
													"end": 5486,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5396,
													"end": 5486,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5492,
													"end": 5608,
													"name": "tag",
													"source": 10,
													"value": "146"
												},
												{
													"begin": 5492,
													"end": 5608,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5562,
													"end": 5583,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "209"
												},
												{
													"begin": 5577,
													"end": 5582,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5562,
													"end": 5583,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "145"
												},
												{
													"begin": 5562,
													"end": 5583,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5562,
													"end": 5583,
													"name": "tag",
													"source": 10,
													"value": "209"
												},
												{
													"begin": 5562,
													"end": 5583,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5555,
													"end": 5560,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5552,
													"end": 5584,
													"name": "EQ",
													"source": 10
												},
												{
													"begin": 5542,
													"end": 5602,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "210"
												},
												{
													"begin": 5542,
													"end": 5602,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5598,
													"end": 5599,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5595,
													"end": 5596,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5588,
													"end": 5600,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 5542,
													"end": 5602,
													"name": "tag",
													"source": 10,
													"value": "210"
												},
												{
													"begin": 5542,
													"end": 5602,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5492,
													"end": 5608,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5492,
													"end": 5608,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "tag",
													"source": 10,
													"value": "147"
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5657,
													"end": 5662,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5695,
													"end": 5701,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5682,
													"end": 5702,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 5673,
													"end": 5702,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5673,
													"end": 5702,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5711,
													"end": 5741,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "212"
												},
												{
													"begin": 5735,
													"end": 5740,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 5711,
													"end": 5741,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "146"
												},
												{
													"begin": 5711,
													"end": 5741,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5711,
													"end": 5741,
													"name": "tag",
													"source": 10,
													"value": "212"
												},
												{
													"begin": 5711,
													"end": 5741,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5614,
													"end": 5747,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "tag",
													"source": 10,
													"value": "25"
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5818,
													"end": 5824,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 5826,
													"end": 5832,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 5875,
													"end": 5877,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 5863,
													"end": 5872,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 5854,
													"end": 5861,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 5850,
													"end": 5873,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 5846,
													"end": 5878,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 5843,
													"end": 5962,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 5843,
													"end": 5962,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "214"
												},
												{
													"begin": 5843,
													"end": 5962,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 5881,
													"end": 5960,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "215"
												},
												{
													"begin": 5881,
													"end": 5960,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 5881,
													"end": 5960,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 5881,
													"end": 5960,
													"name": "tag",
													"source": 10,
													"value": "215"
												},
												{
													"begin": 5881,
													"end": 5960,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 5843,
													"end": 5962,
													"name": "tag",
													"source": 10,
													"value": "214"
												},
												{
													"begin": 5843,
													"end": 5962,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6001,
													"end": 6002,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6026,
													"end": 6079,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "216"
												},
												{
													"begin": 6071,
													"end": 6078,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6062,
													"end": 6068,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6051,
													"end": 6060,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 6047,
													"end": 6069,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6026,
													"end": 6079,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "144"
												},
												{
													"begin": 6026,
													"end": 6079,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6026,
													"end": 6079,
													"name": "tag",
													"source": 10,
													"value": "216"
												},
												{
													"begin": 6026,
													"end": 6079,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6016,
													"end": 6079,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 6016,
													"end": 6079,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5972,
													"end": 6089,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6128,
													"end": 6130,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 6154,
													"end": 6204,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "217"
												},
												{
													"begin": 6196,
													"end": 6203,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6187,
													"end": 6193,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6176,
													"end": 6185,
													"name": "DUP7",
													"source": 10
												},
												{
													"begin": 6172,
													"end": 6194,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6154,
													"end": 6204,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "147"
												},
												{
													"begin": 6154,
													"end": 6204,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6154,
													"end": 6204,
													"name": "tag",
													"source": 10,
													"value": "217"
												},
												{
													"begin": 6154,
													"end": 6204,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6144,
													"end": 6204,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 6144,
													"end": 6204,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6099,
													"end": 6214,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 5753,
													"end": 6221,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6227,
													"end": 6407,
													"name": "tag",
													"source": 10,
													"value": "36"
												},
												{
													"begin": 6227,
													"end": 6407,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6275,
													"end": 6352,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 6272,
													"end": 6273,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6265,
													"end": 6353,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6372,
													"end": 6376,
													"name": "PUSH",
													"source": 10,
													"value": "32"
												},
												{
													"begin": 6369,
													"end": 6370,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 6362,
													"end": 6377,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6396,
													"end": 6400,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 6393,
													"end": 6394,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6386,
													"end": 6401,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 6413,
													"end": 6531,
													"name": "tag",
													"source": 10,
													"value": "148"
												},
												{
													"begin": 6413,
													"end": 6531,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6500,
													"end": 6524,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "220"
												},
												{
													"begin": 6518,
													"end": 6523,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6500,
													"end": 6524,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "142"
												},
												{
													"begin": 6500,
													"end": 6524,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6500,
													"end": 6524,
													"name": "tag",
													"source": 10,
													"value": "220"
												},
												{
													"begin": 6500,
													"end": 6524,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6495,
													"end": 6498,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6488,
													"end": 6525,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6413,
													"end": 6531,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6413,
													"end": 6531,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6413,
													"end": 6531,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6537,
													"end": 6646,
													"name": "tag",
													"source": 10,
													"value": "149"
												},
												{
													"begin": 6537,
													"end": 6646,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6639,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "222"
												},
												{
													"begin": 6633,
													"end": 6638,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6639,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "145"
												},
												{
													"begin": 6618,
													"end": 6639,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6618,
													"end": 6639,
													"name": "tag",
													"source": 10,
													"value": "222"
												},
												{
													"begin": 6618,
													"end": 6639,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6613,
													"end": 6616,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6606,
													"end": 6640,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 6537,
													"end": 6646,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6537,
													"end": 6646,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6537,
													"end": 6646,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "tag",
													"source": 10,
													"value": "57"
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6767,
													"end": 6771,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6805,
													"end": 6807,
													"name": "PUSH",
													"source": 10,
													"value": "40"
												},
												{
													"begin": 6794,
													"end": 6803,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 6790,
													"end": 6808,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6782,
													"end": 6808,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 6782,
													"end": 6808,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6818,
													"end": 6889,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "224"
												},
												{
													"begin": 6886,
													"end": 6887,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 6875,
													"end": 6884,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 6871,
													"end": 6888,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6862,
													"end": 6868,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 6818,
													"end": 6889,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "148"
												},
												{
													"begin": 6818,
													"end": 6889,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6818,
													"end": 6889,
													"name": "tag",
													"source": 10,
													"value": "224"
												},
												{
													"begin": 6818,
													"end": 6889,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6899,
													"end": 6965,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "225"
												},
												{
													"begin": 6961,
													"end": 6963,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 6950,
													"end": 6959,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 6946,
													"end": 6964,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 6937,
													"end": 6943,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 6899,
													"end": 6965,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "149"
												},
												{
													"begin": 6899,
													"end": 6965,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6899,
													"end": 6965,
													"name": "tag",
													"source": 10,
													"value": "225"
												},
												{
													"begin": 6899,
													"end": 6965,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "SWAP4",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6652,
													"end": 6972,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "tag",
													"source": 10,
													"value": "59"
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7065,
													"end": 7069,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7103,
													"end": 7105,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 7092,
													"end": 7101,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7088,
													"end": 7106,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7080,
													"end": 7106,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7080,
													"end": 7106,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7116,
													"end": 7181,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "227"
												},
												{
													"begin": 7178,
													"end": 7179,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7167,
													"end": 7176,
													"name": "DUP4",
													"source": 10
												},
												{
													"begin": 7163,
													"end": 7180,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7154,
													"end": 7160,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 7116,
													"end": 7181,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "149"
												},
												{
													"begin": 7116,
													"end": 7181,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7116,
													"end": 7181,
													"name": "tag",
													"source": 10,
													"value": "227"
												},
												{
													"begin": 7116,
													"end": 7181,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 6978,
													"end": 7188,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7194,
													"end": 7374,
													"name": "tag",
													"source": 10,
													"value": "63"
												},
												{
													"begin": 7194,
													"end": 7374,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7242,
													"end": 7319,
													"name": "PUSH",
													"source": 10,
													"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 7239,
													"end": 7240,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7232,
													"end": 7320,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7339,
													"end": 7343,
													"name": "PUSH",
													"source": 10,
													"value": "21"
												},
												{
													"begin": 7336,
													"end": 7337,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 7329,
													"end": 7344,
													"name": "MSTORE",
													"source": 10
												},
												{
													"begin": 7363,
													"end": 7367,
													"name": "PUSH",
													"source": 10,
													"value": "24"
												},
												{
													"begin": 7360,
													"end": 7361,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7353,
													"end": 7368,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 7380,
													"end": 7499,
													"name": "tag",
													"source": 10,
													"value": "150"
												},
												{
													"begin": 7380,
													"end": 7499,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7473,
													"end": 7474,
													"name": "PUSH",
													"source": 10,
													"value": "4"
												},
												{
													"begin": 7466,
													"end": 7471,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7463,
													"end": 7475,
													"name": "LT",
													"source": 10
												},
												{
													"begin": 7453,
													"end": 7493,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "230"
												},
												{
													"begin": 7453,
													"end": 7493,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 7489,
													"end": 7490,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7486,
													"end": 7487,
													"name": "DUP1",
													"source": 10
												},
												{
													"begin": 7479,
													"end": 7491,
													"name": "REVERT",
													"source": 10
												},
												{
													"begin": 7453,
													"end": 7493,
													"name": "tag",
													"source": 10,
													"value": "230"
												},
												{
													"begin": 7453,
													"end": 7493,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7380,
													"end": 7499,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7380,
													"end": 7499,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "tag",
													"source": 10,
													"value": "151"
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7571,
													"end": 7576,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7609,
													"end": 7615,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7596,
													"end": 7616,
													"name": "CALLDATALOAD",
													"source": 10
												},
												{
													"begin": 7587,
													"end": 7616,
													"name": "SWAP1",
													"source": 10
												},
												{
													"begin": 7587,
													"end": 7616,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7625,
													"end": 7678,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "232"
												},
												{
													"begin": 7672,
													"end": 7677,
													"name": "DUP2",
													"source": 10
												},
												{
													"begin": 7625,
													"end": 7678,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "150"
												},
												{
													"begin": 7625,
													"end": 7678,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7625,
													"end": 7678,
													"name": "tag",
													"source": 10,
													"value": "232"
												},
												{
													"begin": 7625,
													"end": 7678,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7505,
													"end": 7684,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "tag",
													"source": 10,
													"value": "65"
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7769,
													"end": 7775,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7818,
													"end": 7820,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 7806,
													"end": 7815,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 7797,
													"end": 7804,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 7793,
													"end": 7816,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 7789,
													"end": 7821,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 7786,
													"end": 7905,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 7786,
													"end": 7905,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "234"
												},
												{
													"begin": 7786,
													"end": 7905,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 7824,
													"end": 7903,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "235"
												},
												{
													"begin": 7824,
													"end": 7903,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 7824,
													"end": 7903,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7824,
													"end": 7903,
													"name": "tag",
													"source": 10,
													"value": "235"
												},
												{
													"begin": 7824,
													"end": 7903,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7786,
													"end": 7905,
													"name": "tag",
													"source": 10,
													"value": "234"
												},
												{
													"begin": 7786,
													"end": 7905,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7944,
													"end": 7945,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 7969,
													"end": 8042,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "236"
												},
												{
													"begin": 8034,
													"end": 8041,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 8025,
													"end": 8031,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 8014,
													"end": 8023,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 8010,
													"end": 8032,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 7969,
													"end": 8042,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "151"
												},
												{
													"begin": 7969,
													"end": 8042,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 7969,
													"end": 8042,
													"name": "tag",
													"source": 10,
													"value": "236"
												},
												{
													"begin": 7969,
													"end": 8042,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 7959,
													"end": 8042,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 7959,
													"end": 8042,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7915,
													"end": 8052,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 7690,
													"end": 8059,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "tag",
													"source": 10,
													"value": "71"
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 8124,
													"end": 8130,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 8173,
													"end": 8175,
													"name": "PUSH",
													"source": 10,
													"value": "20"
												},
												{
													"begin": 8161,
													"end": 8170,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 8152,
													"end": 8159,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 8148,
													"end": 8171,
													"name": "SUB",
													"source": 10
												},
												{
													"begin": 8144,
													"end": 8176,
													"name": "SLT",
													"source": 10
												},
												{
													"begin": 8141,
													"end": 8260,
													"name": "ISZERO",
													"source": 10
												},
												{
													"begin": 8141,
													"end": 8260,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "238"
												},
												{
													"begin": 8141,
													"end": 8260,
													"name": "JUMPI",
													"source": 10
												},
												{
													"begin": 8179,
													"end": 8258,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "239"
												},
												{
													"begin": 8179,
													"end": 8258,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "132"
												},
												{
													"begin": 8179,
													"end": 8258,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 8179,
													"end": 8258,
													"name": "tag",
													"source": 10,
													"value": "239"
												},
												{
													"begin": 8179,
													"end": 8258,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 8141,
													"end": 8260,
													"name": "tag",
													"source": 10,
													"value": "238"
												},
												{
													"begin": 8141,
													"end": 8260,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 8299,
													"end": 8300,
													"name": "PUSH",
													"source": 10,
													"value": "0"
												},
												{
													"begin": 8324,
													"end": 8377,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "240"
												},
												{
													"begin": 8369,
													"end": 8376,
													"name": "DUP5",
													"source": 10
												},
												{
													"begin": 8360,
													"end": 8366,
													"name": "DUP3",
													"source": 10
												},
												{
													"begin": 8349,
													"end": 8358,
													"name": "DUP6",
													"source": 10
												},
												{
													"begin": 8345,
													"end": 8367,
													"name": "ADD",
													"source": 10
												},
												{
													"begin": 8324,
													"end": 8377,
													"name": "PUSH [tag]",
													"source": 10,
													"value": "144"
												},
												{
													"begin": 8324,
													"end": 8377,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 10
												},
												{
													"begin": 8324,
													"end": 8377,
													"name": "tag",
													"source": 10,
													"value": "240"
												},
												{
													"begin": 8324,
													"end": 8377,
													"name": "JUMPDEST",
													"source": 10
												},
												{
													"begin": 8314,
													"end": 8377,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 8314,
													"end": 8377,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 8270,
													"end": 8387,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "SWAP3",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "SWAP2",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"name": "POP",
													"source": 10
												},
												{
													"begin": 8065,
													"end": 8394,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 10
												}
											]
										}
									}
								}
							},
							"sourceList": [
								"conduit/Conduit.sol",
								"conduit/ConduitController.sol",
								"conduit/lib/ConduitConstants.sol",
								"conduit/lib/ConduitEnums.sol",
								"conduit/lib/ConduitStructs.sol",
								"interfaces/ConduitControllerInterface.sol",
								"interfaces/ConduitInterface.sol",
								"interfaces/TokenTransferrerErrors.sol",
								"lib/TokenTransferrer.sol",
								"lib/TokenTransferrerConstants.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership(address)": "51710e45",
							"cancelOwnershipTransfer(address)": "7b37e561",
							"createConduit(bytes32,address)": "794593bc",
							"getChannel(address,uint256)": "027cc764",
							"getChannelStatus(address,address)": "33bc8572",
							"getChannels(address)": "8b9e028b",
							"getConduit(bytes32)": "6e9bfd9f",
							"getConduitCodeHashes()": "0a96ad39",
							"getKey(address)": "93790f44",
							"getPotentialOwner(address)": "906c87cc",
							"getTotalChannels(address)": "4e3f9580",
							"ownerOf(address)": "14afd79e",
							"transferOwnership(address,address)": "6d435421",
							"updateChannel(address,address,bool)": "13ad9cab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotNewPotentialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ChannelOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ConduitAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoConduit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NoPotentialOwnerCurrentlySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"NewConduit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"PotentialOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"createConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"channelIndex\",\"type\":\"uint256\"}],\"name\":\"getChannel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getChannels\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"channels\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"getConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConduitCodeHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"creationCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"runtimeCodeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getPotentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getTotalChannels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalChannels\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"CallerIsNotNewPotentialOwner(address)\":[{\"details\":\"Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question.\"}],\"CallerIsNotOwner(address)\":[{\"details\":\"Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question.\"}],\"ChannelOutOfRange(address)\":[{\"details\":\"Revert with an error when attempting to retrieve a channel using an      index that is out of range.\"}],\"ConduitAlreadyExists(address)\":[{\"details\":\"Revert with an error when attempting to create a conduit that      already exists.\"}],\"InvalidCreator()\":[{\"details\":\"Revert with an error when attempting to create a new conduit using a      conduit key where the first twenty bytes of the key do not match the      address of the caller.\"}],\"InvalidInitialOwner()\":[{\"details\":\"Revert with an error when attempting to create a new conduit when no      initial owner address is supplied.\"}],\"NewPotentialOwnerAlreadySet(address,address)\":[{\"details\":\"Revert with an error when attempting to set a new potential owner      that is already set.\"}],\"NewPotentialOwnerIsZeroAddress(address)\":[{\"details\":\"Revert with an error when attempting to register a new potential      owner and supplying the null address.\"}],\"NoConduit()\":[{\"details\":\"Revert with an error when attempting to interact with a conduit that      does not yet exist.\"}],\"NoPotentialOwnerCurrentlySet(address)\":[{\"details\":\"Revert with an error when attempting to cancel ownership transfer      when no new potential owner is currently set.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership(address)\":{\"params\":{\"conduit\":\"The conduit for which to accept ownership.\"}},\"cancelOwnershipTransfer(address)\":{\"params\":{\"conduit\":\"The conduit for which to cancel ownership transfer.\"}},\"constructor\":{\"details\":\"Initialize contract by deploying a conduit and setting the creation      code and runtime code hashes as immutable arguments.\"},\"createConduit(bytes32,address)\":{\"params\":{\"conduitKey\":\"The conduit key used to deploy the conduit. Note that                     the first twenty bytes of the conduit key must match                     the caller of this contract.\",\"initialOwner\":\"The initial owner to set for the new conduit.\"},\"returns\":{\"conduit\":\"The address of the newly deployed conduit.\"}},\"getChannel(address,uint256)\":{\"params\":{\"channelIndex\":\"The index of the channel in question.\",\"conduit\":\"The conduit for which to retrieve the open channel.\"},\"returns\":{\"channel\":\"The open channel, if any, at the specified channel index.\"}},\"getChannelStatus(address,address)\":{\"params\":{\"channel\":\"The channel for which to retrieve the status.\",\"conduit\":\"The conduit for which to retrieve the channel status.\"},\"returns\":{\"isOpen\":\"The status of the channel on the given conduit.\"}},\"getChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve open channels.\"},\"returns\":{\"channels\":\"An array of open channels on the given conduit.\"}},\"getConduit(bytes32)\":{\"params\":{\"conduitKey\":\"The conduit key used to derive the conduit.\"},\"returns\":{\"conduit\":\"The derived address of the conduit.\",\"exists\":\" A boolean indicating whether the derived conduit has been                 deployed or not.\"}},\"getConduitCodeHashes()\":{\"details\":\"Retrieve the conduit creation code and runtime code hashes.\"},\"getKey(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated conduit                key.\"},\"returns\":{\"conduitKey\":\"The conduit key used to deploy the supplied conduit.\"}},\"getPotentialOwner(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the potential owner.\"},\"returns\":{\"potentialOwner\":\"The potential owner, if any, for the conduit.\"}},\"getTotalChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the total channel count.\"},\"returns\":{\"totalChannels\":\"The total number of open channels for the conduit.\"}},\"ownerOf(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated owner.\"},\"returns\":{\"owner\":\"The owner of the supplied conduit.\"}},\"transferOwnership(address,address)\":{\"params\":{\"conduit\":\"The conduit for which to initiate ownership transfer.\",\"newPotentialOwner\":\"The new potential owner of the conduit.\"}},\"updateChannel(address,address,bool)\":{\"params\":{\"channel\":\"The channel to open or close on the conduit.\",\"conduit\":\"The conduit for which to open or close the channel.\",\"isOpen\":\"A boolean indicating whether to open or close the channel.\"}}},\"title\":\"ConduitController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership(address)\":{\"notice\":\"Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function.\"},\"cancelOwnershipTransfer(address)\":{\"notice\":\"Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function.\"},\"createConduit(bytes32,address)\":{\"notice\":\"Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the first         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key.\"},\"getChannel(address,uint256)\":{\"notice\":\"Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit.\"},\"getChannelStatus(address,address)\":{\"notice\":\"Retrieve the status (either open or closed) of a given channel on         a conduit.\"},\"getChannels(address)\":{\"notice\":\"Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error.\"},\"getConduit(bytes32)\":{\"notice\":\"Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed).\"},\"getKey(address)\":{\"notice\":\"Retrieve the conduit key for a deployed conduit via reverse         lookup.\"},\"getPotentialOwner(address)\":{\"notice\":\"Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`.\"},\"getTotalChannels(address)\":{\"notice\":\"Retrieve the total number of open channels for a given conduit.\"},\"ownerOf(address)\":{\"notice\":\"Retrieve the current owner of a deployed conduit.\"},\"transferOwnership(address,address)\":{\"notice\":\"Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function.\"},\"updateChannel(address,address,bool)\":{\"notice\":\"Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function.\"}},\"notice\":\"ConduitController enables deploying and managing new conduits, or         contracts that allow registered callers (or open \\\"channels\\\") to         transfer approved ERC20/721/1155 tokens on their behalf.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"conduit/ConduitController.sol\":\"ConduitController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"conduit/Conduit.sol\":{\"keccak256\":\"0xd0a8666160c7c2c1bd74ee4144b0aed727b8a5ee4b3ef9502011bc3e96edd969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9932acb889d618604c52dfa4f241e5f3f793cf489459bb9b858fc768e05b59b\",\"dweb:/ipfs/QmX5UQnq55ZbxLinZPnbrRfNqg96dugYxkkj628PTh2ZGn\"]},\"conduit/ConduitController.sol\":{\"keccak256\":\"0x0261f46d3deeaadf83feafe15d204c83265efa11e628c7ebea3532826f74b73f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c83ed734429f4a46d03f496be217606cf05e8bf105cb7b1dd1efd16186acb2\",\"dweb:/ipfs/QmRusV16Wv2Ef6P6zE3Cgs6N3Ah6Q3LthDPh5S7j1WSRNq\"]},\"conduit/lib/ConduitConstants.sol\":{\"keccak256\":\"0x4b70ada07bfe97fc4cf18e23fbf82831c80ab2251b3ef455b4d0012a980c6f76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71255bb8a6927f7e65d7462b3971eec603ad7e0d72d9a4a4288d2d738ff5a085\",\"dweb:/ipfs/Qma6uCkQdMLE9dKcCTJ9HiChewSPAf3a6mybHSXm9tKxiF\"]},\"conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xc38cd5d6f7f6ea6c94c54ef401d702b352ddf6c907590305c4bf45e9b4fe8f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f621875af5c89abd176a57608bd4e4ac4d9e470123a6f531b20eb91ccfc70d1\",\"dweb:/ipfs/QmUgYyDvtPyz3sWYnsjzMtBiZWf6pKiLiYaycs9PpisJdr\"]},\"interfaces/ConduitInterface.sol\":{\"keccak256\":\"0xbfcd43fd8c0f3eccfb6b5c10a4c4b794f3004ff08152116f8b1ea6512af336e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0409357d577d488ad2ce54d258888cb1001f23d52b8140a19abc873cff15a2e\",\"dweb:/ipfs/QmYPuHK15VEziDVrdCSxFcBFbgHGE9K3BTSmbz1nAjtLBH\"]},\"interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]},\"lib/TokenTransferrer.sol\":{\"keccak256\":\"0xfcfa2be72ad8a3c2c096f9dc892b7040b9efc13315fc283ffe1a407d1c974ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce58309f3fddfed9f7b779e3cb99aa629335bd11a3387d9ea52261f87ac1219c\",\"dweb:/ipfs/QmRVH8o3Q7ybgerhqduSGrH9gVemfe2BZbGhTfvBABNtbq\"]},\"lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xb55807b4999544c4e336a9ea22a963ed50620522b5406d0cd8d5b6d790a2a322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730aa2bca27798a700577ddedd5e7ec4c28d6ade0cefcceb3431af89d65946ed\",\"dweb:/ipfs/QmQeaMEM6e7oTeoa3fjWf1F3Hs2CEh49GK4qN6p4rbaBeR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 294,
								"contract": "conduit/ConduitController.sol:ConduitController",
								"label": "_conduits",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(ConduitProperties)1115_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(ConduitProperties)1115_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ConduitControllerInterface.ConduitProperties)",
								"numberOfBytes": "32",
								"value": "t_struct(ConduitProperties)1115_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(ConduitProperties)1115_storage": {
								"encoding": "inplace",
								"label": "struct ConduitControllerInterface.ConduitProperties",
								"members": [
									{
										"astId": 1103,
										"contract": "conduit/ConduitController.sol:ConduitController",
										"label": "key",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 1105,
										"contract": "conduit/ConduitController.sol:ConduitController",
										"label": "owner",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1107,
										"contract": "conduit/ConduitController.sol:ConduitController",
										"label": "potentialOwner",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1110,
										"contract": "conduit/ConduitController.sol:ConduitController",
										"label": "channels",
										"offset": 0,
										"slot": "3",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 1114,
										"contract": "conduit/ConduitController.sol:ConduitController",
										"label": "channelIndexesPlusOne",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership(address)": {
								"notice": "Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function."
							},
							"cancelOwnershipTransfer(address)": {
								"notice": "Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function."
							},
							"createConduit(bytes32,address)": {
								"notice": "Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the first         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key."
							},
							"getChannel(address,uint256)": {
								"notice": "Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit."
							},
							"getChannelStatus(address,address)": {
								"notice": "Retrieve the status (either open or closed) of a given channel on         a conduit."
							},
							"getChannels(address)": {
								"notice": "Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error."
							},
							"getConduit(bytes32)": {
								"notice": "Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed)."
							},
							"getKey(address)": {
								"notice": "Retrieve the conduit key for a deployed conduit via reverse         lookup."
							},
							"getPotentialOwner(address)": {
								"notice": "Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`."
							},
							"getTotalChannels(address)": {
								"notice": "Retrieve the total number of open channels for a given conduit."
							},
							"ownerOf(address)": {
								"notice": "Retrieve the current owner of a deployed conduit."
							},
							"transferOwnership(address,address)": {
								"notice": "Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function."
							},
							"updateChannel(address,address,bool)": {
								"notice": "Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function."
							}
						},
						"notice": "ConduitController enables deploying and managing new conduits, or         contracts that allow registered callers (or open \"channels\") to         transfer approved ERC20/721/1155 tokens on their behalf.",
						"version": 1
					}
				}
			},
			"interfaces/ConduitControllerInterface.sol": {
				"ConduitControllerInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "CallerIsNotNewPotentialOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "CallerIsNotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ChannelOutOfRange",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ConduitAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCreator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "NewPotentialOwnerAlreadySet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "NewPotentialOwnerIsZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoConduit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "NoPotentialOwnerCurrentlySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"name": "NewConduit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "PotentialOwnerUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "cancelOwnershipTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"name": "createConduit",
							"outputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "channelIndex",
									"type": "uint256"
								}
							],
							"name": "getChannel",
							"outputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"name": "getChannelStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getChannels",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "channels",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"name": "getConduit",
							"outputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getConduitCodeHashes",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "creationCodeHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "runtimeCodeHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "conduitKey",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getPotentialOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "potentialOwner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "getTotalChannels",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalChannels",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newPotentialOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "conduit",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "updateChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "0age",
						"errors": {
							"CallerIsNotNewPotentialOwner(address)": [
								{
									"details": "Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question."
								}
							],
							"CallerIsNotOwner(address)": [
								{
									"details": "Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question."
								}
							],
							"ChannelOutOfRange(address)": [
								{
									"details": "Revert with an error when attempting to retrieve a channel using an      index that is out of range."
								}
							],
							"ConduitAlreadyExists(address)": [
								{
									"details": "Revert with an error when attempting to create a conduit that      already exists."
								}
							],
							"InvalidCreator()": [
								{
									"details": "Revert with an error when attempting to create a new conduit using a      conduit key where the first twenty bytes of the key do not match the      address of the caller."
								}
							],
							"InvalidInitialOwner()": [
								{
									"details": "Revert with an error when attempting to create a new conduit when no      initial owner address is supplied."
								}
							],
							"NewPotentialOwnerAlreadySet(address,address)": [
								{
									"details": "Revert with an error when attempting to set a new potential owner      that is already set."
								}
							],
							"NewPotentialOwnerIsZeroAddress(address)": [
								{
									"details": "Revert with an error when attempting to register a new potential      owner and supplying the null address."
								}
							],
							"NoConduit()": [
								{
									"details": "Revert with an error when attempting to interact with a conduit that      does not yet exist."
								}
							],
							"NoPotentialOwnerCurrentlySet(address)": [
								{
									"details": "Revert with an error when attempting to cancel ownership transfer      when no new potential owner is currently set."
								}
							]
						},
						"events": {
							"NewConduit(address,bytes32)": {
								"details": "Emit an event whenever a new conduit is created.",
								"params": {
									"conduit": "The newly created conduit.",
									"conduitKey": "The conduit key used to create the new conduit."
								}
							},
							"OwnershipTransferred(address,address,address)": {
								"details": "Emit an event whenever conduit ownership is transferred.",
								"params": {
									"conduit": "The conduit for which ownership has been                      transferred.",
									"newOwner": "The new owner of the conduit.",
									"previousOwner": "The previous owner of the conduit."
								}
							},
							"PotentialOwnerUpdated(address)": {
								"details": "Emit an event whenever a conduit owner registers a new potential      owner for that conduit.",
								"params": {
									"newPotentialOwner": "The new potential owner of the conduit."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership(address)": {
								"params": {
									"conduit": "The conduit for which to accept ownership."
								}
							},
							"cancelOwnershipTransfer(address)": {
								"params": {
									"conduit": "The conduit for which to cancel ownership transfer."
								}
							},
							"createConduit(bytes32,address)": {
								"params": {
									"conduitKey": "The conduit key used to deploy the conduit. Note that                     the first twenty bytes of the conduit key must match                     the caller of this contract.",
									"initialOwner": "The initial owner to set for the new conduit."
								},
								"returns": {
									"conduit": "The address of the newly deployed conduit."
								}
							},
							"getChannel(address,uint256)": {
								"params": {
									"channelIndex": "The index of the channel in question.",
									"conduit": "The conduit for which to retrieve the open channel."
								},
								"returns": {
									"channel": "The open channel, if any, at the specified channel index."
								}
							},
							"getChannelStatus(address,address)": {
								"params": {
									"channel": "The channel for which to retrieve the status.",
									"conduit": "The conduit for which to retrieve the channel status."
								},
								"returns": {
									"isOpen": "The status of the channel on the given conduit."
								}
							},
							"getChannels(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve open channels."
								},
								"returns": {
									"channels": "An array of open channels on the given conduit."
								}
							},
							"getConduit(bytes32)": {
								"params": {
									"conduitKey": "The conduit key used to derive the conduit."
								},
								"returns": {
									"conduit": "The derived address of the conduit.",
									"exists": " A boolean indicating whether the derived conduit has been                 deployed or not."
								}
							},
							"getConduitCodeHashes()": {
								"details": "Retrieve the conduit creation code and runtime code hashes."
							},
							"getKey(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the associated conduit                key."
								},
								"returns": {
									"conduitKey": "The conduit key used to deploy the supplied conduit."
								}
							},
							"getPotentialOwner(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the potential owner."
								},
								"returns": {
									"potentialOwner": "The potential owner, if any, for the conduit."
								}
							},
							"getTotalChannels(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the total channel count."
								},
								"returns": {
									"totalChannels": "The total number of open channels for the conduit."
								}
							},
							"ownerOf(address)": {
								"params": {
									"conduit": "The conduit for which to retrieve the associated owner."
								},
								"returns": {
									"owner": "The owner of the supplied conduit."
								}
							},
							"transferOwnership(address,address)": {
								"params": {
									"conduit": "The conduit for which to initiate ownership transfer.",
									"newPotentialOwner": "The new potential owner of the conduit."
								}
							},
							"updateChannel(address,address,bool)": {
								"params": {
									"channel": "The channel to open or close on the conduit.",
									"conduit": "The conduit for which to open or close the channel.",
									"isOpen": "A boolean indicating whether to open or close the channel."
								}
							}
						},
						"title": "ConduitControllerInterface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership(address)": "51710e45",
							"cancelOwnershipTransfer(address)": "7b37e561",
							"createConduit(bytes32,address)": "794593bc",
							"getChannel(address,uint256)": "027cc764",
							"getChannelStatus(address,address)": "33bc8572",
							"getChannels(address)": "8b9e028b",
							"getConduit(bytes32)": "6e9bfd9f",
							"getConduitCodeHashes()": "0a96ad39",
							"getKey(address)": "93790f44",
							"getPotentialOwner(address)": "906c87cc",
							"getTotalChannels(address)": "4e3f9580",
							"ownerOf(address)": "14afd79e",
							"transferOwnership(address,address)": "6d435421",
							"updateChannel(address,address,bool)": "13ad9cab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotNewPotentialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ChannelOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ConduitAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerAlreadySet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoConduit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NoPotentialOwnerCurrentlySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"NewConduit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"PotentialOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"createConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"channelIndex\",\"type\":\"uint256\"}],\"name\":\"getChannel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getChannels\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"channels\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"getConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConduitCodeHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"creationCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"runtimeCodeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getPotentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getTotalChannels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalChannels\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"CallerIsNotNewPotentialOwner(address)\":[{\"details\":\"Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question.\"}],\"CallerIsNotOwner(address)\":[{\"details\":\"Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question.\"}],\"ChannelOutOfRange(address)\":[{\"details\":\"Revert with an error when attempting to retrieve a channel using an      index that is out of range.\"}],\"ConduitAlreadyExists(address)\":[{\"details\":\"Revert with an error when attempting to create a conduit that      already exists.\"}],\"InvalidCreator()\":[{\"details\":\"Revert with an error when attempting to create a new conduit using a      conduit key where the first twenty bytes of the key do not match the      address of the caller.\"}],\"InvalidInitialOwner()\":[{\"details\":\"Revert with an error when attempting to create a new conduit when no      initial owner address is supplied.\"}],\"NewPotentialOwnerAlreadySet(address,address)\":[{\"details\":\"Revert with an error when attempting to set a new potential owner      that is already set.\"}],\"NewPotentialOwnerIsZeroAddress(address)\":[{\"details\":\"Revert with an error when attempting to register a new potential      owner and supplying the null address.\"}],\"NoConduit()\":[{\"details\":\"Revert with an error when attempting to interact with a conduit that      does not yet exist.\"}],\"NoPotentialOwnerCurrentlySet(address)\":[{\"details\":\"Revert with an error when attempting to cancel ownership transfer      when no new potential owner is currently set.\"}]},\"events\":{\"NewConduit(address,bytes32)\":{\"details\":\"Emit an event whenever a new conduit is created.\",\"params\":{\"conduit\":\"The newly created conduit.\",\"conduitKey\":\"The conduit key used to create the new conduit.\"}},\"OwnershipTransferred(address,address,address)\":{\"details\":\"Emit an event whenever conduit ownership is transferred.\",\"params\":{\"conduit\":\"The conduit for which ownership has been                      transferred.\",\"newOwner\":\"The new owner of the conduit.\",\"previousOwner\":\"The previous owner of the conduit.\"}},\"PotentialOwnerUpdated(address)\":{\"details\":\"Emit an event whenever a conduit owner registers a new potential      owner for that conduit.\",\"params\":{\"newPotentialOwner\":\"The new potential owner of the conduit.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership(address)\":{\"params\":{\"conduit\":\"The conduit for which to accept ownership.\"}},\"cancelOwnershipTransfer(address)\":{\"params\":{\"conduit\":\"The conduit for which to cancel ownership transfer.\"}},\"createConduit(bytes32,address)\":{\"params\":{\"conduitKey\":\"The conduit key used to deploy the conduit. Note that                     the first twenty bytes of the conduit key must match                     the caller of this contract.\",\"initialOwner\":\"The initial owner to set for the new conduit.\"},\"returns\":{\"conduit\":\"The address of the newly deployed conduit.\"}},\"getChannel(address,uint256)\":{\"params\":{\"channelIndex\":\"The index of the channel in question.\",\"conduit\":\"The conduit for which to retrieve the open channel.\"},\"returns\":{\"channel\":\"The open channel, if any, at the specified channel index.\"}},\"getChannelStatus(address,address)\":{\"params\":{\"channel\":\"The channel for which to retrieve the status.\",\"conduit\":\"The conduit for which to retrieve the channel status.\"},\"returns\":{\"isOpen\":\"The status of the channel on the given conduit.\"}},\"getChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve open channels.\"},\"returns\":{\"channels\":\"An array of open channels on the given conduit.\"}},\"getConduit(bytes32)\":{\"params\":{\"conduitKey\":\"The conduit key used to derive the conduit.\"},\"returns\":{\"conduit\":\"The derived address of the conduit.\",\"exists\":\" A boolean indicating whether the derived conduit has been                 deployed or not.\"}},\"getConduitCodeHashes()\":{\"details\":\"Retrieve the conduit creation code and runtime code hashes.\"},\"getKey(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated conduit                key.\"},\"returns\":{\"conduitKey\":\"The conduit key used to deploy the supplied conduit.\"}},\"getPotentialOwner(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the potential owner.\"},\"returns\":{\"potentialOwner\":\"The potential owner, if any, for the conduit.\"}},\"getTotalChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the total channel count.\"},\"returns\":{\"totalChannels\":\"The total number of open channels for the conduit.\"}},\"ownerOf(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated owner.\"},\"returns\":{\"owner\":\"The owner of the supplied conduit.\"}},\"transferOwnership(address,address)\":{\"params\":{\"conduit\":\"The conduit for which to initiate ownership transfer.\",\"newPotentialOwner\":\"The new potential owner of the conduit.\"}},\"updateChannel(address,address,bool)\":{\"params\":{\"channel\":\"The channel to open or close on the conduit.\",\"conduit\":\"The conduit for which to open or close the channel.\",\"isOpen\":\"A boolean indicating whether to open or close the channel.\"}}},\"title\":\"ConduitControllerInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership(address)\":{\"notice\":\"Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function.\"},\"cancelOwnershipTransfer(address)\":{\"notice\":\"Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function.\"},\"createConduit(bytes32,address)\":{\"notice\":\"Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the first         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key.\"},\"getChannel(address,uint256)\":{\"notice\":\"Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit.\"},\"getChannelStatus(address,address)\":{\"notice\":\"Retrieve the status (either open or closed) of a given channel on         a conduit.\"},\"getChannels(address)\":{\"notice\":\"Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error.\"},\"getConduit(bytes32)\":{\"notice\":\"Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed).\"},\"getKey(address)\":{\"notice\":\"Retrieve the conduit key for a deployed conduit via reverse         lookup.\"},\"getPotentialOwner(address)\":{\"notice\":\"Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`.\"},\"getTotalChannels(address)\":{\"notice\":\"Retrieve the total number of open channels for a given conduit.\"},\"ownerOf(address)\":{\"notice\":\"Retrieve the current owner of a deployed conduit.\"},\"transferOwnership(address,address)\":{\"notice\":\"Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function.\"},\"updateChannel(address,address,bool)\":{\"notice\":\"Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function.\"}},\"notice\":\"ConduitControllerInterface contains all external function interfaces,         structs, events, and errors for the conduit controller.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ConduitControllerInterface.sol\":\"ConduitControllerInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xc38cd5d6f7f6ea6c94c54ef401d702b352ddf6c907590305c4bf45e9b4fe8f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f621875af5c89abd176a57608bd4e4ac4d9e470123a6f531b20eb91ccfc70d1\",\"dweb:/ipfs/QmUgYyDvtPyz3sWYnsjzMtBiZWf6pKiLiYaycs9PpisJdr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership(address)": {
								"notice": "Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function."
							},
							"cancelOwnershipTransfer(address)": {
								"notice": "Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function."
							},
							"createConduit(bytes32,address)": {
								"notice": "Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the first         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key."
							},
							"getChannel(address,uint256)": {
								"notice": "Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit."
							},
							"getChannelStatus(address,address)": {
								"notice": "Retrieve the status (either open or closed) of a given channel on         a conduit."
							},
							"getChannels(address)": {
								"notice": "Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error."
							},
							"getConduit(bytes32)": {
								"notice": "Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed)."
							},
							"getKey(address)": {
								"notice": "Retrieve the conduit key for a deployed conduit via reverse         lookup."
							},
							"getPotentialOwner(address)": {
								"notice": "Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`."
							},
							"getTotalChannels(address)": {
								"notice": "Retrieve the total number of open channels for a given conduit."
							},
							"ownerOf(address)": {
								"notice": "Retrieve the current owner of a deployed conduit."
							},
							"transferOwnership(address,address)": {
								"notice": "Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function."
							},
							"updateChannel(address,address,bool)": {
								"notice": "Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function."
							}
						},
						"notice": "ConduitControllerInterface contains all external function interfaces,         structs, events, and errors for the conduit controller.",
						"version": 1
					}
				}
			},
			"interfaces/ConduitInterface.sol": {
				"ConduitInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								}
							],
							"name": "ChannelClosed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "ChannelStatusAlreadySet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidController",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidItemType",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "open",
									"type": "bool"
								}
							],
							"name": "ChannelUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum ConduitItemType",
											"name": "itemType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "identifier",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct ConduitTransfer[]",
									"name": "transfers",
									"type": "tuple[]"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256[]",
											"name": "ids",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "amounts",
											"type": "uint256[]"
										}
									],
									"internalType": "struct ConduitBatch1155Transfer[]",
									"name": "batch1155Transfers",
									"type": "tuple[]"
								}
							],
							"name": "executeBatch1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "enum ConduitItemType",
											"name": "itemType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "identifier",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct ConduitTransfer[]",
									"name": "standardTransfers",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256[]",
											"name": "ids",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256[]",
											"name": "amounts",
											"type": "uint256[]"
										}
									],
									"internalType": "struct ConduitBatch1155Transfer[]",
									"name": "batch1155Transfers",
									"type": "tuple[]"
								}
							],
							"name": "executeWithBatch1155",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "channel",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isOpen",
									"type": "bool"
								}
							],
							"name": "updateChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "0age",
						"errors": {
							"ChannelClosed(address)": [
								{
									"details": "Revert with an error when attempting to execute transfers using a      caller that does not have an open channel."
								}
							],
							"ChannelStatusAlreadySet(address,bool)": [
								{
									"details": "Revert with an error when attempting to update a channel to the      current status of that channel."
								}
							],
							"InvalidController()": [
								{
									"details": "Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller."
								}
							],
							"InvalidItemType()": [
								{
									"details": "Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type."
								}
							]
						},
						"events": {
							"ChannelUpdated(address,bool)": {
								"details": "Emit an event whenever a channel is opened or closed.",
								"params": {
									"channel": "The channel that has been updated.",
									"open": "A boolean indicating whether the conduit is open or not."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"execute((uint8,address,address,address,uint256,uint256)[])": {
								"params": {
									"transfers": "The ERC20/721/1155 transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the transfers were                    performed successfully."
								}
							},
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": {
								"params": {
									"batch1155Transfers": "The 1155 batch transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the transfers were                    performed successfully."
								}
							},
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": {
								"params": {
									"batch1155Transfers": "The 1155 batch transfers to perform.",
									"standardTransfers": "The ERC20/721/1155 transfers to perform."
								},
								"returns": {
									"magicValue": "A magic value indicating that the transfers were                    performed successfully."
								}
							},
							"updateChannel(address,bool)": {
								"params": {
									"channel": "The channel to open or close.",
									"isOpen": "The status of the channel (either open or closed)."
								}
							}
						},
						"title": "ConduitInterface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
							"updateChannel(address,bool)": "c4e8fcb5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"ChannelStatusAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"ChannelClosed(address)\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ChannelStatusAlreadySet(address,bool)\":[{\"details\":\"Revert with an error when attempting to update a channel to the      current status of that channel.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"ConduitInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ConduitInterface.sol\":\"ConduitInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"interfaces/ConduitInterface.sol\":{\"keccak256\":\"0xbfcd43fd8c0f3eccfb6b5c10a4c4b794f3004ff08152116f8b1ea6512af336e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0409357d577d488ad2ce54d258888cb1001f23d52b8140a19abc873cff15a2e\",\"dweb:/ipfs/QmYPuHK15VEziDVrdCSxFcBFbgHGE9K3BTSmbz1nAjtLBH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((uint8,address,address,address,uint256,uint256)[])": {
								"notice": "Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function."
							},
							"executeBatch1155((address,address,address,uint256[],uint256[])[])": {
								"notice": "Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function."
							},
							"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": {
								"notice": "Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function."
							},
							"updateChannel(address,bool)": {
								"notice": "Open or close a given channel. Only callable by the controller."
							}
						},
						"notice": "ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.",
						"version": 1
					}
				}
			},
			"interfaces/TokenTransferrerErrors.sol": {
				"TokenTransferrerErrors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BadReturnValueFromERC20OnTransfer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "identifiers",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "ERC1155BatchTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Invalid1155BatchTransferEncoding",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidERC721TransferAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MissingItemAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "NoContract",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "identifier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnusedItemParameters",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)": [
								{
									"details": "Revert with an error when an ERC20 token transfer returns a falsey      value.",
									"params": {
										"amount": "The amount for the attempted ERC20 transfer.",
										"from": "The source of the attempted ERC20 transfer.",
										"to": "The recipient of the attempted ERC20 transfer.",
										"token": "The token for which the ERC20 transfer was attempted."
									}
								}
							],
							"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])": [
								{
									"details": "Revert with an error when a batch ERC1155 token transfer reverts.",
									"params": {
										"amounts": "The amounts for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifiers": "The identifiers for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"Invalid1155BatchTransferEncoding()": [
								{
									"details": "Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays."
								}
							],
							"InvalidERC721TransferAmount()": [
								{
									"details": "Revert with an error when an ERC721 transfer with amount other than      one is attempted."
								}
							],
							"MissingItemAmount()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has an amount of zero."
								}
							],
							"NoContract(address)": [
								{
									"details": "Revert with an error when an account being called as an assumed      contract does not have code and returns no data.",
									"params": {
										"account": "The account that should contain code."
									}
								}
							],
							"TokenTransferGenericFailure(address,address,address,uint256,uint256)": [
								{
									"details": "Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.",
									"params": {
										"amount": "The amount for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifier": "The identifier for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"UnusedItemParameters()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "TokenTransferrerErrors",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrerErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/TokenTransferrerErrors.sol\":\"TokenTransferrerErrors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/TokenTransferrer.sol": {
				"TokenTransferrer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BadReturnValueFromERC20OnTransfer",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "identifiers",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "ERC1155BatchTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Invalid1155BatchTransferEncoding",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidERC721TransferAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MissingItemAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "NoContract",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "identifier",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferGenericFailure",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnusedItemParameters",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "0age",
						"custom:coauthor": "d1ll0ntransmissions11",
						"errors": {
							"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)": [
								{
									"details": "Revert with an error when an ERC20 token transfer returns a falsey      value.",
									"params": {
										"amount": "The amount for the attempted ERC20 transfer.",
										"from": "The source of the attempted ERC20 transfer.",
										"to": "The recipient of the attempted ERC20 transfer.",
										"token": "The token for which the ERC20 transfer was attempted."
									}
								}
							],
							"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])": [
								{
									"details": "Revert with an error when a batch ERC1155 token transfer reverts.",
									"params": {
										"amounts": "The amounts for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifiers": "The identifiers for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"Invalid1155BatchTransferEncoding()": [
								{
									"details": "Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays."
								}
							],
							"InvalidERC721TransferAmount()": [
								{
									"details": "Revert with an error when an ERC721 transfer with amount other than      one is attempted."
								}
							],
							"MissingItemAmount()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has an amount of zero."
								}
							],
							"NoContract(address)": [
								{
									"details": "Revert with an error when an account being called as an assumed      contract does not have code and returns no data.",
									"params": {
										"account": "The account that should contain code."
									}
								}
							],
							"TokenTransferGenericFailure(address,address,address,uint256,uint256)": [
								{
									"details": "Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.",
									"params": {
										"amount": "The amount for the attempted transfer.",
										"from": "The source of the attempted transfer.",
										"identifier": "The identifier for the attempted transfer.",
										"to": "The recipient of the attempted transfer.",
										"token": "The token for which the transfer was attempted."
									}
								}
							],
							"UnusedItemParameters()": [
								{
									"details": "Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "TokenTransferrer",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/TokenTransferrer.sol\":849:35182  contract TokenTransferrer is TokenTransferrerErrors {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/TokenTransferrer.sol\":849:35182  contract TokenTransferrer is TokenTransferrerErrors {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e95043650e7668076f08e1432bdf29c52759f07d49c0cb76bccf6e77842a900564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e95043650e7668076f08e1432bdf29c52759f07d49c0cb76bccf6e77842a900564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 POP NUMBER PUSH6 0xE7668076F08 0xE1 NUMBER 0x2B 0xDF 0x29 0xC5 0x27 MSIZE CREATE PUSH30 0x49C0CB76BCCF6E77842A900564736F6C6343000811003300000000000000 ",
							"sourceMap": "849:34333:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e95043650e7668076f08e1432bdf29c52759f07d49c0cb76bccf6e77842a900564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 POP NUMBER PUSH6 0xE7668076F08 0xE1 NUMBER 0x2B 0xDF 0x29 0xC5 0x27 MSIZE CREATE PUSH30 0x49C0CB76BCCF6E77842A900564736F6C6343000811003300000000000000 ",
							"sourceMap": "849:34333:8:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_performERC1155BatchTransfers(struct ConduitBatch1155Transfer calldata[] calldata)": "infinite",
								"_performERC1155Transfer(address,address,address,uint256,uint256)": "infinite",
								"_performERC20Transfer(address,address,address,uint256)": "infinite",
								"_performERC721Transfer(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 849,
									"end": 35182,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e95043650e7668076f08e1432bdf29c52759f07d49c0cb76bccf6e77842a900564736f6c63430008110033",
									".code": [
										{
											"begin": 849,
											"end": 35182,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 849,
											"end": 35182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 35182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 849,
											"end": 35182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 849,
											"end": 35182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 849,
											"end": 35182,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"conduit/Conduit.sol",
								"conduit/ConduitController.sol",
								"conduit/lib/ConduitConstants.sol",
								"conduit/lib/ConduitEnums.sol",
								"conduit/lib/ConduitStructs.sol",
								"interfaces/ConduitControllerInterface.sol",
								"interfaces/ConduitInterface.sol",
								"interfaces/TokenTransferrerErrors.sol",
								"lib/TokenTransferrer.sol",
								"lib/TokenTransferrerConstants.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnusedItemParameters\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"0age\",\"custom:coauthor\":\"d1ll0ntransmissions11\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"UnusedItemParameters()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has unused parameters. This includes both the token and the      identifier parameters for native transfers as well as the identifier      parameter for ERC20 transfers. Note that the conduit does not      perform this check, leaving it up to the calling channel to enforce      when desired.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"TokenTransferrer is a library for performing optimized ERC20, ERC721,         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as         by conduits deployed by the ConduitController. Use great caution when         considering these functions for use in other codebases, as there are         significant side effects and edge cases that need to be thoroughly         understood and carefully addressed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/TokenTransferrer.sol\":\"TokenTransferrer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x3a9ecf77688f97d1b595be27b49fca3eac93e3f91160d79f0f0063c250fd8aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d596c21d5c7c7b47ca14908cbd7add9c06898c500cf47988446f843c0b28cf96\",\"dweb:/ipfs/QmZf12Y7XHwEWvjd2ZbaUFz4NXsWPFGJF6vNg1HECvXV5m\"]},\"conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0xfd2cec45327e9a6ebc02d7efb9daa1cfdabb26eb803e4b2e9b5e82340d92cfed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7fa97afdf70ab91449e54f9a4f40e9da16292ab87b86e7e975e6d92f573dc3\",\"dweb:/ipfs/QmaRvo6P8YYPYNgcuP4HVV2wqDuVSB1t6AwMe8jMbcQY3F\"]},\"interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xd547a837e72da776edb433ef6bbb5ab1dbf4bc8e98995ca2baf83edcadd73607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://324a3db3d18f679f1d4595d275820a3c320a22ae89b16277a39a548b8ccb36cb\",\"dweb:/ipfs/QmdLhvU1RddvwJKNMYbyXBtMDn5P7J9YQMgpWY1qsYXjjF\"]},\"lib/TokenTransferrer.sol\":{\"keccak256\":\"0xfcfa2be72ad8a3c2c096f9dc892b7040b9efc13315fc283ffe1a407d1c974ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce58309f3fddfed9f7b779e3cb99aa629335bd11a3387d9ea52261f87ac1219c\",\"dweb:/ipfs/QmRVH8o3Q7ybgerhqduSGrH9gVemfe2BZbGhTfvBABNtbq\"]},\"lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xb55807b4999544c4e336a9ea22a963ed50620522b5406d0cd8d5b6d790a2a322\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730aa2bca27798a700577ddedd5e7ec4c28d6ade0cefcceb3431af89d65946ed\",\"dweb:/ipfs/QmQeaMEM6e7oTeoa3fjWf1F3Hs2CEh49GK4qN6p4rbaBeR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "TokenTransferrer is a library for performing optimized ERC20, ERC721,         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as         by conduits deployed by the ConduitController. Use great caution when         considering these functions for use in other codebases, as there are         significant side effects and edge cases that need to be thoroughly         understood and carefully addressed.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"conduit/Conduit.sol": {
				"ast": {
					"absolutePath": "conduit/Conduit.sol",
					"exportedSymbols": {
						"ChannelClosed_channel_ptr": [
							1048
						],
						"ChannelClosed_error_length": [
							1051
						],
						"ChannelClosed_error_ptr": [
							1045
						],
						"ChannelClosed_error_signature": [
							1042
						],
						"ChannelKey_channel_ptr": [
							1054
						],
						"ChannelKey_length": [
							1060
						],
						"ChannelKey_slot_ptr": [
							1057
						],
						"Conduit": [
							278
						],
						"ConduitBatch1155Transfer": [
							1098
						],
						"ConduitInterface": [
							1376
						],
						"ConduitItemType": [
							1067
						],
						"ConduitTransfer": [
							1085
						],
						"TokenTransferrer": [
							1501
						]
					},
					"id": 279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "interfaces/ConduitInterface.sol",
							"file": "../interfaces/ConduitInterface.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 1377,
							"src": "58:70:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ConduitInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1376,
										"src": "67:16:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "conduit/lib/ConduitEnums.sol",
							"file": "./lib/ConduitEnums.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 1068,
							"src": "130:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ConduitItemType",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1067,
										"src": "139:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/TokenTransferrer.sol",
							"file": "../lib/TokenTransferrer.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 1502,
							"src": "189:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "TokenTransferrer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1501,
										"src": "198:16:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "conduit/lib/ConduitStructs.sol",
							"file": "./lib/ConduitStructs.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 1099,
							"src": "273:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "ConduitTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1085,
										"src": "286:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 9,
										"name": "ConduitBatch1155Transfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1098,
										"src": "307:24:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "conduit/lib/ConduitConstants.sol",
							"file": "./lib/ConduitConstants.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 279,
							"sourceUnit": 1061,
							"src": "368:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 13,
										"name": "ConduitInterface",
										"nameLocations": [
											"1098:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1376,
										"src": "1098:16:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "1098:16:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "TokenTransferrer",
										"nameLocations": [
											"1116:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1501,
										"src": "1116:16:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "1116:16:0"
								}
							],
							"canonicalName": "Conduit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "406:671:0",
								"text": " @title Conduit\n @author 0age\n @notice This contract serves as an originator for \"proxied\" transfers. Each\n         conduit is deployed and controlled by a \"conduit controller\" that can\n         add and remove \"channels\" or contracts that can instruct the conduit\n         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n         conduit has an owner that can arbitrarily add or remove channels, and\n         a malicious or negligent owner can add a channel that allows for any\n         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n         cautious with what conduits you give token approvals to!*"
							},
							"fullyImplemented": true,
							"id": 278,
							"linearizedBaseContracts": [
								278,
								1501,
								1436,
								1376
							],
							"name": "Conduit",
							"nameLocation": "1087:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 18,
									"mutability": "immutable",
									"name": "_controller",
									"nameLocation": "1246:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1220:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1220:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_channels",
									"nameLocation": "1338:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1305:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1313:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1305:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 20,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1324:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1509:1149:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1600:995:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ChannelKey_channel_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1671:22:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "1695:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:40:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1664:40:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ChannelKey_slot_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1795:19:0"
																	},
																	{
																		"name": "_channels.slot",
																		"nodeType": "YulIdentifier",
																		"src": "1816:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:43:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1788:43:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2071:514:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ChannelClosed_error_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "2242:23:0"
																				},
																				{
																					"name": "ChannelClosed_error_signature",
																					"nodeType": "YulIdentifier",
																					"src": "2267:29:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2235:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2235:62:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2235:62:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ChannelClosed_channel_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "2379:25:0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "caller",
																						"nodeType": "YulIdentifier",
																						"src": "2406:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2406:8:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2372:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2372:43:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2372:43:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ChannelClosed_error_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "2519:23:0"
																				},
																				{
																					"name": "ChannelClosed_error_length",
																					"nodeType": "YulIdentifier",
																					"src": "2544:26:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:59:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:59:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ChannelKey_channel_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "2013:22:0"
																					},
																					{
																						"name": "ChannelKey_length",
																						"nodeType": "YulIdentifier",
																						"src": "2037:17:0"
																					}
																				],
																				"functionName": {
																					"name": "keccak256",
																					"nodeType": "YulIdentifier",
																					"src": "2003:9:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2003:52:0"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "1997:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1997:59:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:97:0"
															},
															"nodeType": "YulIf",
															"src": "1970:615:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "2379:25:0",
														"valueSize": 1
													},
													{
														"declaration": 1051,
														"isOffset": false,
														"isSlot": false,
														"src": "2544:26:0",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "2242:23:0",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "2519:23:0",
														"valueSize": 1
													},
													{
														"declaration": 1042,
														"isOffset": false,
														"isSlot": false,
														"src": "2267:29:0",
														"valueSize": 1
													},
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "1671:22:0",
														"valueSize": 1
													},
													{
														"declaration": 1054,
														"isOffset": false,
														"isSlot": false,
														"src": "2013:22:0",
														"valueSize": 1
													},
													{
														"declaration": 1060,
														"isOffset": false,
														"isSlot": false,
														"src": "2037:17:0",
														"valueSize": 1
													},
													{
														"declaration": 1057,
														"isOffset": false,
														"isSlot": false,
														"src": "1795:19:0",
														"valueSize": 1
													},
													{
														"declaration": 22,
														"isOffset": false,
														"isSlot": true,
														"src": "1816:14:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 25,
												"nodeType": "InlineAssembly",
												"src": "1591:1004:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "2650:1:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1354:123:0",
										"text": " @notice Ensure that the caller is currently registered as an open channel\n         on the conduit."
									},
									"id": 28,
									"name": "onlyOpenChannel",
									"nameLocation": "1491:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:2:0"
									},
									"src": "1482:1176:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2765:88:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "_controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "2822:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2836:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2840:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2836:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2822:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2822:24:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2664:82:0",
										"text": " @notice In the constructor, set the deployer as the controller."
									},
									"id": 38,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2765:0:0"
									},
									"scope": 278,
									"src": "2751:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "3755:621:0",
										"statements": [
											{
												"assignments": [
													52
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "totalStandardTransfers",
														"nameLocation": "3847:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "3839:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 51,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"expression": {
														"id": 53,
														"name": "transfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "3872:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct ConduitTransfer calldata[] calldata"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3882:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3872:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3839:49:0"
											},
											{
												"body": {
													"id": 73,
													"nodeType": "Block",
													"src": "3988:259:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 64,
																			"name": "transfers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "4087:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata[] calldata"
																			}
																		},
																		"id": 66,
																		"indexExpression": {
																			"id": 65,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "4097:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4087:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																			"typeString": "struct ConduitTransfer calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																			"typeString": "struct ConduitTransfer calldata"
																		}
																	],
																	"id": 63,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "4077:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$returns$__$",
																		"typeString": "function (struct ConduitTransfer calldata)"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4077:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 68,
															"nodeType": "ExpressionStatement",
															"src": "4077:23:0"
														},
														{
															"id": 72,
															"nodeType": "UncheckedBlock",
															"src": "4191:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "4219:3:0",
																		"subExpression": {
																			"id": 69,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 57,
																			"src": "4221:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 71,
																	"nodeType": "ExpressionStatement",
																	"src": "4219:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "3958:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 61,
														"name": "totalStandardTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3962:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3958:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 74,
												"initializationExpression": {
													"assignments": [
														57
													],
													"declarations": [
														{
															"constant": false,
															"id": 57,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3951:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 74,
															"src": "3943:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 56,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3943:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 59,
													"initialValue": {
														"hexValue": "30",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3955:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3943:13:0"
												},
												"nodeType": "ForStatement",
												"src": "3938:309:0"
											},
											{
												"expression": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 75,
														"name": "magicValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "4335:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 76,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "4348:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Conduit_$278",
																	"typeString": "contract Conduit"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4353:7:0",
															"memberName": "execute",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "4348:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1085_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
																"typeString": "function (struct ConduitTransfer memory[] memory) external returns (bytes4)"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4361:8:0",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "4348:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "4335:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "4335:34:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2859:738:0",
										"text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
									},
									"functionSelector": "4ce34aa2",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyOpenChannel",
												"nameLocations": [
													"3699:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "3699:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3699:15:0"
										}
									],
									"name": "execute",
									"nameLocation": "3611:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3682:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "transfers",
												"nameLocation": "3646:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3619:36:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitTransfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 41,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 40,
															"name": "ConduitTransfer",
															"nameLocations": [
																"3619:15:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1085,
															"src": "3619:15:0"
														},
														"referencedDeclaration": 1085,
														"src": "3619:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitTransfer_$1085_storage_ptr",
															"typeString": "struct ConduitTransfer"
														}
													},
													"id": 42,
													"nodeType": "ArrayTypeName",
													"src": "3619:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitTransfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3618:38:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "3739:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3732:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 48,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3732:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:19:0"
									},
									"scope": 278,
									"src": "3602:774:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "5291:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "batchTransfers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "5465:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
															}
														],
														"id": 95,
														"name": "_performERC1155BatchTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "5435:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5435:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "5435:45:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "magicValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "5569:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 100,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5582:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Conduit_$278",
																	"typeString": "contract Conduit"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5587:16:0",
															"memberName": "executeBatch1155",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 106,
															"src": "5582:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
																"typeString": "function (struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5604:8:0",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "5582:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "5569:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "5569:43:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "4382:750:0",
										"text": " @notice Execute a sequence of batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param batchTransfers The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
									},
									"functionSelector": "8df25d92",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 91,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 90,
												"name": "onlyOpenChannel",
												"nameLocations": [
													"5247:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "5247:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5247:15:0"
										}
									],
									"name": "executeBatch1155",
									"nameLocation": "5146:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5238:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "batchTransfers",
												"nameLocation": "5208:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5172:50:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitBatch1155Transfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 85,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 84,
															"name": "ConduitBatch1155Transfer",
															"nameLocations": [
																"5172:24:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1098,
															"src": "5172:24:0"
														},
														"referencedDeclaration": 1098,
														"src": "5172:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1098_storage_ptr",
															"typeString": "struct ConduitBatch1155Transfer"
														}
													},
													"id": 86,
													"nodeType": "ArrayTypeName",
													"src": "5172:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitBatch1155Transfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5162:66:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "5279:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5272:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 92,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:19:0"
									},
									"scope": 278,
									"src": "5137:482:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6752:920:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "totalStandardTransfers",
														"nameLocation": "6844:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "6836:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"expression": {
														"id": 125,
														"name": "standardTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "6869:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct ConduitTransfer calldata[] calldata"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6887:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6869:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6836:57:0"
											},
											{
												"body": {
													"id": 145,
													"nodeType": "Block",
													"src": "7002:267:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 136,
																			"name": "standardTransfers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "7101:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata[] calldata"
																			}
																		},
																		"id": 138,
																		"indexExpression": {
																			"id": 137,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "7119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7101:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																			"typeString": "struct ConduitTransfer calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																			"typeString": "struct ConduitTransfer calldata"
																		}
																	],
																	"id": 135,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "7091:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$returns$__$",
																		"typeString": "function (struct ConduitTransfer calldata)"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7091:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 140,
															"nodeType": "ExpressionStatement",
															"src": "7091:31:0"
														},
														{
															"id": 144,
															"nodeType": "UncheckedBlock",
															"src": "7213:46:0",
															"statements": [
																{
																	"expression": {
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "7241:3:0",
																		"subExpression": {
																			"id": 141,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "7243:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 143,
																	"nodeType": "ExpressionStatement",
																	"src": "7241:3:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 132,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "6972:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 133,
														"name": "totalStandardTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "6976:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6972:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"initializationExpression": {
													"assignments": [
														129
													],
													"declarations": [
														{
															"constant": false,
															"id": 129,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6965:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 146,
															"src": "6957:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 128,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 131,
													"initialValue": {
														"hexValue": "30",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6957:13:0"
												},
												"nodeType": "ForStatement",
												"src": "6952:317:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 148,
															"name": "batchTransfers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "7514:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
															}
														],
														"id": 147,
														"name": "_performERC1155BatchTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "7484:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
															"typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7484:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "7484:45:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "magicValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "7618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 152,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7631:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Conduit_$278",
																	"typeString": "contract Conduit"
																}
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7636:20:0",
															"memberName": "executeWithBatch1155",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 158,
															"src": "7631:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1085_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1098_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
																"typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7657:8:0",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "7631:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "7618:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "7618:47:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5625:910:0",
										"text": " @notice Execute a sequence of transfers, both single ERC20/721/1155 item\n         transfers as well as batch 1155 item transfers. Only a caller\n         with an open channel can call this function. Note that channels\n         are expected to implement reentrancy protection if desired, and\n         that cross-channel reentrancy may be possible if the conduit has\n         multiple open channels at once. Also note that channels are\n         expected to implement checks against transferring any zero-amount\n         items if that constraint is desired.\n @param standardTransfers The ERC20/721/1155 item transfers to perform.\n @param batchTransfers    The 1155 batch item transfers to perform.\n @return magicValue A magic value indicating that the item transfers were\n                    performed successfully."
									},
									"functionSelector": "899e104c",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 119,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 118,
												"name": "onlyOpenChannel",
												"nameLocations": [
													"6708:15:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "6708:15:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6708:15:0"
										}
									],
									"name": "executeWithBatch1155",
									"nameLocation": "6549:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6699:8:0"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "standardTransfers",
												"nameLocation": "6606:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6579:44:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitTransfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 108,
															"name": "ConduitTransfer",
															"nameLocations": [
																"6579:15:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1085,
															"src": "6579:15:0"
														},
														"referencedDeclaration": 1085,
														"src": "6579:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitTransfer_$1085_storage_ptr",
															"typeString": "struct ConduitTransfer"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "6579:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitTransfer[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "batchTransfers",
												"nameLocation": "6669:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6633:50:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitBatch1155Transfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 112,
															"name": "ConduitBatch1155Transfer",
															"nameLocations": [
																"6633:24:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1098,
															"src": "6633:24:0"
														},
														"referencedDeclaration": 1098,
														"src": "6633:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1098_storage_ptr",
															"typeString": "struct ConduitBatch1155Transfer"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "6633:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitBatch1155Transfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6569:120:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "6740:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6733:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 120,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6732:19:0"
									},
									"scope": 278,
									"src": "6540:1132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "7976:532:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 167,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8060:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8064:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8060:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 169,
														"name": "_controller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "8074:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8060:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "8056:82:0",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "8087:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 171,
																	"name": "InvalidController",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "8108:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8108:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 173,
															"nodeType": "RevertStatement",
															"src": "8101:26:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 176,
															"name": "_channels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "8231:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 178,
														"indexExpression": {
															"id": 177,
															"name": "channel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "8241:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8231:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 179,
														"name": "isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "8253:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8231:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "IfStatement",
												"src": "8227:106:0",
												"trueBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "8261:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 182,
																		"name": "channel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "8306:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 183,
																		"name": "isOpen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "8315:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 181,
																	"name": "ChannelStatusAlreadySet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "8282:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool) pure"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8282:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 185,
															"nodeType": "RevertStatement",
															"src": "8275:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 188,
															"name": "_channels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "8388:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 190,
														"indexExpression": {
															"id": 189,
															"name": "channel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "8398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8388:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 191,
														"name": "isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "8409:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8388:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "8388:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 195,
															"name": "channel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "8485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "isOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "8494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 194,
														"name": "ChannelUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "8470:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8470:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "EmitStatement",
												"src": "8465:36:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "7678:222:0",
										"text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
									},
									"functionSelector": "c4e8fcb5",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateChannel",
									"nameLocation": "7914:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7967:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "7936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "7950:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7945:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7945:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7927:30:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7976:0:0"
									},
									"scope": 278,
									"src": "7905:603:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "8873:1338:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_ConduitItemType_$1067",
														"typeString": "enum ConduitItemType"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 207,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "8963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																"typeString": "struct ConduitTransfer calldata"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8968:8:0",
														"memberName": "itemType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1074,
														"src": "8963:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ConduitItemType_$1067",
															"typeString": "enum ConduitItemType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 209,
															"name": "ConduitItemType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "8980:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1067_$",
																"typeString": "type(enum ConduitItemType)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8996:5:0",
														"memberName": "ERC20",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1064,
														"src": "8980:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ConduitItemType_$1067",
															"typeString": "enum ConduitItemType"
														}
													},
													"src": "8963:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_ConduitItemType_$1067",
															"typeString": "enum ConduitItemType"
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 224,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "9391:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																	"typeString": "struct ConduitTransfer calldata"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9396:8:0",
															"memberName": "itemType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1074,
															"src": "9391:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ConduitItemType_$1067",
																"typeString": "enum ConduitItemType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 226,
																"name": "ConduitItemType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "9408:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1067_$",
																	"typeString": "type(enum ConduitItemType)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9424:6:0",
															"memberName": "ERC721",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1065,
															"src": "9408:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ConduitItemType_$1067",
																"typeString": "enum ConduitItemType"
															}
														},
														"src": "9391:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_ConduitItemType_$1067",
																"typeString": "enum ConduitItemType"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 250,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "9829:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																		"typeString": "struct ConduitTransfer calldata"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9834:8:0",
																"memberName": "itemType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1074,
																"src": "9829:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ConduitItemType_$1067",
																	"typeString": "enum ConduitItemType"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 252,
																	"name": "ConduitItemType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "9846:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1067_$",
																		"typeString": "type(enum ConduitItemType)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9862:7:0",
																"memberName": "ERC1155",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1066,
																"src": "9846:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ConduitItemType_$1067",
																	"typeString": "enum ConduitItemType"
																}
															},
															"src": "9829:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 272,
															"nodeType": "Block",
															"src": "10120:85:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 269,
																			"name": "InvalidItemType",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "10177:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10177:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 271,
																	"nodeType": "RevertStatement",
																	"src": "10170:24:0"
																}
															]
														},
														"id": 273,
														"nodeType": "IfStatement",
														"src": "9825:380:0",
														"trueBody": {
															"id": 268,
															"nodeType": "Block",
															"src": "9871:243:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 256,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 204,
																					"src": "9965:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																						"typeString": "struct ConduitTransfer calldata"
																					}
																				},
																				"id": 257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9970:5:0",
																				"memberName": "token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1076,
																				"src": "9965:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 258,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 204,
																					"src": "9993:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																						"typeString": "struct ConduitTransfer calldata"
																					}
																				},
																				"id": 259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9998:4:0",
																				"memberName": "from",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1078,
																				"src": "9993:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 260,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 204,
																					"src": "10020:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																						"typeString": "struct ConduitTransfer calldata"
																					}
																				},
																				"id": 261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10025:2:0",
																				"memberName": "to",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1080,
																				"src": "10020:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 262,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 204,
																					"src": "10045:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																						"typeString": "struct ConduitTransfer calldata"
																					}
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10050:10:0",
																				"memberName": "identifier",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1082,
																				"src": "10045:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 264,
																					"name": "item",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 204,
																					"src": "10078:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																						"typeString": "struct ConduitTransfer calldata"
																					}
																				},
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10083:6:0",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1084,
																				"src": "10078:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 255,
																			"name": "_performERC1155Transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1490,
																			"src": "9924:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,address,uint256,uint256)"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9924:179:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 267,
																	"nodeType": "ExpressionStatement",
																	"src": "9924:179:0"
																}
															]
														}
													},
													"id": 274,
													"nodeType": "IfStatement",
													"src": "9387:818:0",
													"trueBody": {
														"id": 249,
														"nodeType": "Block",
														"src": "9432:387:0",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 229,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9520:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9525:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1084,
																		"src": "9520:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9520:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 237,
																"nodeType": "IfStatement",
																"src": "9516:91:0",
																"trueBody": {
																	"id": 236,
																	"nodeType": "Block",
																	"src": "9538:69:0",
																	"statements": [
																		{
																			"errorCall": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 233,
																					"name": "InvalidERC721TransferAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1382,
																					"src": "9563:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9563:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 235,
																			"nodeType": "RevertStatement",
																			"src": "9556:36:0"
																		}
																	]
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 239,
																				"name": "item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "9699:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																					"typeString": "struct ConduitTransfer calldata"
																				}
																			},
																			"id": 240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9704:5:0",
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1076,
																			"src": "9699:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 241,
																				"name": "item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "9727:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																					"typeString": "struct ConduitTransfer calldata"
																				}
																			},
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9732:4:0",
																			"memberName": "from",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1078,
																			"src": "9727:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 243,
																				"name": "item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "9754:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																					"typeString": "struct ConduitTransfer calldata"
																				}
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9759:2:0",
																			"memberName": "to",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1080,
																			"src": "9754:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 245,
																				"name": "item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "9779:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																					"typeString": "struct ConduitTransfer calldata"
																				}
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9784:10:0",
																			"memberName": "identifier",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1082,
																			"src": "9779:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 238,
																		"name": "_performERC721Transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "9659:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,address,uint256)"
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9659:149:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 248,
																"nodeType": "ExpressionStatement",
																"src": "9659:149:0"
															}
														]
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "8959:1246:0",
												"trueBody": {
													"id": 223,
													"nodeType": "Block",
													"src": "9003:378:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 213,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9326:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata"
																			}
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9331:5:0",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1076,
																		"src": "9326:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 215,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9338:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9343:4:0",
																		"memberName": "from",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1078,
																		"src": "9338:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 217,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9349:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata"
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9354:2:0",
																		"memberName": "to",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1080,
																		"src": "9349:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 219,
																			"name": "item",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "9358:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
																				"typeString": "struct ConduitTransfer calldata"
																			}
																		},
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9363:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1084,
																		"src": "9358:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 212,
																	"name": "_performERC20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "9304:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9304:66:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 222,
															"nodeType": "ExpressionStatement",
															"src": "9304:66:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8514:295:0",
										"text": " @dev Internal function to transfer a given ERC20/721/1155 item. Note that\n      channels are expected to implement checks against transferring any\n      zero-amount items if that constraint is desired.\n @param item The ERC20/721/1155 item to transfer."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8823:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "item",
												"nameLocation": "8858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "8833:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ConduitTransfer_$1085_calldata_ptr",
													"typeString": "struct ConduitTransfer"
												},
												"typeName": {
													"id": 203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 202,
														"name": "ConduitTransfer",
														"nameLocations": [
															"8833:15:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1085,
														"src": "8833:15:0"
													},
													"referencedDeclaration": 1085,
													"src": "8833:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ConduitTransfer_$1085_storage_ptr",
														"typeString": "struct ConduitTransfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8832:31:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8873:0:0"
									},
									"scope": 278,
									"src": "8814:1397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 279,
							"src": "1078:9135:0",
							"usedErrors": [
								1313,
								1320,
								1323,
								1326,
								1382,
								1385,
								1388,
								1401,
								1416,
								1427,
								1432,
								1435
							]
						}
					],
					"src": "32:10182:0"
				},
				"id": 0
			},
			"conduit/ConduitController.sol": {
				"ast": {
					"absolutePath": "conduit/ConduitController.sol",
					"exportedSymbols": {
						"Conduit": [
							278
						],
						"ConduitController": [
							1036
						],
						"ConduitControllerInterface": [
							1302
						],
						"ConduitInterface": [
							1376
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 280,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "interfaces/ConduitControllerInterface.sol",
							"file": "../interfaces/ConduitControllerInterface.sol",
							"id": 282,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 1303,
							"src": "77:91:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 281,
										"name": "ConduitControllerInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "87:26:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/ConduitInterface.sol",
							"file": "../interfaces/ConduitInterface.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 1377,
							"src": "170:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 283,
										"name": "ConduitInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1376,
										"src": "179:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "conduit/Conduit.sol",
							"file": "./Conduit.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1037,
							"sourceUnit": 279,
							"src": "242:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 285,
										"name": "Conduit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 278,
										"src": "251:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 288,
										"name": "ConduitControllerInterface",
										"nameLocations": [
											"586:26:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "586:26:1"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "586:26:1"
								}
							],
							"canonicalName": "ConduitController",
							"contractDependencies": [
								278
							],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "284:271:1",
								"text": " @title ConduitController\n @author 0age\n @notice ConduitController enables deploying and managing new conduits, or\n         contracts that allow registered callers (or open \"channels\") to\n         transfer approved ERC20/721/1155 tokens on their behalf."
							},
							"fullyImplemented": true,
							"id": 1036,
							"linearizedBaseContracts": [
								1036,
								1302
							],
							"name": "ConduitController",
							"nameLocation": "565:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_conduits",
									"nameLocation": "743:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1036,
									"src": "696:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
										"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties)"
									},
									"typeName": {
										"id": 293,
										"keyType": {
											"id": 290,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "704:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "696:37:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
											"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties)"
										},
										"valueType": {
											"id": 292,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 291,
												"name": "ConduitProperties",
												"nameLocations": [
													"715:17:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1115,
												"src": "715:17:1"
											},
											"referencedDeclaration": 1115,
											"src": "715:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
												"typeString": "struct ConduitControllerInterface.ConduitProperties"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 296,
									"mutability": "immutable",
									"name": "_CONDUIT_CREATION_CODE_HASH",
									"nameLocation": "867:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 1036,
									"src": "840:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 295,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "840:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 298,
									"mutability": "immutable",
									"name": "_CONDUIT_RUNTIME_CODE_HASH",
									"nameLocation": "927:26:1",
									"nodeType": "VariableDeclaration",
									"scope": 1036,
									"src": "900:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 297,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "900:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "1135:434:1",
										"statements": [
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 302,
														"name": "_CONDUIT_CREATION_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1222:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 305,
																			"name": "Conduit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "1267:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Conduit_$278_$",
																				"typeString": "type(contract Conduit)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_Conduit_$278_$",
																				"typeString": "type(contract Conduit)"
																			}
																		],
																		"id": 304,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1262:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1262:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_Conduit_$278",
																		"typeString": "type(contract Conduit)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1276:12:1",
																"memberName": "creationCode",
																"nodeType": "MemberAccess",
																"src": "1262:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 303,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1252:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1252:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1222:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "1222:67:1"
											},
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "zeroConduit",
														"nameLocation": "1368:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "1360:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Conduit_$278",
															"typeString": "contract Conduit"
														},
														"typeName": {
															"id": 312,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 311,
																"name": "Conduit",
																"nameLocations": [
																	"1360:7:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "1360:7:1"
															},
															"referencedDeclaration": 278,
															"src": "1360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Conduit_$278",
																"typeString": "contract Conduit"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1382:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$278_$",
																"typeString": "function () returns (contract Conduit)"
															},
															"typeName": {
																"id": 315,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 314,
																	"name": "Conduit",
																	"nameLocations": [
																		"1386:7:1"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 278,
																	"src": "1386:7:1"
																},
																"referencedDeclaration": 278,
																"src": "1386:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Conduit_$278",
																	"typeString": "contract Conduit"
																}
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"salt"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1409:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1401:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 317,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1401:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1401:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"src": "1382:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$278_$salt",
															"typeString": "function () returns (contract Conduit)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1382:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Conduit_$278",
														"typeString": "contract Conduit"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1360:55:1"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_CONDUIT_RUNTIME_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1504:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 327,
																	"name": "zeroConduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "1541:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Conduit_$278",
																		"typeString": "contract Conduit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Conduit_$278",
																		"typeString": "contract Conduit"
																	}
																],
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1533:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1533:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1533:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1554:8:1",
														"memberName": "codehash",
														"nodeType": "MemberAccess",
														"src": "1533:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1504:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "1504:58:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "960:156:1",
										"text": " @dev Initialize contract by deploying a conduit and setting the creation\n      code and runtime code hashes as immutable arguments."
									},
									"id": 333,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1135:0:1"
									},
									"scope": 1036,
									"src": "1121:448:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "2465:1989:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2538:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2562:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2554:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2554:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2554:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2538:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 354,
												"nodeType": "IfStatement",
												"src": "2534:85:1",
												"trueBody": {
													"id": 353,
													"nodeType": "Block",
													"src": "2566:53:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 350,
																	"name": "InvalidInitialOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "2587:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2587:21:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "RevertStatement",
															"src": "2580:28:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 361,
																				"name": "conduitKey",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 336,
																				"src": "2736:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2728:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes20_$",
																				"typeString": "type(bytes20)"
																			},
																			"typeName": {
																				"id": 359,
																				"name": "bytes20",
																				"nodeType": "ElementaryTypeName",
																				"src": "2728:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2728:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	],
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2720:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 357,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "2720:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2720:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2712:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 355,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2712:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2712:37:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 365,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2753:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2757:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2753:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2712:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "2708:181:1",
												"trueBody": {
													"id": 371,
													"nodeType": "Block",
													"src": "2765:124:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 368,
																	"name": "InvalidCreator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "2862:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2862:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 370,
															"nodeType": "RevertStatement",
															"src": "2855:23:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "conduit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2976:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30786666",
																										"id": 385,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3149:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										},
																										"value": "0xff"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										}
																									],
																									"id": 384,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3142:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes1_$",
																										"typeString": "type(bytes1)"
																									},
																									"typeName": {
																										"id": 383,
																										"name": "bytes1",
																										"nodeType": "ElementaryTypeName",
																										"src": "3142:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 386,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3142:12:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 389,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "3192:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_ConduitController_$1036",
																											"typeString": "contract ConduitController"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_ConduitController_$1036",
																											"typeString": "contract ConduitController"
																										}
																									],
																									"id": 388,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3184:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 387,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "3184:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 390,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3184:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 391,
																								"name": "conduitKey",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 336,
																								"src": "3227:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 392,
																								"name": "_CONDUIT_CREATION_CODE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 296,
																								"src": "3267:27:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 381,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "3096:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 382,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "3100:12:1",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "3096:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 393,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3096:224:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 380,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "3061:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3061:281:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3032:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 378,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3032:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3032:328:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3007:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 376,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "3007:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3007:367:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2986:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 374,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2986:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2986:398:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2976:408:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "2976:408:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 400,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3479:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3487:8:1",
														"memberName": "codehash",
														"nodeType": "MemberAccess",
														"src": "3479:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 402,
														"name": "_CONDUIT_RUNTIME_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "3499:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3479:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "3475:193:1",
												"trueBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "3527:141:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 405,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "3649:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 404,
																	"name": "ConduitAlreadyExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "3628:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3628:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 407,
															"nodeType": "RevertStatement",
															"src": "3621:36:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3755:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$278_$",
																"typeString": "function () returns (contract Conduit)"
															},
															"typeName": {
																"id": 411,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 410,
																	"name": "Conduit",
																	"nameLocations": [
																		"3759:7:1"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 278,
																	"src": "3759:7:1"
																},
																"referencedDeclaration": 278,
																"src": "3759:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Conduit_$278",
																	"typeString": "contract Conduit"
																}
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"salt"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 413,
																"name": "conduitKey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "3774:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"src": "3755:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$278_$salt",
															"typeString": "function () returns (contract Conduit)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3755:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Conduit_$278",
														"typeString": "contract Conduit"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3755:33:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "conduitProperties",
														"nameLocation": "3896:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "3870:43:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
															"typeString": "struct ConduitControllerInterface.ConduitProperties"
														},
														"typeName": {
															"id": 418,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 417,
																"name": "ConduitProperties",
																"nameLocations": [
																	"3870:17:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1115,
																"src": "3870:17:1"
															},
															"referencedDeclaration": 1115,
															"src": "3870:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																"typeString": "struct ConduitControllerInterface.ConduitProperties"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_conduits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3916:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
															"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "conduit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "3926:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3916:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
														"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3870:64:1"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 424,
															"name": "conduitProperties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4016:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4034:5:1",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "4016:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 427,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "4042:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4016:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4016:38:1"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 430,
															"name": "conduitProperties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "4145:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4163:3:1",
														"memberName": "key",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "4145:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "conduitKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4169:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4145:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4145:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 437,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4278:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "conduitKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "4287:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 436,
														"name": "NewConduit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "4267:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
															"typeString": "function (address,bytes32)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "EmitStatement",
												"src": "4262:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 442,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4413:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4430:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4422:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 443,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4422:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4422:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4434:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 441,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "4392:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4392:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "EmitStatement",
												"src": "4387:60:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1575:748:1",
										"text": " @notice Deploy a new conduit using a supplied conduit key and assigning\n         an initial owner for the deployed conduit. Note that the first\n         twenty bytes of the supplied conduit key must match the caller\n         and that a new conduit cannot be created if one has already been\n         deployed using the same conduit key.\n @param conduitKey   The conduit key used to deploy the conduit. Note that\n                     the first twenty bytes of the conduit key must match\n                     the caller of this contract.\n @param initialOwner The initial owner to set for the new conduit.\n @return conduit The address of the newly deployed conduit."
									},
									"functionSelector": "794593bc",
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createConduit",
									"nameLocation": "2337:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2418:8:1"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "2359:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "2351:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2379:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "2371:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2350:42:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "2452:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "2444:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:17:1"
									},
									"scope": 1036,
									"src": "2328:2126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1202
									],
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "5299:2862:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5415:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 462,
														"name": "_assertCallerIsConduitOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "5387:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5387:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "5387:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "channel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5525:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "isOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "5534:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 467,
																	"name": "conduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "5502:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 466,
																"name": "ConduitInterface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "5485:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ConduitInterface_$1376_$",
																	"typeString": "type(contract ConduitInterface)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5485:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ConduitInterface_$1376",
																"typeString": "contract ConduitInterface"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5511:13:1",
														"memberName": "updateChannel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1375,
														"src": "5485:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool) external"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5485:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "5485:56:1"
											},
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "conduitProperties",
														"nameLocation": "5657:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "5631:43:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
															"typeString": "struct ConduitControllerInterface.ConduitProperties"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "ConduitProperties",
																"nameLocations": [
																	"5631:17:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1115,
																"src": "5631:17:1"
															},
															"referencedDeclaration": 1115,
															"src": "5631:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																"typeString": "struct ConduitControllerInterface.ConduitProperties"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"baseExpression": {
														"id": 477,
														"name": "_conduits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5677:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
															"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
														}
													},
													"id": 479,
													"indexExpression": {
														"id": 478,
														"name": "conduit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5687:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5677:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
														"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5631:64:1"
											},
											{
												"assignments": [
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "channelIndexPlusOne",
														"nameLocation": "5795:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "5787:27:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5787:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"components": [
														{
															"baseExpression": {
																"expression": {
																	"id": 483,
																	"name": "conduitProperties",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "5831:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																		"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5849:21:1",
																"memberName": "channelIndexesPlusOne",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1114,
																"src": "5831:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 486,
															"indexExpression": {
																"id": 485,
																"name": "channel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "5871:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5831:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 487,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5817:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5787:102:1"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "channelPreviouslyOpen",
														"nameLocation": "5982:21:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "5977:26:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 489,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5977:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "channelIndexPlusOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "6006:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6029:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6006:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:53:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 495,
														"name": "isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "6121:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6131:22:1",
														"subExpression": {
															"id": 496,
															"name": "channelPreviouslyOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "6132:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6121:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6510:7:1",
															"subExpression": {
																"id": 519,
																"name": "isOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "6511:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 521,
															"name": "channelPreviouslyOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "6521:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6510:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 585,
													"nodeType": "IfStatement",
													"src": "6506:1649:1",
													"trueBody": {
														"id": 584,
														"nodeType": "Block",
														"src": "6544:1611:1",
														"statements": [
															{
																"assignments": [
																	524
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 524,
																		"mutability": "mutable",
																		"name": "removedChannelIndex",
																		"nameLocation": "6725:19:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 584,
																		"src": "6717:27:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 523,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6717:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 525,
																"nodeType": "VariableDeclarationStatement",
																"src": "6717:27:1"
															},
															{
																"id": 532,
																"nodeType": "UncheckedBlock",
																"src": "6891:88:1",
																"statements": [
																	{
																		"expression": {
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 526,
																				"name": "removedChannelIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "6919:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 527,
																					"name": "channelIndexPlusOne",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 482,
																					"src": "6941:19:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6963:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "6941:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6919:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 531,
																		"nodeType": "ExpressionStatement",
																		"src": "6919:45:1"
																	}
																]
															},
															{
																"assignments": [
																	534
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 534,
																		"mutability": "mutable",
																		"name": "finalChannelIndex",
																		"nameLocation": "7081:17:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 584,
																		"src": "7073:25:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 533,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7073:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 540,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 535,
																				"name": "conduitProperties",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7101:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																					"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7119:8:1",
																			"memberName": "channels",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1110,
																			"src": "7101:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7128:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7101:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7137:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7101:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7073:65:1"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 541,
																		"name": "finalChannelIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "7235:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 542,
																		"name": "removedChannelIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "7256:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7235:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 570,
																"nodeType": "IfStatement",
																"src": "7231:640:1",
																"trueBody": {
																	"id": 569,
																	"nodeType": "Block",
																	"src": "7277:594:1",
																	"statements": [
																		{
																			"assignments": [
																				545
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 545,
																					"mutability": "mutable",
																					"name": "finalChannel",
																					"nameLocation": "7383:12:1",
																					"nodeType": "VariableDeclaration",
																					"scope": 569,
																					"src": "7375:20:1",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"typeName": {
																						"id": 544,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "7375:7:1",
																						"stateMutability": "nonpayable",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 551,
																			"initialValue": {
																				"components": [
																					{
																						"baseExpression": {
																							"expression": {
																								"id": 546,
																								"name": "conduitProperties",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 476,
																								"src": "7420:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																									"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																								}
																							},
																							"id": 547,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7438:8:1",
																							"memberName": "channels",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1110,
																							"src": "7420:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 549,
																						"indexExpression": {
																							"id": 548,
																							"name": "finalChannelIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 534,
																							"src": "7447:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "7420:45:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 550,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7398:85:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "7375:108:1"
																		},
																		{
																			"expression": {
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"expression": {
																							"id": 552,
																							"name": "conduitProperties",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 476,
																							"src": "7582:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																								"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																							}
																						},
																						"id": 555,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7600:8:1",
																						"memberName": "channels",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1110,
																						"src": "7582:26:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 556,
																					"indexExpression": {
																						"id": 554,
																						"name": "removedChannelIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 524,
																						"src": "7609:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "7582:47:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 557,
																					"name": "finalChannel",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "7632:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "7582:62:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 559,
																			"nodeType": "ExpressionStatement",
																			"src": "7582:62:1"
																		},
																		{
																			"expression": {
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"expression": {
																							"id": 560,
																							"name": "conduitProperties",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 476,
																							"src": "7741:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																								"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																							}
																						},
																						"id": 563,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7759:21:1",
																						"memberName": "channelIndexesPlusOne",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1114,
																						"src": "7741:39:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 564,
																					"indexExpression": {
																						"id": 562,
																						"name": "finalChannel",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 545,
																						"src": "7781:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "7741:53:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"components": [
																						{
																							"id": 565,
																							"name": "channelIndexPlusOne",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 482,
																							"src": "7819:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 566,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7797:59:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7741:115:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 568,
																			"nodeType": "ExpressionStatement",
																			"src": "7741:115:1"
																		}
																	]
																}
															},
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"expression": {
																				"id": 571,
																				"name": "conduitProperties",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7965:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																					"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																				}
																			},
																			"id": 574,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7983:8:1",
																			"memberName": "channels",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1110,
																			"src": "7965:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7992:3:1",
																		"memberName": "pop",
																		"nodeType": "MemberAccess",
																		"src": "7965:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																			"typeString": "function (address[] storage pointer)"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7965:32:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 577,
																"nodeType": "ExpressionStatement",
																"src": "7965:32:1"
															},
															{
																"expression": {
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "delete",
																	"prefix": true,
																	"src": "8089:55:1",
																	"subExpression": {
																		"baseExpression": {
																			"expression": {
																				"id": 578,
																				"name": "conduitProperties",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "8096:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																					"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8114:21:1",
																			"memberName": "channelIndexesPlusOne",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1114,
																			"src": "8096:39:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 581,
																		"indexExpression": {
																			"id": 580,
																			"name": "channel",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "8136:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8096:48:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 583,
																"nodeType": "ExpressionStatement",
																"src": "8089:55:1"
															}
														]
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "6117:2038:1",
												"trueBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "6155:345:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "channel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "6271:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 499,
																			"name": "conduitProperties",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6239:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																				"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6257:8:1",
																		"memberName": "channels",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1110,
																		"src": "6239:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6266:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6239:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6239:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "6239:40:1"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 507,
																			"name": "conduitProperties",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "6373:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																				"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																			}
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6391:21:1",
																		"memberName": "channelIndexesPlusOne",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1114,
																		"src": "6373:39:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"id": 509,
																		"name": "channel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "6413:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6373:48:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"expression": {
																				"expression": {
																					"id": 512,
																					"name": "conduitProperties",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "6442:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage_ptr",
																						"typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
																					}
																				},
																				"id": 513,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6460:8:1",
																				"memberName": "channels",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1110,
																				"src": "6442:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6469:6:1",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6442:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 515,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6424:65:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6373:116:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "6373:116:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "4460:716:1",
										"text": " @notice Open or close a channel on a given conduit, thereby allowing the\n         specified account to execute transfers against that conduit.\n         Extreme care must be taken when updating channels, as malicious\n         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n         tokens where the token holder has granted the conduit approval.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to open or close the channel.\n @param channel The channel to open or close on the conduit.\n @param isOpen  A boolean indicating whether to open or close the channel."
									},
									"functionSelector": "13ad9cab",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateChannel",
									"nameLocation": "5190:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 460,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5290:8:1"
									},
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "5221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "5246:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5238:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "5268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5263:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5263:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:77:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5299:0:1"
									},
									"scope": 1036,
									"src": "5181:2980:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1210
									],
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "8763:814:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 598,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "8879:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 597,
														"name": "_assertCallerIsConduitOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "8851:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8851:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "8851:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "newPotentialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "8971:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9000:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8992:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8992:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8992:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8971:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "8967:108:1",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "9004:71:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 608,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "9056:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 607,
																	"name": "NewPotentialOwnerIsZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "9025:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9025:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "RevertStatement",
															"src": "9018:46:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "newPotentialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "9151:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 614,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "9172:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 616,
															"indexExpression": {
																"id": 615,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "9182:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9172:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9191:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "9172:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9151:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "9147:147:1",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "9207:87:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 620,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "9256:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "newPotentialOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "9265:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 619,
																	"name": "NewPotentialOwnerAlreadySet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "9228:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9228:55:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "RevertStatement",
															"src": "9221:62:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "newPotentialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "9410:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 626,
														"name": "PotentialOwnerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "9388:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "9383:45:1"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 630,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "9517:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 632,
															"indexExpression": {
																"id": 631,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "9527:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9517:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9536:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "9517:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 634,
														"name": "newPotentialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "9553:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9517:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "9517:53:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "8167:482:1",
										"text": " @notice Initiate conduit ownership transfer by assigning a new potential\n         owner for the given conduit. Once set, the new potential owner\n         may call `acceptOwnership` to claim ownership of the conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to initiate ownership transfer.\n @param newPotentialOwner The new potential owner of the conduit."
									},
									"functionSelector": "6d435421",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "8663:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8750:8:1"
									},
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "8689:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "8681:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "newPotentialOwner",
												"nameLocation": "8706:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "8698:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8680:44:1"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8763:0:1"
									},
									"scope": 1036,
									"src": "8654:923:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1216
									],
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "9909:580:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 646,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "_assertCallerIsConduitOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "9997:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9997:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "9997:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 649,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "10113:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 651,
															"indexExpression": {
																"id": 650,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "10123:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10113:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10132:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "10113:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10158:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 653,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10150:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10150:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10113:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "10109:122:1",
												"trueBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "10162:69:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 659,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "10212:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 658,
																	"name": "NoPotentialOwnerCurrentlySet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "10183:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10183:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 661,
															"nodeType": "RevertStatement",
															"src": "10176:44:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10355:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10347:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 665,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10347:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10347:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 664,
														"name": "PotentialOwnerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "10325:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10325:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "EmitStatement",
												"src": "10320:38:1"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 671,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "10436:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 673,
															"indexExpression": {
																"id": 672,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "10446:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10436:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10455:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "10436:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10480:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10472:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10472:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10472:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10436:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "10436:46:1"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "9583:253:1",
										"text": " @notice Clear the currently set potential owner, if any, from a conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to cancel ownership transfer."
									},
									"functionSelector": "7b37e561",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOwnershipTransfer",
									"nameLocation": "9850:23:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 643,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9900:8:1"
									},
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "9882:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "9874:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9874:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9873:17:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9909:0:1"
									},
									"scope": 1036,
									"src": "9841:648:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1222
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "10824:949:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "10910:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 689,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "10889:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10889:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "10889:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 693,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11011:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11015:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11011:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 695,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "11025:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 697,
															"indexExpression": {
																"id": 696,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "11035:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11025:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11044:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "11025:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11011:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "11007:200:1",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "11060:147:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 701,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "11188:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 700,
																	"name": "CallerIsNotNewPotentialOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1177,
																	"src": "11159:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11159:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 703,
															"nodeType": "RevertStatement",
															"src": "11152:44:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11331:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11323:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 707,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11323:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11323:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 706,
														"name": "PotentialOwnerUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "11301:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11301:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "11296:38:1"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 713,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "11412:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 715,
															"indexExpression": {
																"id": 714,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "11422:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11412:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11431:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "11412:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11456:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11448:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 717,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11448:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11448:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11412:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "11412:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 724,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "11584:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 725,
																	"name": "_conduits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "11605:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																		"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "conduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "11615:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11605:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																	"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11624:5:1",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1105,
															"src": "11605:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11643:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11647:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11643:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 723,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "11550:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11550:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "EmitStatement",
												"src": "11545:118:1"
											},
											{
												"expression": {
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 733,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "11729:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 734,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "11739:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11729:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11748:5:1",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "11729:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11756:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11760:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11756:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11729:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "11729:37:1"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "10495:264:1",
										"text": " @notice Accept ownership of a supplied conduit. Only accounts that the\n         current owner has set as the new potential owner may call this\n         function.\n @param conduit The conduit for which to accept ownership."
									},
									"functionSelector": "51710e45",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "10773:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 687,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10815:8:1"
									},
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "10797:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "10789:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10788:17:1"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10824:0:1"
									},
									"scope": 1036,
									"src": "10764:1009:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1230
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "12125:210:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "12211:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 751,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "12190:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12190:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "12190:29:1"
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "12296:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 756,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "12304:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 758,
															"indexExpression": {
																"id": 757,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "12314:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12304:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12323:5:1",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "12304:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12296:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "12296:32:1"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "11779:224:1",
										"text": " @notice Retrieve the current owner of a deployed conduit.\n @param conduit The conduit for which to retrieve the associated owner.\n @return owner The owner of the supplied conduit."
									},
									"functionSelector": "14afd79e",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12017:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 747,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12080:8:1"
									},
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "12033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12024:17:1"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12114:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "12106:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12105:15:1"
									},
									"scope": 1036,
									"src": "12008:327:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1238
									],
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "12775:258:1",
										"statements": [
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "conduitKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "12859:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 773,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "12872:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 775,
															"indexExpression": {
																"id": 774,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "12882:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12872:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12891:3:1",
														"memberName": "key",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "12872:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "12859:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "12859:35:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 779,
														"name": "conduitKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "12958:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12980:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12972:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 780,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12972:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12972:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "12958:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "12954:73:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "12984:43:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 785,
																	"name": "NoConduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "13005:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13005:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "12998:18:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "12341:308:1",
										"text": " @notice Retrieve the conduit key for a deployed conduit via reverse\n         lookup.\n @param conduit The conduit for which to retrieve the associated conduit\n                key.\n @return conduitKey The conduit key used to deploy the supplied conduit."
									},
									"functionSelector": "93790f44",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "12663:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12725:8:1"
									},
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "12678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "12670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12670:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12669:17:1"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "12759:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "12751:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12750:20:1"
									},
									"scope": 1036,
									"src": "12654:379:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "13635:646:1",
										"statements": [
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 802,
														"name": "conduit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "13722:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30786666",
																										"id": 814,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13895:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										},
																										"value": "0xff"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_255_by_1",
																											"typeString": "int_const 255"
																										}
																									],
																									"id": 813,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "13888:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_bytes1_$",
																										"typeString": "type(bytes1)"
																									},
																									"typeName": {
																										"id": 812,
																										"name": "bytes1",
																										"nodeType": "ElementaryTypeName",
																										"src": "13888:6:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 815,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13888:12:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"id": 818,
																										"name": "this",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967268,
																										"src": "13938:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_ConduitController_$1036",
																											"typeString": "contract ConduitController"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_contract$_ConduitController_$1036",
																											"typeString": "contract ConduitController"
																										}
																									],
																									"id": 817,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "13930:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 816,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "13930:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 819,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13930:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 820,
																								"name": "conduitKey",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 794,
																								"src": "13973:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 821,
																								"name": "_CONDUIT_CREATION_CODE_HASH",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 296,
																								"src": "14013:27:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes1",
																									"typeString": "bytes1"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"expression": {
																								"id": 810,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "13842:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 811,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "13846:12:1",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "13842:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 822,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13842:224:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 809,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "13807:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13807:281:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13778:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 807,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13778:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13778:328:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13753:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13753:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13753:367:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13732:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13732:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13732:398:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13722:408:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "13722:408:1"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "14217:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 830,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "14227:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14235:8:1",
																	"memberName": "codehash",
																	"nodeType": "MemberAccess",
																	"src": "14227:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 832,
																	"name": "_CONDUIT_RUNTIME_CODE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "14247:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "14227:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 834,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14226:48:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14217:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "14217:57:1"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "13039:453:1",
										"text": " @notice Derive the conduit associated with a given conduit key and\n         determine whether that conduit exists (i.e. whether it has been\n         deployed).\n @param conduitKey The conduit key used to derive the conduit.\n @return conduit The derived address of the conduit.\n @return exists  A boolean indicating whether the derived conduit has been\n                 deployed or not."
									},
									"functionSelector": "6e9bfd9f",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConduit",
									"nameLocation": "13506:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 796,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13575:8:1"
									},
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "13525:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "13517:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13516:20:1"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "13609:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "13601:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13601:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "13623:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "13618:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13618:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13600:30:1"
									},
									"scope": 1036,
									"src": "13497:784:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1256
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "14888:238:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "14974:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 847,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "14953:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14953:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "14953:29:1"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "potentialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "15069:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 852,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "15086:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 854,
															"indexExpression": {
																"id": 853,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "15096:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15086:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15105:14:1",
														"memberName": "potentialOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1107,
														"src": "15086:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15069:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "15069:50:1"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "14287:460:1",
										"text": " @notice Retrieve the potential owner, if any, for a given conduit. The\n         current owner may set a new potential owner via\n         `transferOwnership` and that owner may then accept ownership of\n         the conduit in question via `acceptOwnership`.\n @param conduit The conduit for which to retrieve the potential owner.\n @return potentialOwner The potential owner, if any, for the conduit."
									},
									"functionSelector": "906c87cc",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPotentialOwner",
									"nameLocation": "14761:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 843,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14834:8:1"
									},
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "14787:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "14779:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14778:17:1"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "potentialOwner",
												"nameLocation": "14868:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "14860:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14859:24:1"
									},
									"scope": 1036,
									"src": "14752:374:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1266
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "15624:251:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "15689:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15689:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "15689:29:1"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "isOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "15805:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 875,
																		"name": "_conduits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "15814:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																			"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																		}
																	},
																	"id": 877,
																	"indexExpression": {
																		"id": 876,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "15824:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15814:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																		"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15833:21:1",
																"memberName": "channelIndexesPlusOne",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1114,
																"src": "15814:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 880,
															"indexExpression": {
																"id": 879,
																"name": "channel",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "15855:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15814:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15867:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15814:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15805:63:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "15805:63:1"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "15132:346:1",
										"text": " @notice Retrieve the status (either open or closed) of a given channel on\n         a conduit.\n @param conduit The conduit for which to retrieve the channel status.\n @param channel The channel for which to retrieve the status.\n @return isOpen The status of the channel on the given conduit."
									},
									"functionSelector": "33bc8572",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChannelStatus",
									"nameLocation": "15492:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 866,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15581:8:1"
									},
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "15517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "15509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "15534:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "15526:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15508:34:1"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "15612:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "15607:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15607:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15606:13:1"
									},
									"scope": 1036,
									"src": "15483:392:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1274
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "16285:240:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "16371:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 895,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "16350:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16350:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "16350:29:1"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "totalChannels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "16468:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 900,
																	"name": "_conduits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "16484:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																		"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																	}
																},
																"id": 902,
																"indexExpression": {
																	"id": 901,
																	"name": "conduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "16494:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16484:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																	"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16503:8:1",
															"memberName": "channels",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "16484:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16512:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16484:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16468:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "16468:50:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "15881:265:1",
										"text": " @notice Retrieve the total number of open channels for a given conduit.\n @param conduit The conduit for which to retrieve the total channel count.\n @return totalChannels The total number of open channels for the conduit."
									},
									"functionSelector": "4e3f9580",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalChannels",
									"nameLocation": "16160:16:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 891,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16232:8:1"
									},
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "16185:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "16177:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16176:17:1"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "totalChannels",
												"nameLocation": "16266:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "16258:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16257:23:1"
									},
									"scope": 1036,
									"src": "16151:374:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1284
									],
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "17144:524:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "17230:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 919,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "17209:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17209:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "17209:29:1"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "totalChannels",
														"nameLocation": "17335:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 949,
														"src": "17327:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 923,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 930,
												"initialValue": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 925,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "17351:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 927,
															"indexExpression": {
																"id": 926,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 911,
																"src": "17361:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17351:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17370:8:1",
														"memberName": "channels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "17351:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "17379:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "17351:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17327:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 931,
														"name": "channelIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "17459:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 932,
														"name": "totalChannels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "17475:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17459:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "17455:93:1",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "17490:58:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 911,
																		"src": "17529:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 934,
																	"name": "ChannelOutOfRange",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "17511:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17511:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "17504:33:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 940,
														"name": "channel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "17610:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 941,
																	"name": "_conduits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "17620:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																		"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																	}
																},
																"id": 943,
																"indexExpression": {
																	"id": 942,
																	"name": "conduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "17630:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17620:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																	"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17639:8:1",
															"memberName": "channels",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "17620:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 946,
														"indexExpression": {
															"id": 945,
															"name": "channelIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "17648:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17620:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17610:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "17610:51:1"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "16531:464:1",
										"text": " @notice Retrieve an open channel at a specific index for a given conduit.\n         Note that the index of a channel can change as a result of other\n         channels being closed on the conduit.\n @param conduit      The conduit for which to retrieve the open channel.\n @param channelIndex The index of the channel in question.\n @return channel The open channel, if any, at the specified channel index."
									},
									"functionSelector": "027cc764",
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChannel",
									"nameLocation": "17009:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 915,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17097:8:1"
									},
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "17028:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "17020:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "channelIndex",
												"nameLocation": "17045:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "17037:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17019:39:1"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "17131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "17123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17122:17:1"
									},
									"scope": 1036,
									"src": "17000:668:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "18176:223:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 961,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "18262:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 960,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "18241:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18241:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "18241:29:1"
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "channels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "18354:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 965,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "18365:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 967,
															"indexExpression": {
																"id": 966,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "18375:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18365:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18384:8:1",
														"memberName": "channels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "18365:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"src": "18354:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "18354:38:1"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "17674:364:1",
										"text": " @notice Retrieve all open channels for a given conduit. Note that calling\n         this function for a conduit with many channels will revert with\n         an out-of-gas error.\n @param conduit The conduit for which to retrieve open channels.\n @return channels An array of open channels on the given conduit."
									},
									"functionSelector": "8b9e028b",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChannels",
									"nameLocation": "18052:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18119:8:1"
									},
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "18072:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "18064:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18064:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18063:17:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "channels",
												"nameLocation": "18162:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "18145:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 956,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18145:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 957,
													"nodeType": "ArrayTypeName",
													"src": "18145:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18144:27:1"
									},
									"scope": 1036,
									"src": "18043:356:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "18644:247:1",
										"statements": [
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 981,
														"name": "creationCodeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "18719:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "_CONDUIT_CREATION_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "18738:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "18719:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "18719:46:1"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "runtimeCodeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "18840:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "_CONDUIT_RUNTIME_CODE_HASH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "18858:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "18840:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "18840:44:1"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "18405:83:1",
										"text": " @dev Retrieve the conduit creation code and runtime code hashes."
									},
									"functionSelector": "0a96ad39",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConduitCodeHashes",
									"nameLocation": "18502:20:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 975,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18563:8:1"
									},
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18522:2:1"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "creationCodeHash",
												"nameLocation": "18597:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18589:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18589:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "runtimeCodeHash",
												"nameLocation": "18623:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "18615:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 978,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18588:51:1"
									},
									"scope": 1036,
									"src": "18493:398:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "19159:356:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "conduit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "19245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 996,
														"name": "_assertConduitExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "19224:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19224:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "19224:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1000,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "19344:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19348:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "19344:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1002,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "19358:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 1004,
															"indexExpression": {
																"id": 1003,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "19368:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19358:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19377:5:1",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1105,
														"src": "19358:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19344:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "19340:169:1",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "19384:125:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "conduit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "19490:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1007,
																	"name": "CallerIsNotOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "19473:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19473:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "19466:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "18897:190:1",
										"text": " @dev Private view function to revert if the caller is not the owner of a\n      given conduit.\n @param conduit The conduit for which to assert ownership."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_assertCallerIsConduitOwner",
									"nameLocation": "19101:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "19137:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "19129:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19129:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19128:17:1"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19159:0:1"
									},
									"scope": 1036,
									"src": "19092:423:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "19748:228:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1020,
																"name": "_conduits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "19836:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1115_storage_$",
																	"typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
																}
															},
															"id": 1022,
															"indexExpression": {
																"id": 1021,
																"name": "conduit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "19846:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "19836:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConduitProperties_$1115_storage",
																"typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19855:3:1",
														"memberName": "key",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "19836:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19870:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19862:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1024,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "19862:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19862:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "19836:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1033,
												"nodeType": "IfStatement",
												"src": "19832:138:1",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "19874:96:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1029,
																	"name": "NoConduit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "19948:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19948:11:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "RevertStatement",
															"src": "19941:18:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "19521:162:1",
										"text": " @dev Private view function to revert if a given conduit does not exist.\n @param conduit The conduit for which to assert existence."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_assertConduitExists",
									"nameLocation": "19697:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "19726:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "19718:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19717:17:1"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19748:0:1"
									},
									"scope": 1036,
									"src": "19688:288:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1037,
							"src": "556:19422:1",
							"usedErrors": [
								1139,
								1142,
								1149,
								1154,
								1157,
								1162,
								1167,
								1172,
								1177,
								1182
							]
						}
					],
					"src": "32:19947:1"
				},
				"id": 1
			},
			"conduit/lib/ConduitConstants.sol": {
				"ast": {
					"absolutePath": "conduit/lib/ConduitConstants.sol",
					"exportedSymbols": {
						"ChannelClosed_channel_ptr": [
							1048
						],
						"ChannelClosed_error_length": [
							1051
						],
						"ChannelClosed_error_ptr": [
							1045
						],
						"ChannelClosed_error_signature": [
							1042
						],
						"ChannelKey_channel_ptr": [
							1054
						],
						"ChannelKey_length": [
							1060
						],
						"ChannelKey_slot_ptr": [
							1057
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1038,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"constant": true,
							"id": 1042,
							"mutability": "constant",
							"name": "ChannelClosed_error_signature",
							"nameLocation": "115:29:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "98:123:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1039,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "98:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307839336461616466323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1040,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "153:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
											"typeString": "int_const 6687...(69 digits omitted)...0080"
										},
										"value": "0x93daadf200000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1041,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "147:74:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_66876361928286935092717866925301290808224162558783313296595378262690056110080_by_1",
									"typeString": "int_const 6687...(69 digits omitted)...0080"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1045,
							"mutability": "constant",
							"name": "ChannelClosed_error_ptr",
							"nameLocation": "240:23:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "223:47:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1043,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "223:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783030",
								"id": 1044,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "266:4:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x00"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1048,
							"mutability": "constant",
							"name": "ChannelClosed_channel_ptr",
							"nameLocation": "289:25:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "272:48:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1046,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "272:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307834",
								"id": 1047,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "317:3:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1051,
							"mutability": "constant",
							"name": "ChannelClosed_error_length",
							"nameLocation": "339:26:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "322:50:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1049,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "322:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1050,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "368:4:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1054,
							"mutability": "constant",
							"name": "ChannelKey_channel_ptr",
							"nameLocation": "554:22:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "537:46:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1052,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "537:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783030",
								"id": 1053,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "579:4:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x00"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1057,
							"mutability": "constant",
							"name": "ChannelKey_slot_ptr",
							"nameLocation": "602:19:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "585:43:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1055,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "585:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783230",
								"id": 1056,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "624:4:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_32_by_1",
									"typeString": "int_const 32"
								},
								"value": "0x20"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1060,
							"mutability": "constant",
							"name": "ChannelKey_length",
							"nameLocation": "647:17:2",
							"nodeType": "VariableDeclaration",
							"scope": 1061,
							"src": "630:41:2",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1058,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "630:7:2",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783430",
								"id": 1059,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "667:4:2",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_64_by_1",
									"typeString": "int_const 64"
								},
								"value": "0x40"
							},
							"visibility": "internal"
						}
					],
					"src": "32:641:2"
				},
				"id": 2
			},
			"conduit/lib/ConduitEnums.sol": {
				"ast": {
					"absolutePath": "conduit/lib/ConduitEnums.sol",
					"exportedSymbols": {
						"ConduitItemType": [
							1067
						]
					},
					"id": 1068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"canonicalName": "ConduitItemType",
							"id": 1067,
							"members": [
								{
									"id": 1063,
									"name": "NATIVE",
									"nameLocation": "85:6:3",
									"nodeType": "EnumValue",
									"src": "85:6:3"
								},
								{
									"id": 1064,
									"name": "ERC20",
									"nameLocation": "107:5:3",
									"nodeType": "EnumValue",
									"src": "107:5:3"
								},
								{
									"id": 1065,
									"name": "ERC721",
									"nameLocation": "118:6:3",
									"nodeType": "EnumValue",
									"src": "118:6:3"
								},
								{
									"id": 1066,
									"name": "ERC1155",
									"nameLocation": "130:7:3",
									"nodeType": "EnumValue",
									"src": "130:7:3"
								}
							],
							"name": "ConduitItemType",
							"nameLocation": "63:15:3",
							"nodeType": "EnumDefinition",
							"src": "58:81:3"
						}
					],
					"src": "32:108:3"
				},
				"id": 3
			},
			"conduit/lib/ConduitStructs.sol": {
				"ast": {
					"absolutePath": "conduit/lib/ConduitStructs.sol",
					"exportedSymbols": {
						"ConduitBatch1155Transfer": [
							1098
						],
						"ConduitItemType": [
							1067
						],
						"ConduitTransfer": [
							1085
						]
					},
					"id": 1099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1069,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"absolutePath": "conduit/lib/ConduitEnums.sol",
							"file": "./ConduitEnums.sol",
							"id": 1071,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 1068,
							"src": "58:53:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1070,
										"name": "ConduitItemType",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1067,
										"src": "67:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ConduitTransfer",
							"id": 1085,
							"members": [
								{
									"constant": false,
									"id": 1074,
									"mutability": "mutable",
									"name": "itemType",
									"nameLocation": "158:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "142:24:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_ConduitItemType_$1067",
										"typeString": "enum ConduitItemType"
									},
									"typeName": {
										"id": 1073,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1072,
											"name": "ConduitItemType",
											"nameLocations": [
												"142:15:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1067,
											"src": "142:15:4"
										},
										"referencedDeclaration": 1067,
										"src": "142:15:4",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_ConduitItemType_$1067",
											"typeString": "enum ConduitItemType"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1076,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "180:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "172:13:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1075,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "172:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1078,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "199:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "191:12:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1077,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "191:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1080,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "217:2:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "209:10:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1079,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "209:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1082,
									"mutability": "mutable",
									"name": "identifier",
									"nameLocation": "233:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "225:18:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "225:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1084,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "257:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1085,
									"src": "249:14:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ConduitTransfer",
							"nameLocation": "120:15:4",
							"nodeType": "StructDefinition",
							"scope": 1099,
							"src": "113:153:4",
							"visibility": "public"
						},
						{
							"canonicalName": "ConduitBatch1155Transfer",
							"id": 1098,
							"members": [
								{
									"constant": false,
									"id": 1087,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "314:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1098,
									"src": "306:13:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1086,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1089,
									"mutability": "mutable",
									"name": "from",
									"nameLocation": "333:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1098,
									"src": "325:12:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1088,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1091,
									"mutability": "mutable",
									"name": "to",
									"nameLocation": "351:2:4",
									"nodeType": "VariableDeclaration",
									"scope": 1098,
									"src": "343:10:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1090,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "343:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1094,
									"mutability": "mutable",
									"name": "ids",
									"nameLocation": "369:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1098,
									"src": "359:13:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1092,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "359:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1093,
										"nodeType": "ArrayTypeName",
										"src": "359:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1097,
									"mutability": "mutable",
									"name": "amounts",
									"nameLocation": "388:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1098,
									"src": "378:17:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1095,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "378:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1096,
										"nodeType": "ArrayTypeName",
										"src": "378:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ConduitBatch1155Transfer",
							"nameLocation": "275:24:4",
							"nodeType": "StructDefinition",
							"scope": 1099,
							"src": "268:130:4",
							"visibility": "public"
						}
					],
					"src": "32:367:4"
				},
				"id": 4
			},
			"interfaces/ConduitControllerInterface.sol": {
				"ast": {
					"absolutePath": "interfaces/ConduitControllerInterface.sol",
					"exportedSymbols": {
						"ConduitControllerInterface": [
							1302
						]
					},
					"id": 1303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1100,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConduitControllerInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1101,
								"nodeType": "StructuredDocumentation",
								"src": "58:208:5",
								"text": " @title ConduitControllerInterface\n @author 0age\n @notice ConduitControllerInterface contains all external function interfaces,\n         structs, events, and errors for the conduit controller."
							},
							"fullyImplemented": false,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "ConduitControllerInterface",
							"nameLocation": "277:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ConduitControllerInterface.ConduitProperties",
									"id": 1115,
									"members": [
										{
											"constant": false,
											"id": 1103,
											"mutability": "mutable",
											"name": "key",
											"nameLocation": "497:3:5",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "489:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1102,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "489:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1105,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "518:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "510:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1104,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "510:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1107,
											"mutability": "mutable",
											"name": "potentialOwner",
											"nameLocation": "541:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "533:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1106,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "533:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "channels",
											"nameLocation": "575:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "565:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1109,
												"nodeType": "ArrayTypeName",
												"src": "565:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1114,
											"mutability": "mutable",
											"name": "channelIndexesPlusOne",
											"nameLocation": "621:21:5",
											"nodeType": "VariableDeclaration",
											"scope": 1115,
											"src": "593:49:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1113,
												"keyType": {
													"id": 1111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "593:27:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ConduitProperties",
									"nameLocation": "461:17:5",
									"nodeType": "StructDefinition",
									"scope": 1302,
									"src": "454:195:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "655:204:5",
										"text": " @dev Emit an event whenever a new conduit is created.\n @param conduit    The newly created conduit.\n @param conduitKey The conduit key used to create the new conduit."
									},
									"eventSelector": "4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15",
									"id": 1122,
									"name": "NewConduit",
									"nameLocation": "870:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "889:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "881:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "906:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "898:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:37:5"
									},
									"src": "864:54:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "924:318:5",
										"text": " @dev Emit an event whenever conduit ownership is transferred.\n @param conduit       The conduit for which ownership has been\n                      transferred.\n @param previousOwner The previous owner of the conduit.\n @param newOwner      The new owner of the conduit."
									},
									"eventSelector": "c8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec",
									"id": 1131,
									"name": "OwnershipTransferred",
									"nameLocation": "1253:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "1299:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1283:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1332:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1316:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1371:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1355:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:112:5"
									},
									"src": "1247:139:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "1392:203:5",
										"text": " @dev Emit an event whenever a conduit owner registers a new potential\n      owner for that conduit.\n @param newPotentialOwner The new potential owner of the conduit."
									},
									"eventSelector": "11a3cf439fb225bfe74225716b6774765670ec1060e3796802e62139d69974da",
									"id": 1136,
									"name": "PotentialOwnerUpdated",
									"nameLocation": "1606:21:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": true,
												"mutability": "mutable",
												"name": "newPotentialOwner",
												"nameLocation": "1644:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1628:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:35:5"
									},
									"src": "1600:63:5"
								},
								{
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "1669:208:5",
										"text": " @dev Revert with an error when attempting to create a new conduit using a\n      conduit key where the first twenty bytes of the key do not match the\n      address of the caller."
									},
									"errorSelector": "cb6e5344",
									"id": 1139,
									"name": "InvalidCreator",
									"nameLocation": "1888:14:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:2:5"
									},
									"src": "1882:23:5"
								},
								{
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "1911:139:5",
										"text": " @dev Revert with an error when attempting to create a new conduit when no\n      initial owner address is supplied."
									},
									"errorSelector": "99faaa04",
									"id": 1142,
									"name": "InvalidInitialOwner",
									"nameLocation": "2061:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:2:5"
									},
									"src": "2055:28:5"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "2089:122:5",
										"text": " @dev Revert with an error when attempting to set a new potential owner\n      that is already set."
									},
									"errorSelector": "cbc080ca",
									"id": 1149,
									"name": "NewPotentialOwnerAlreadySet",
									"nameLocation": "2222:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "2267:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2259:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "newPotentialOwner",
												"nameLocation": "2292:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "2284:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2249:66:5"
									},
									"src": "2216:100:5"
								},
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "2322:147:5",
										"text": " @dev Revert with an error when attempting to cancel ownership transfer\n      when no new potential owner is currently set."
									},
									"errorSelector": "6b013616",
									"id": 1154,
									"name": "NoPotentialOwnerCurrentlySet",
									"nameLocation": "2480:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "2517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "2509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2508:17:5"
									},
									"src": "2474:52:5"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "2532:124:5",
										"text": " @dev Revert with an error when attempting to interact with a conduit that\n      does not yet exist."
									},
									"errorSelector": "4ca82090",
									"id": 1157,
									"name": "NoConduit",
									"nameLocation": "2667:9:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2676:2:5"
									},
									"src": "2661:18:5"
								},
								{
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "2685:113:5",
										"text": " @dev Revert with an error when attempting to create a conduit that\n      already exists."
									},
									"errorSelector": "6328ccb2",
									"id": 1162,
									"name": "ConduitAlreadyExists",
									"nameLocation": "2809:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "2838:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2830:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:17:5"
									},
									"src": "2803:44:5"
								},
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "2853:199:5",
										"text": " @dev Revert with an error when attempting to update channels or transfer\n      ownership of a conduit when the caller is not the owner of the\n      conduit in question."
									},
									"errorSelector": "d4ed9a17",
									"id": 1167,
									"name": "CallerIsNotOwner",
									"nameLocation": "3063:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "3088:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3080:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3079:17:5"
									},
									"src": "3057:40:5"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "3103:138:5",
										"text": " @dev Revert with an error when attempting to register a new potential\n      owner and supplying the null address."
									},
									"errorSelector": "a388d263",
									"id": 1172,
									"name": "NewPotentialOwnerIsZeroAddress",
									"nameLocation": "3252:30:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "3291:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3283:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3283:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:17:5"
									},
									"src": "3246:54:5"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "3306:199:5",
										"text": " @dev Revert with an error when attempting to claim ownership of a conduit\n      with a caller that is not the current potential owner for the\n      conduit in question."
									},
									"errorSelector": "88c3a115",
									"id": 1177,
									"name": "CallerIsNotNewPotentialOwner",
									"nameLocation": "3516:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "3553:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3545:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:17:5"
									},
									"src": "3510:52:5"
								},
								{
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "3568:131:5",
										"text": " @dev Revert with an error when attempting to retrieve a channel using an\n      index that is out of range."
									},
									"errorSelector": "6ceb340b",
									"id": 1182,
									"name": "ChannelOutOfRange",
									"nameLocation": "3710:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "3736:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "3728:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3727:17:5"
									},
									"src": "3704:41:5"
								},
								{
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "3751:748:5",
										"text": " @notice Deploy a new conduit using a supplied conduit key and assigning\n         an initial owner for the deployed conduit. Note that the first\n         twenty bytes of the supplied conduit key must match the caller\n         and that a new conduit cannot be created if one has already been\n         deployed using the same conduit key.\n @param conduitKey   The conduit key used to deploy the conduit. Note that\n                     the first twenty bytes of the conduit key must match\n                     the caller of this contract.\n @param initialOwner The initial owner to set for the new conduit.\n @return conduit The address of the newly deployed conduit."
									},
									"functionSelector": "794593bc",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createConduit",
									"nameLocation": "4513:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "4535:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4527:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4527:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "4555:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4547:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4547:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:42:5"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "4611:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4603:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4602:17:5"
									},
									"scope": 1302,
									"src": "4504:116:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "4626:716:5",
										"text": " @notice Open or close a channel on a given conduit, thereby allowing the\n         specified account to execute transfers against that conduit.\n         Extreme care must be taken when updating channels, as malicious\n         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n         tokens where the token holder has granted the conduit approval.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to open or close the channel.\n @param channel The channel to open or close on the conduit.\n @param isOpen  A boolean indicating whether to open or close the channel."
									},
									"functionSelector": "13ad9cab",
									"id": 1202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateChannel",
									"nameLocation": "5356:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "5387:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5379:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "5412:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5404:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "5434:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "5429:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5429:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5369:77:5"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5455:0:5"
									},
									"scope": 1302,
									"src": "5347:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "5462:482:5",
										"text": " @notice Initiate conduit ownership transfer by assigning a new potential\n         owner for the given conduit. Once set, the new potential owner\n         may call `acceptOwnership` to claim ownership of the conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to initiate ownership transfer.\n @param newPotentialOwner The new potential owner of the conduit."
									},
									"functionSelector": "6d435421",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "5958:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "5984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5976:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "newPotentialOwner",
												"nameLocation": "6001:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5993:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5993:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5975:44:5"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6036:0:5"
									},
									"scope": 1302,
									"src": "5949:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "6043:253:5",
										"text": " @notice Clear the currently set potential owner, if any, from a conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to cancel ownership transfer."
									},
									"functionSelector": "7b37e561",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelOwnershipTransfer",
									"nameLocation": "6310:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "6342:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "6334:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6333:17:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6359:0:5"
									},
									"scope": 1302,
									"src": "6301:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "6366:264:5",
										"text": " @notice Accept ownership of a supplied conduit. Only accounts that the\n         current owner has set as the new potential owner may call this\n         function.\n @param conduit The conduit for which to accept ownership."
									},
									"functionSelector": "51710e45",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "6644:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "6668:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "6660:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:17:5"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:5"
									},
									"scope": 1302,
									"src": "6635:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "6692:224:5",
										"text": " @notice Retrieve the current owner of a deployed conduit.\n @param conduit The conduit for which to retrieve the associated owner.\n @return owner The owner of the supplied conduit."
									},
									"functionSelector": "14afd79e",
									"id": 1230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "6930:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "6946:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "6938:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6937:17:5"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6986:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "6978:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6977:15:5"
									},
									"scope": 1302,
									"src": "6921:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "6999:308:5",
										"text": " @notice Retrieve the conduit key for a deployed conduit via reverse\n         lookup.\n @param conduit The conduit for which to retrieve the associated conduit\n                key.\n @return conduitKey The conduit key used to deploy the supplied conduit."
									},
									"functionSelector": "93790f44",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "7321:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "7336:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "7328:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7327:17:5"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "7376:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "7368:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:20:5"
									},
									"scope": 1302,
									"src": "7312:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "7394:453:5",
										"text": " @notice Derive the conduit associated with a given conduit key and\n         determine whether that conduit exists (i.e. whether it has been\n         deployed).\n @param conduitKey The conduit key used to derive the conduit.\n @return conduit The derived address of the conduit.\n @return exists  A boolean indicating whether the derived conduit has been\n                 deployed or not."
									},
									"functionSelector": "6e9bfd9f",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConduit",
									"nameLocation": "7861:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "conduitKey",
												"nameLocation": "7880:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "7872:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:20:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "7947:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "7939:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "7961:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "7956:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7956:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7938:30:5"
									},
									"scope": 1302,
									"src": "7852:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "7975:460:5",
										"text": " @notice Retrieve the potential owner, if any, for a given conduit. The\n         current owner may set a new potential owner via\n         `transferOwnership` and that owner may then accept ownership of\n         the conduit in question via `acceptOwnership`.\n @param conduit The conduit for which to retrieve the potential owner.\n @return potentialOwner The potential owner, if any, for the conduit."
									},
									"functionSelector": "906c87cc",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPotentialOwner",
									"nameLocation": "8449:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "8475:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "8467:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8466:17:5"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "potentialOwner",
												"nameLocation": "8539:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "8531:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8531:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8530:24:5"
									},
									"scope": 1302,
									"src": "8440:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "8561:346:5",
										"text": " @notice Retrieve the status (either open or closed) of a given channel on\n         a conduit.\n @param conduit The conduit for which to retrieve the channel status.\n @param channel The channel for which to retrieve the status.\n @return isOpen The status of the channel on the given conduit."
									},
									"functionSelector": "33bc8572",
									"id": 1266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getChannelStatus",
									"nameLocation": "8921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "8946:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "8938:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "8963:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "8955:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8955:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8937:34:5"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "9024:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "9019:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9019:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9018:13:5"
									},
									"scope": 1302,
									"src": "8912:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "9038:265:5",
										"text": " @notice Retrieve the total number of open channels for a given conduit.\n @param conduit The conduit for which to retrieve the total channel count.\n @return totalChannels The total number of open channels for the conduit."
									},
									"functionSelector": "4e3f9580",
									"id": 1274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalChannels",
									"nameLocation": "9317:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "9342:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "9334:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9333:17:5"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "totalChannels",
												"nameLocation": "9406:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "9398:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9398:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9397:23:5"
									},
									"scope": 1302,
									"src": "9308:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "9427:464:5",
										"text": " @notice Retrieve an open channel at a specific index for a given conduit.\n         Note that the index of a channel can change as a result of other\n         channels being closed on the conduit.\n @param conduit      The conduit for which to retrieve the open channel.\n @param channelIndex The index of the channel in question.\n @return channel The open channel, if any, at the specified channel index."
									},
									"functionSelector": "027cc764",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getChannel",
									"nameLocation": "9905:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "9924:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9916:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "channelIndex",
												"nameLocation": "9941:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9933:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9915:39:5"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "10010:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "10002:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10002:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10001:17:5"
									},
									"scope": 1302,
									"src": "9896:123:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "10025:364:5",
										"text": " @notice Retrieve all open channels for a given conduit. Note that calling\n         this function for a conduit with many channels will revert with\n         an out-of-gas error.\n @param conduit The conduit for which to retrieve open channels.\n @return channels An array of open channels on the given conduit."
									},
									"functionSelector": "8b9e028b",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getChannels",
									"nameLocation": "10403:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "conduit",
												"nameLocation": "10423:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "10415:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10414:17:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "channels",
												"nameLocation": "10496:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "10479:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1289,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10479:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1290,
													"nodeType": "ArrayTypeName",
													"src": "10479:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10478:27:5"
									},
									"scope": 1302,
									"src": "10394:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "10512:83:5",
										"text": " @dev Retrieve the conduit creation code and runtime code hashes."
									},
									"functionSelector": "0a96ad39",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConduitCodeHashes",
									"nameLocation": "10609:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10629:2:5"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "creationCodeHash",
												"nameLocation": "10687:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "10679:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10679:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "runtimeCodeHash",
												"nameLocation": "10713:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "10705:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10678:51:5"
									},
									"scope": 1302,
									"src": "10600:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1303,
							"src": "267:10465:5",
							"usedErrors": [
								1139,
								1142,
								1149,
								1154,
								1157,
								1162,
								1167,
								1172,
								1177,
								1182
							]
						}
					],
					"src": "32:10701:5"
				},
				"id": 5
			},
			"interfaces/ConduitInterface.sol": {
				"ast": {
					"absolutePath": "interfaces/ConduitInterface.sol",
					"exportedSymbols": {
						"ConduitBatch1155Transfer": [
							1098
						],
						"ConduitInterface": [
							1376
						],
						"ConduitTransfer": [
							1085
						]
					},
					"id": 1377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1304,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "conduit/lib/ConduitStructs.sol",
							"file": "../conduit/lib/ConduitStructs.sol",
							"id": 1307,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1377,
							"sourceUnit": 1099,
							"src": "77:102:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1305,
										"name": "ConduitTransfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1085,
										"src": "90:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1306,
										"name": "ConduitBatch1155Transfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1098,
										"src": "111:24:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConduitInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1308,
								"nodeType": "StructuredDocumentation",
								"src": "181:174:6",
								"text": " @title ConduitInterface\n @author 0age\n @notice ConduitInterface contains all external function interfaces, events,\n         and errors for conduit contracts."
							},
							"fullyImplemented": false,
							"id": 1376,
							"linearizedBaseContracts": [
								1376
							],
							"name": "ConduitInterface",
							"nameLocation": "366:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "389:144:6",
										"text": " @dev Revert with an error when attempting to execute transfers using a\n      caller that does not have an open channel."
									},
									"errorSelector": "93daadf2",
									"id": 1313,
									"name": "ChannelClosed",
									"nameLocation": "544:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "566:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "558:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:17:6"
									},
									"src": "538:37:6"
								},
								{
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "581:131:6",
										"text": " @dev Revert with an error when attempting to update a channel to the\n      current status of that channel."
									},
									"errorSelector": "924e341e",
									"id": 1320,
									"name": "ChannelStatusAlreadySet",
									"nameLocation": "723:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "755:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "747:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "769:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "764:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "764:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:30:6"
									},
									"src": "717:60:6"
								},
								{
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "783:154:6",
										"text": " @dev Revert with an error when attempting to execute a transfer for an\n      item that does not have an ERC20/721/1155 item type."
									},
									"errorSelector": "7932f1fc",
									"id": 1323,
									"name": "InvalidItemType",
									"nameLocation": "948:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "963:2:6"
									},
									"src": "942:24:6"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "972:156:6",
										"text": " @dev Revert with an error when attempting to update the status of a\n      channel from a caller that is not the conduit controller."
									},
									"errorSelector": "6d5769be",
									"id": 1326,
									"name": "InvalidController",
									"nameLocation": "1139:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:6"
									},
									"src": "1133:26:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "1165:220:6",
										"text": " @dev Emit an event whenever a channel is opened or closed.\n @param channel The channel that has been updated.\n @param open    A boolean indicating whether the conduit is open or not."
									},
									"eventSelector": "ae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2",
									"id": 1333,
									"name": "ChannelUpdated",
									"nameLocation": "1396:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"indexed": true,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "1427:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1411:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"indexed": false,
												"mutability": "mutable",
												"name": "open",
												"nameLocation": "1441:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1436:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:36:6"
									},
									"src": "1390:57:6"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1453:352:6",
										"text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
									},
									"functionSelector": "4ce34aa2",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "1819:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "transfers",
												"nameLocation": "1854:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1827:36:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitTransfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1336,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1335,
															"name": "ConduitTransfer",
															"nameLocations": [
																"1827:15:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1085,
															"src": "1827:15:6"
														},
														"referencedDeclaration": 1085,
														"src": "1827:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitTransfer_$1085_storage_ptr",
															"typeString": "struct ConduitTransfer"
														}
													},
													"id": 1337,
													"nodeType": "ArrayTypeName",
													"src": "1827:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitTransfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:38:6"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "1906:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1899:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1899:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:19:6"
									},
									"scope": 1376,
									"src": "1810:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1924:353:6",
										"text": " @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n         open channel can call this function.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
									},
									"functionSelector": "8df25d92",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeBatch1155",
									"nameLocation": "2291:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "batch1155Transfers",
												"nameLocation": "2353:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2317:54:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitBatch1155Transfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1346,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1345,
															"name": "ConduitBatch1155Transfer",
															"nameLocations": [
																"2317:24:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1098,
															"src": "2317:24:6"
														},
														"referencedDeclaration": 1098,
														"src": "2317:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1098_storage_ptr",
															"typeString": "struct ConduitBatch1155Transfer"
														}
													},
													"id": 1347,
													"nodeType": "ArrayTypeName",
													"src": "2317:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitBatch1155Transfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:70:6"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "2403:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2396:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2396:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:19:6"
									},
									"scope": 1376,
									"src": "2282:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2421:444:6",
										"text": " @notice Execute a sequence of transfers, both single and batch 1155. Only\n         a caller with an open channel can call this function.\n @param standardTransfers  The ERC20/721/1155 transfers to perform.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
									},
									"functionSelector": "899e104c",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeWithBatch1155",
									"nameLocation": "2879:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "standardTransfers",
												"nameLocation": "2936:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "2909:44:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitTransfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1355,
															"name": "ConduitTransfer",
															"nameLocations": [
																"2909:15:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1085,
															"src": "2909:15:6"
														},
														"referencedDeclaration": 1085,
														"src": "2909:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitTransfer_$1085_storage_ptr",
															"typeString": "struct ConduitTransfer"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "2909:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1085_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitTransfer[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "batch1155Transfers",
												"nameLocation": "2999:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "2963:54:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitBatch1155Transfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1360,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1359,
															"name": "ConduitBatch1155Transfer",
															"nameLocations": [
																"2963:24:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1098,
															"src": "2963:24:6"
														},
														"referencedDeclaration": 1098,
														"src": "2963:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1098_storage_ptr",
															"typeString": "struct ConduitBatch1155Transfer"
														}
													},
													"id": 1361,
													"nodeType": "ArrayTypeName",
													"src": "2963:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitBatch1155Transfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:124:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "3049:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "3042:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3042:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:19:6"
									},
									"scope": 1376,
									"src": "2870:191:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "3067:222:6",
										"text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
									},
									"functionSelector": "c4e8fcb5",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateChannel",
									"nameLocation": "3303:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "channel",
												"nameLocation": "3325:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3317:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "isOpen",
												"nameLocation": "3339:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3334:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3334:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:30:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3355:0:6"
									},
									"scope": 1376,
									"src": "3294:62:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1377,
							"src": "356:3002:6",
							"usedErrors": [
								1313,
								1320,
								1323,
								1326
							]
						}
					],
					"src": "32:3327:6"
				},
				"id": 6
			},
			"interfaces/TokenTransferrerErrors.sol": {
				"ast": {
					"absolutePath": "interfaces/TokenTransferrerErrors.sol",
					"exportedSymbols": {
						"TokenTransferrerErrors": [
							1436
						]
					},
					"id": 1437,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1378,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenTransferrerErrors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1379,
								"nodeType": "StructuredDocumentation",
								"src": "58:40:7",
								"text": " @title TokenTransferrerErrors"
							},
							"fullyImplemented": true,
							"id": 1436,
							"linearizedBaseContracts": [
								1436
							],
							"name": "TokenTransferrerErrors",
							"nameLocation": "109:22:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "138:121:7",
										"text": " @dev Revert with an error when an ERC721 transfer with amount other than\n      one is attempted."
									},
									"errorSelector": "efcc00b1",
									"id": 1382,
									"name": "InvalidERC721TransferAmount",
									"nameLocation": "270:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:2:7"
									},
									"src": "264:36:7"
								},
								{
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "306:129:7",
										"text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has an amount of zero."
									},
									"errorSelector": "91b3e514",
									"id": 1385,
									"name": "MissingItemAmount",
									"nameLocation": "446:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:2:7"
									},
									"src": "440:26:7"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "472:427:7",
										"text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has unused parameters. This includes both the token and the\n      identifier parameters for native transfers as well as the identifier\n      parameter for ERC20 transfers. Note that the conduit does not\n      perform this check, leaving it up to the calling channel to enforce\n      when desired."
									},
									"errorSelector": "6ab37ce7",
									"id": 1388,
									"name": "UnusedItemParameters",
									"nameLocation": "910:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:2:7"
									},
									"src": "904:29:7"
								},
								{
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "939:455:7",
										"text": " @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n      transfer reverts.\n @param token      The token for which the transfer was attempted.\n @param from       The source of the attempted transfer.\n @param to         The recipient of the attempted transfer.\n @param identifier The identifier for the attempted transfer.\n @param amount     The amount for the attempted transfer."
									},
									"errorSelector": "f486bc87",
									"id": 1401,
									"name": "TokenTransferGenericFailure",
									"nameLocation": "1405:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1442:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1473:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1465:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1495:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1487:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "1515:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1507:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1543:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1535:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:123:7"
									},
									"src": "1399:157:7"
								},
								{
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "1562:437:7",
										"text": " @dev Revert with an error when a batch ERC1155 token transfer reverts.\n @param token       The token for which the transfer was attempted.\n @param from        The source of the attempted transfer.\n @param to          The recipient of the attempted transfer.\n @param identifiers The identifiers for the attempted transfer.\n @param amounts     The amounts for the attempted transfer."
									},
									"errorSelector": "afc445e2",
									"id": 1416,
									"name": "ERC1155BatchTransferGenericFailure",
									"nameLocation": "2010:34:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2062:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2054:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2085:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2077:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2107:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2099:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "identifiers",
												"nameLocation": "2129:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2119:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1410,
													"nodeType": "ArrayTypeName",
													"src": "2119:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2160:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2150:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2150:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1413,
													"nodeType": "ArrayTypeName",
													"src": "2150:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:129:7"
									},
									"src": "2004:170:7"
								},
								{
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "2180:406:7",
										"text": " @dev Revert with an error when an ERC20 token transfer returns a falsey\n      value.\n @param token      The token for which the ERC20 transfer was attempted.\n @param from       The source of the attempted ERC20 transfer.\n @param to         The recipient of the attempted ERC20 transfer.\n @param amount     The amount for the attempted ERC20 transfer."
									},
									"errorSelector": "98891923",
									"id": 1427,
									"name": "BadReturnValueFromERC20OnTransfer",
									"nameLocation": "2597:33:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2648:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2640:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2671:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2663:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2693:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2705:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2630:95:7"
									},
									"src": "2591:135:7"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2732:215:7",
										"text": " @dev Revert with an error when an account being called as an assumed\n      contract does not have code and returns no data.\n @param account The account that should contain code."
									},
									"errorSelector": "5f15d672",
									"id": 1432,
									"name": "NoContract",
									"nameLocation": "2958:10:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2977:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "2969:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2968:17:7"
									},
									"src": "2952:34:7"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "2992:224:7",
										"text": " @dev Revert with an error when attempting to execute an 1155 batch\n      transfer using calldata not produced by default ABI encoding or with\n      different lengths for ids and amounts arrays."
									},
									"errorSelector": "eba2084c",
									"id": 1435,
									"name": "Invalid1155BatchTransferEncoding",
									"nameLocation": "3227:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:2:7"
									},
									"src": "3221:41:7"
								}
							],
							"scope": 1437,
							"src": "99:3165:7",
							"usedErrors": [
								1382,
								1385,
								1388,
								1401,
								1416,
								1427,
								1432,
								1435
							]
						}
					],
					"src": "32:3233:7"
				},
				"id": 7
			},
			"lib/TokenTransferrer.sol": {
				"ast": {
					"absolutePath": "lib/TokenTransferrer.sol",
					"exportedSymbols": {
						"AlmostOneWord": [
							1506
						],
						"BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
							1671
						],
						"BadReturnValueFromERC20OnTransfer_error_from_ptr": [
							1665
						],
						"BadReturnValueFromERC20OnTransfer_error_length": [
							1674
						],
						"BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
							1659
						],
						"BadReturnValueFromERC20OnTransfer_error_signature": [
							1656
						],
						"BadReturnValueFromERC20OnTransfer_error_to_ptr": [
							1668
						],
						"BadReturnValueFromERC20OnTransfer_error_token_ptr": [
							1662
						],
						"BatchTransfer1155Params_amounts_head_ptr": [
							1692
						],
						"BatchTransfer1155Params_amounts_length_baseOffset": [
							1710
						],
						"BatchTransfer1155Params_calldata_baseSize": [
							1701
						],
						"BatchTransfer1155Params_data_head_ptr": [
							1695
						],
						"BatchTransfer1155Params_data_length_baseOffset": [
							1713
						],
						"BatchTransfer1155Params_data_length_basePtr": [
							1698
						],
						"BatchTransfer1155Params_ids_head_ptr": [
							1689
						],
						"BatchTransfer1155Params_ids_length_offset": [
							1707
						],
						"BatchTransfer1155Params_ids_length_ptr": [
							1704
						],
						"BatchTransfer1155Params_ptr": [
							1686
						],
						"ConduitBatch1155Transfer": [
							1098
						],
						"ConduitBatch1155Transfer_amounts_head_offset": [
							1725
						],
						"ConduitBatch1155Transfer_amounts_length_baseOffset": [
							1731
						],
						"ConduitBatch1155Transfer_calldata_baseSize": [
							1734
						],
						"ConduitBatch1155Transfer_from_offset": [
							1719
						],
						"ConduitBatch1155Transfer_ids_head_offset": [
							1722
						],
						"ConduitBatch1155Transfer_ids_length_offset": [
							1728
						],
						"ConduitBatch1155Transfer_usable_head_size": [
							1716
						],
						"ConduitBatchTransfer_amounts_head_offset": [
							1737
						],
						"CostPerWord": [
							1680
						],
						"DefaultFreeMemoryPointer": [
							1524
						],
						"ERC1155BatchTransferGenericFailure_error_signature": [
							1751
						],
						"ERC1155BatchTransferGenericFailure_ids_offset": [
							1757
						],
						"ERC1155BatchTransferGenericFailure_token_ptr": [
							1754
						],
						"ERC1155_safeBatchTransferFrom_selector": [
							1596
						],
						"ERC1155_safeBatchTransferFrom_signature": [
							1587
						],
						"ERC1155_safeTransferFrom_amount_ptr": [
							1571
						],
						"ERC1155_safeTransferFrom_data_length_offset": [
							1583
						],
						"ERC1155_safeTransferFrom_data_length_ptr": [
							1577
						],
						"ERC1155_safeTransferFrom_data_offset_ptr": [
							1574
						],
						"ERC1155_safeTransferFrom_from_ptr": [
							1562
						],
						"ERC1155_safeTransferFrom_id_ptr": [
							1568
						],
						"ERC1155_safeTransferFrom_length": [
							1580
						],
						"ERC1155_safeTransferFrom_sig_ptr": [
							1559
						],
						"ERC1155_safeTransferFrom_signature": [
							1556
						],
						"ERC1155_safeTransferFrom_to_ptr": [
							1565
						],
						"ERC20_transferFrom_amount_ptr": [
							1549
						],
						"ERC20_transferFrom_from_ptr": [
							1543
						],
						"ERC20_transferFrom_length": [
							1552
						],
						"ERC20_transferFrom_sig_ptr": [
							1540
						],
						"ERC20_transferFrom_signature": [
							1537
						],
						"ERC20_transferFrom_to_ptr": [
							1546
						],
						"ERC721_transferFrom_from_ptr": [
							1605
						],
						"ERC721_transferFrom_id_ptr": [
							1611
						],
						"ERC721_transferFrom_length": [
							1614
						],
						"ERC721_transferFrom_sig_ptr": [
							1602
						],
						"ERC721_transferFrom_signature": [
							1599
						],
						"ERC721_transferFrom_to_ptr": [
							1608
						],
						"ExtraGasBuffer": [
							1677
						],
						"FreeMemoryPointerSlot": [
							1518
						],
						"Invalid1155BatchTransferEncoding_length": [
							1743
						],
						"Invalid1155BatchTransferEncoding_ptr": [
							1740
						],
						"Invalid1155BatchTransferEncoding_selector": [
							1747
						],
						"MemoryExpansionCoefficient": [
							1683
						],
						"NoContract_error_length": [
							1627
						],
						"NoContract_error_sig_ptr": [
							1621
						],
						"NoContract_error_signature": [
							1618
						],
						"NoContract_error_token_ptr": [
							1624
						],
						"OneWord": [
							1509
						],
						"Slot0x80": [
							1527
						],
						"Slot0xA0": [
							1530
						],
						"Slot0xC0": [
							1533
						],
						"ThreeWords": [
							1515
						],
						"TokenTransferGenericFailure_error_amount_ptr": [
							1649
						],
						"TokenTransferGenericFailure_error_from_ptr": [
							1640
						],
						"TokenTransferGenericFailure_error_id_ptr": [
							1646
						],
						"TokenTransferGenericFailure_error_length": [
							1652
						],
						"TokenTransferGenericFailure_error_sig_ptr": [
							1634
						],
						"TokenTransferGenericFailure_error_signature": [
							1631
						],
						"TokenTransferGenericFailure_error_to_ptr": [
							1643
						],
						"TokenTransferGenericFailure_error_token_ptr": [
							1637
						],
						"TokenTransferrer": [
							1501
						],
						"TokenTransferrerErrors": [
							1436
						],
						"TwoWords": [
							1512
						],
						"ZeroSlot": [
							1521
						]
					},
					"id": 1502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1438,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "lib/TokenTransferrerConstants.sol",
							"file": "./TokenTransferrerConstants.sol",
							"id": 1439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1502,
							"sourceUnit": 1758,
							"src": "58:41:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/TokenTransferrerErrors.sol",
							"file": "../interfaces/TokenTransferrerErrors.sol",
							"id": 1441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1502,
							"sourceUnit": 1437,
							"src": "120:86:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1440,
										"name": "TokenTransferrerErrors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1436,
										"src": "133:22:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "conduit/lib/ConduitStructs.sol",
							"file": "../conduit/lib/ConduitStructs.sol",
							"id": 1443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1502,
							"sourceUnit": 1099,
							"src": "208:77:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1442,
										"name": "ConduitBatch1155Transfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1098,
										"src": "217:24:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1445,
										"name": "TokenTransferrerErrors",
										"nameLocations": [
											"878:22:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1436,
										"src": "878:22:8"
									},
									"id": 1446,
									"nodeType": "InheritanceSpecifier",
									"src": "878:22:8"
								}
							],
							"canonicalName": "TokenTransferrer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1444,
								"nodeType": "StructuredDocumentation",
								"src": "287:561:8",
								"text": " @title TokenTransferrer\n @author 0age\n @custom:coauthor d1ll0n\n @custom:coauthor transmissions11\n @notice TokenTransferrer is a library for performing optimized ERC20, ERC721,\n         ERC1155, and batch ERC1155 transfers, used by both Seaport as well as\n         by conduits deployed by the ConduitController. Use great caution when\n         considering these functions for use in other codebases, as there are\n         significant side effects and edge cases that need to be thoroughly\n         understood and carefully addressed."
							},
							"fullyImplemented": true,
							"id": 1501,
							"linearizedBaseContracts": [
								1501,
								1436
							],
							"name": "TokenTransferrer",
							"nameLocation": "858:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "1480:9480:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1573:9381:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1747:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "1771:21:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1765:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:28:8"
															},
															"variables": [
																{
																	"name": "memPointer",
																	"nodeType": "YulTypedName",
																	"src": "1751:10:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC20_transferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1891:26:8"
																	},
																	{
																		"name": "ERC20_transferFrom_signature",
																		"nodeType": "YulIdentifier",
																		"src": "1919:28:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1884:64:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC20_transferFrom_from_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1968:27:8"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "1997:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1961:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC20_transferFrom_to_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2022:25:8"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "2049:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2015:37:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC20_transferFrom_amount_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2072:29:8"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "2103:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2065:45:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2586:232:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:5:8"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "2649:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2672:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ERC20_transferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2691:26:8"
																	},
																	{
																		"name": "ERC20_transferFrom_length",
																		"nodeType": "YulIdentifier",
																		"src": "2735:25:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "OneWord",
																		"nodeType": "YulIdentifier",
																		"src": "2797:7:8"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "2604:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:214:8"
															},
															"variables": [
																{
																	"name": "callStatus",
																	"nodeType": "YulTypedName",
																	"src": "2590:10:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2912:407:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3180:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3174:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3174:8:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3184:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "3171:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3171:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "3191:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3191:16:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3209:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "3188:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3188:24:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3167:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3167:46:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "3242:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3242:16:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3235:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3235:24:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3143:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3143:134:8"
																	},
																	{
																		"name": "callStatus",
																		"nodeType": "YulIdentifier",
																		"src": "3295:10:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:392:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "2916:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3701:7052:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4011:6522:8",
																			"statements": [
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "4099:6113:8",
																						"statements": [
																							{
																								"body": {
																									"nodeType": "YulBlock",
																									"src": "4201:4737:8",
																									"statements": [
																										{
																											"body": {
																												"nodeType": "YulBlock",
																												"src": "4396:3302:8",
																												"statements": [
																													{
																														"nodeType": "YulVariableDeclaration",
																														"src": "4808:179:8",
																														"value": {
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"arguments": [],
																																			"functionName": {
																																				"name": "returndatasize",
																																				"nodeType": "YulIdentifier",
																																				"src": "4876:14:8"
																																			},
																																			"nodeType": "YulFunctionCall",
																																			"src": "4876:16:8"
																																		},
																																		{
																																			"name": "AlmostOneWord",
																																			"nodeType": "YulIdentifier",
																																			"src": "4894:13:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "add",
																																		"nodeType": "YulIdentifier",
																																		"src": "4872:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "4872:36:8"
																																},
																																{
																																	"name": "OneWord",
																																	"nodeType": "YulIdentifier",
																																	"src": "4946:7:8"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nodeType": "YulIdentifier",
																																"src": "4831:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "4831:156:8"
																														},
																														"variables": [
																															{
																																"name": "returnDataWords",
																																"nodeType": "YulTypedName",
																																"src": "4812:15:8",
																																"type": ""
																															}
																														]
																													},
																													{
																														"nodeType": "YulVariableDeclaration",
																														"src": "5318:42:8",
																														"value": {
																															"arguments": [
																																{
																																	"name": "memPointer",
																																	"nodeType": "YulIdentifier",
																																	"src": "5340:10:8"
																																},
																																{
																																	"name": "OneWord",
																																	"nodeType": "YulIdentifier",
																																	"src": "5352:7:8"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nodeType": "YulIdentifier",
																																"src": "5336:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "5336:24:8"
																														},
																														"variables": [
																															{
																																"name": "msizeWords",
																																"nodeType": "YulTypedName",
																																"src": "5322:10:8",
																																"type": ""
																															}
																														]
																													},
																													{
																														"nodeType": "YulVariableDeclaration",
																														"src": "5475:45:8",
																														"value": {
																															"arguments": [
																																{
																																	"name": "CostPerWord",
																																	"nodeType": "YulIdentifier",
																																	"src": "5491:11:8"
																																},
																																{
																																	"name": "returnDataWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "5504:15:8"
																																}
																															],
																															"functionName": {
																																"name": "mul",
																																"nodeType": "YulIdentifier",
																																"src": "5487:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "5487:33:8"
																														},
																														"variables": [
																															{
																																"name": "cost",
																																"nodeType": "YulTypedName",
																																"src": "5479:4:8",
																																"type": ""
																															}
																														]
																													},
																													{
																														"body": {
																															"nodeType": "YulBlock",
																															"src": "5669:1258:8",
																															"statements": [
																																{
																																	"nodeType": "YulAssignment",
																																	"src": "5707:1186:8",
																																	"value": {
																																		"arguments": [
																																			{
																																				"name": "cost",
																																				"nodeType": "YulIdentifier",
																																				"src": "5760:4:8"
																																			},
																																			{
																																				"arguments": [
																																					{
																																						"arguments": [
																																							{
																																								"arguments": [
																																									{
																																										"name": "returnDataWords",
																																										"nodeType": "YulIdentifier",
																																										"src": "5965:15:8"
																																									},
																																									{
																																										"name": "msizeWords",
																																										"nodeType": "YulIdentifier",
																																										"src": "6034:10:8"
																																									}
																																								],
																																								"functionName": {
																																									"name": "sub",
																																									"nodeType": "YulIdentifier",
																																									"src": "5908:3:8"
																																								},
																																								"nodeType": "YulFunctionCall",
																																								"src": "5908:186:8"
																																							},
																																							{
																																								"name": "CostPerWord",
																																								"nodeType": "YulIdentifier",
																																								"src": "6144:11:8"
																																							}
																																						],
																																						"functionName": {
																																							"name": "mul",
																																							"nodeType": "YulIdentifier",
																																							"src": "5855:3:8"
																																						},
																																						"nodeType": "YulFunctionCall",
																																						"src": "5855:346:8"
																																					},
																																					{
																																						"arguments": [
																																							{
																																								"arguments": [
																																									{
																																										"arguments": [
																																											{
																																												"name": "returnDataWords",
																																												"nodeType": "YulIdentifier",
																																												"src": "6418:15:8"
																																											},
																																											{
																																												"name": "returnDataWords",
																																												"nodeType": "YulIdentifier",
																																												"src": "6491:15:8"
																																											}
																																										],
																																										"functionName": {
																																											"name": "mul",
																																											"nodeType": "YulIdentifier",
																																											"src": "6357:3:8"
																																										},
																																										"nodeType": "YulFunctionCall",
																																										"src": "6357:203:8"
																																									},
																																									{
																																										"arguments": [
																																											{
																																												"name": "msizeWords",
																																												"nodeType": "YulIdentifier",
																																												"src": "6618:10:8"
																																											},
																																											{
																																												"name": "msizeWords",
																																												"nodeType": "YulIdentifier",
																																												"src": "6630:10:8"
																																											}
																																										],
																																										"functionName": {
																																											"name": "mul",
																																											"nodeType": "YulIdentifier",
																																											"src": "6614:3:8"
																																										},
																																										"nodeType": "YulFunctionCall",
																																										"src": "6614:27:8"
																																									}
																																								],
																																								"functionName": {
																																									"name": "sub",
																																									"nodeType": "YulIdentifier",
																																									"src": "6300:3:8"
																																								},
																																								"nodeType": "YulFunctionCall",
																																								"src": "6300:391:8"
																																							},
																																							{
																																								"name": "MemoryExpansionCoefficient",
																																								"nodeType": "YulIdentifier",
																																								"src": "6741:26:8"
																																							}
																																						],
																																						"functionName": {
																																							"name": "div",
																																							"nodeType": "YulIdentifier",
																																							"src": "6247:3:8"
																																						},
																																						"nodeType": "YulFunctionCall",
																																						"src": "6247:566:8"
																																					}
																																				],
																																				"functionName": {
																																					"name": "add",
																																					"nodeType": "YulIdentifier",
																																					"src": "5806:3:8"
																																				},
																																				"nodeType": "YulFunctionCall",
																																				"src": "5806:1049:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "add",
																																			"nodeType": "YulIdentifier",
																																			"src": "5715:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "5715:1178:8"
																																	},
																																	"variableNames": [
																																		{
																																			"name": "cost",
																																			"nodeType": "YulIdentifier",
																																			"src": "5707:4:8"
																																		}
																																	]
																																}
																															]
																														},
																														"condition": {
																															"arguments": [
																																{
																																	"name": "returnDataWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "5640:15:8"
																																},
																																{
																																	"name": "msizeWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "5657:10:8"
																																}
																															],
																															"functionName": {
																																"name": "gt",
																																"nodeType": "YulIdentifier",
																																"src": "5637:2:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "5637:31:8"
																														},
																														"nodeType": "YulIf",
																														"src": "5634:1293:8"
																													},
																													{
																														"body": {
																															"nodeType": "YulBlock",
																															"src": "7226:442:8",
																															"statements": [
																																{
																																	"expression": {
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7411:1:8",
																																				"type": "",
																																				"value": "0"
																																			},
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7414:1:8",
																																				"type": "",
																																				"value": "0"
																																			},
																																			{
																																				"arguments": [],
																																				"functionName": {
																																					"name": "returndatasize",
																																					"nodeType": "YulIdentifier",
																																					"src": "7417:14:8"
																																				},
																																				"nodeType": "YulFunctionCall",
																																				"src": "7417:16:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "returndatacopy",
																																			"nodeType": "YulIdentifier",
																																			"src": "7396:14:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "7396:38:8"
																																	},
																																	"nodeType": "YulExpressionStatement",
																																	"src": "7396:38:8"
																																},
																																{
																																	"expression": {
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "7614:1:8",
																																				"type": "",
																																				"value": "0"
																																			},
																																			{
																																				"arguments": [],
																																				"functionName": {
																																					"name": "returndatasize",
																																					"nodeType": "YulIdentifier",
																																					"src": "7617:14:8"
																																				},
																																				"nodeType": "YulFunctionCall",
																																				"src": "7617:16:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "revert",
																																			"nodeType": "YulIdentifier",
																																			"src": "7607:6:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "7607:27:8"
																																	},
																																	"nodeType": "YulExpressionStatement",
																																	"src": "7607:27:8"
																																}
																															]
																														},
																														"condition": {
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "cost",
																																			"nodeType": "YulIdentifier",
																																			"src": "7196:4:8"
																																		},
																																		{
																																			"name": "ExtraGasBuffer",
																																			"nodeType": "YulIdentifier",
																																			"src": "7202:14:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "add",
																																		"nodeType": "YulIdentifier",
																																		"src": "7192:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "7192:25:8"
																																},
																																{
																																	"arguments": [],
																																	"functionName": {
																																		"name": "gas",
																																		"nodeType": "YulIdentifier",
																																		"src": "7219:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "7219:5:8"
																																}
																															],
																															"functionName": {
																																"name": "lt",
																																"nodeType": "YulIdentifier",
																																"src": "7189:2:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "7189:36:8"
																														},
																														"nodeType": "YulIf",
																														"src": "7186:482:8"
																													}
																												]
																											},
																											"condition": {
																												"arguments": [],
																												"functionName": {
																													"name": "returndatasize",
																													"nodeType": "YulIdentifier",
																													"src": "4379:14:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4379:16:8"
																											},
																											"nodeType": "YulIf",
																											"src": "4376:3322:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_sig_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "7846:41:8"
																													},
																													{
																														"name": "TokenTransferGenericFailure_error_signature",
																														"nodeType": "YulIdentifier",
																														"src": "7921:43:8"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "7806:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7806:188:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "7806:188:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_token_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8063:43:8"
																													},
																													{
																														"name": "token",
																														"nodeType": "YulIdentifier",
																														"src": "8140:5:8"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "8023:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8023:152:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8023:152:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_from_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8244:42:8"
																													},
																													{
																														"name": "from",
																														"nodeType": "YulIdentifier",
																														"src": "8320:4:8"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "8204:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8204:150:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8204:150:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_to_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8390:40:8"
																													},
																													{
																														"name": "to",
																														"nodeType": "YulIdentifier",
																														"src": "8432:2:8"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "8383:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8383:52:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8383:52:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_id_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8471:40:8"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8513:1:8",
																														"type": "",
																														"value": "0"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "8464:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8464:51:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8464:51:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_amount_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8584:44:8"
																													},
																													{
																														"name": "amount",
																														"nodeType": "YulIdentifier",
																														"src": "8662:6:8"
																													}
																												],
																												"functionName": {
																													"name": "mstore",
																													"nodeType": "YulIdentifier",
																													"src": "8544:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8544:154:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8544:154:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"name": "TokenTransferGenericFailure_error_sig_ptr",
																														"nodeType": "YulIdentifier",
																														"src": "8767:41:8"
																													},
																													{
																														"name": "TokenTransferGenericFailure_error_length",
																														"nodeType": "YulIdentifier",
																														"src": "8842:40:8"
																													}
																												],
																												"functionName": {
																													"name": "revert",
																													"nodeType": "YulIdentifier",
																													"src": "8727:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8727:185:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "8727:185:8"
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"name": "callStatus",
																											"nodeType": "YulIdentifier",
																											"src": "4189:10:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "4182:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4182:18:8"
																								},
																								"nodeType": "YulIf",
																								"src": "4179:4759:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "9150:47:8"
																										},
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_signature",
																											"nodeType": "YulIdentifier",
																											"src": "9227:49:8"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "9114:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9114:188:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "9114:188:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "9363:49:8"
																										},
																										{
																											"name": "token",
																											"nodeType": "YulIdentifier",
																											"src": "9442:5:8"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "9327:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9327:146:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "9327:146:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "9534:48:8"
																										},
																										{
																											"name": "from",
																											"nodeType": "YulIdentifier",
																											"src": "9612:4:8"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "9498:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9498:144:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "9498:144:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "9703:46:8"
																										},
																										{
																											"name": "to",
																											"nodeType": "YulIdentifier",
																											"src": "9779:2:8"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "9667:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9667:140:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "9667:140:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "9868:50:8"
																										},
																										{
																											"name": "amount",
																											"nodeType": "YulIdentifier",
																											"src": "9948:6:8"
																										}
																									],
																									"functionName": {
																										"name": "mstore",
																										"nodeType": "YulIdentifier",
																										"src": "9832:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "9832:148:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "9832:148:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
																											"nodeType": "YulIdentifier",
																											"src": "10041:47:8"
																										},
																										{
																											"name": "BadReturnValueFromERC20OnTransfer_error_length",
																											"nodeType": "YulIdentifier",
																											"src": "10118:46:8"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nodeType": "YulIdentifier",
																										"src": "10005:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "10005:185:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "10005:185:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "success",
																								"nodeType": "YulIdentifier",
																								"src": "4090:7:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4083:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4083:15:8"
																					},
																					"nodeType": "YulIf",
																					"src": "4080:6132:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_sig_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "10322:24:8"
																							},
																							{
																								"name": "NoContract_error_signature",
																								"nodeType": "YulIdentifier",
																								"src": "10348:26:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "10315:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10315:60:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10315:60:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_token_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "10403:26:8"
																							},
																							{
																								"name": "token",
																								"nodeType": "YulIdentifier",
																								"src": "10431:5:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "10396:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10396:41:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10396:41:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_sig_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "10465:24:8"
																							},
																							{
																								"name": "NoContract_error_length",
																								"nodeType": "YulIdentifier",
																								"src": "10491:23:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "10458:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10458:57:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10458:57:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "token",
																													"nodeType": "YulIdentifier",
																													"src": "3991:5:8"
																												}
																											],
																											"functionName": {
																												"name": "extcodesize",
																												"nodeType": "YulIdentifier",
																												"src": "3979:11:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "3979:18:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "3972:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3972:26:8"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "3965:6:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3965:34:8"
																						},
																						{
																							"name": "success",
																							"nodeType": "YulIdentifier",
																							"src": "4001:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3961:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3961:48:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "3954:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3954:56:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3951:6582:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "success",
																				"nodeType": "YulIdentifier",
																				"src": "3657:7:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "3680:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3680:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3673:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3673:24:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3666:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3666:32:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3653:46:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:54:8"
															},
															"nodeType": "YulIf",
															"src": "3643:7110:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "10831:21:8"
																	},
																	{
																		"name": "memPointer",
																		"nodeType": "YulIdentifier",
																		"src": "10854:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10824:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10824:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10824:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ZeroSlot",
																		"nodeType": "YulIdentifier",
																		"src": "10932:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10942:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10925:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10925:19:8"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "4894:13:8",
														"valueSize": 1
													},
													{
														"declaration": 1671,
														"isOffset": false,
														"isSlot": false,
														"src": "9868:50:8",
														"valueSize": 1
													},
													{
														"declaration": 1665,
														"isOffset": false,
														"isSlot": false,
														"src": "9534:48:8",
														"valueSize": 1
													},
													{
														"declaration": 1674,
														"isOffset": false,
														"isSlot": false,
														"src": "10118:46:8",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "10041:47:8",
														"valueSize": 1
													},
													{
														"declaration": 1659,
														"isOffset": false,
														"isSlot": false,
														"src": "9150:47:8",
														"valueSize": 1
													},
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": false,
														"src": "9227:49:8",
														"valueSize": 1
													},
													{
														"declaration": 1668,
														"isOffset": false,
														"isSlot": false,
														"src": "9703:46:8",
														"valueSize": 1
													},
													{
														"declaration": 1662,
														"isOffset": false,
														"isSlot": false,
														"src": "9363:49:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "5491:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "6144:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1549,
														"isOffset": false,
														"isSlot": false,
														"src": "2072:29:8",
														"valueSize": 1
													},
													{
														"declaration": 1543,
														"isOffset": false,
														"isSlot": false,
														"src": "1968:27:8",
														"valueSize": 1
													},
													{
														"declaration": 1552,
														"isOffset": false,
														"isSlot": false,
														"src": "2735:25:8",
														"valueSize": 1
													},
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": false,
														"src": "1891:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1540,
														"isOffset": false,
														"isSlot": false,
														"src": "2691:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1537,
														"isOffset": false,
														"isSlot": false,
														"src": "1919:28:8",
														"valueSize": 1
													},
													{
														"declaration": 1546,
														"isOffset": false,
														"isSlot": false,
														"src": "2022:25:8",
														"valueSize": 1
													},
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "7202:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "10831:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "1771:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": false,
														"src": "6741:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "10491:23:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "10322:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "10465:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "10348:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1624,
														"isOffset": false,
														"isSlot": false,
														"src": "10403:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "2797:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "4946:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "5352:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "8584:44:8",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "8244:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1646,
														"isOffset": false,
														"isSlot": false,
														"src": "8471:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": false,
														"src": "8842:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "7846:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "8767:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": false,
														"src": "7921:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "8390:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1637,
														"isOffset": false,
														"isSlot": false,
														"src": "8063:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1521,
														"isOffset": false,
														"isSlot": false,
														"src": "10932:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "2103:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "8662:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "9948:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "1997:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "8320:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "9612:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1453,
														"isOffset": false,
														"isSlot": false,
														"src": "2049:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1453,
														"isOffset": false,
														"isSlot": false,
														"src": "8432:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1453,
														"isOffset": false,
														"isSlot": false,
														"src": "9779:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "10431:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "2649:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "3991:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "8140:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": false,
														"src": "9442:5:8",
														"valueSize": 1
													}
												],
												"id": 1458,
												"nodeType": "InlineAssembly",
												"src": "1564:9390:8"
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "907:433:8",
										"text": " @dev Internal function to transfer ERC20 tokens from a given originator\n      to a given recipient. Sufficient approvals must be set on the\n      contract performing the transfer.\n @param token      The ERC20 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param amount     The amount to transfer."
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performERC20Transfer",
									"nameLocation": "1354:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1385:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1416:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1408:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1438:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1430:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1458:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1450:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:95:8"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1480:0:8"
									},
									"scope": 1501,
									"src": "1345:9615:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "11704:4774:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11798:4674:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11891:224:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "11916:24:8"
																				},
																				{
																					"name": "NoContract_error_signature",
																					"nodeType": "YulIdentifier",
																					"src": "11942:26:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11909:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11909:60:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11909:60:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_token_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "11993:26:8"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "12021:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11986:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11986:41:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11986:41:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "12051:24:8"
																				},
																				{
																					"name": "NoContract_error_length",
																					"nodeType": "YulIdentifier",
																					"src": "12077:23:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12044:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12044:57:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12044:57:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "11883:5:8"
																			}
																		],
																		"functionName": {
																			"name": "extcodesize",
																			"nodeType": "YulIdentifier",
																			"src": "11871:11:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11871:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11864:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11864:26:8"
															},
															"nodeType": "YulIf",
															"src": "11861:254:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12289:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "12313:21:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12307:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12307:28:8"
															},
															"variables": [
																{
																	"name": "memPointer",
																	"nodeType": "YulTypedName",
																	"src": "12293:10:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC721_transferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12430:27:8"
																	},
																	{
																		"name": "ERC721_transferFrom_signature",
																		"nodeType": "YulIdentifier",
																		"src": "12459:29:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:66:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12423:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC721_transferFrom_from_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12509:28:8"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "12539:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12502:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12502:42:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC721_transferFrom_to_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12564:26:8"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "12592:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12557:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12557:38:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC721_transferFrom_id_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12615:26:8"
																	},
																	{
																		"name": "identifier",
																		"nodeType": "YulIdentifier",
																		"src": "12643:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12608:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12608:46:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12723:225:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "12760:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12760:5:8"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "12783:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12806:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ERC721_transferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "12825:27:8"
																	},
																	{
																		"name": "ERC721_transferFrom_length",
																		"nodeType": "YulIdentifier",
																		"src": "12870:26:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12914:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12933:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "12738:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12738:210:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "12727:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13022:3249:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13181:2308:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13492:143:8",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "returndatasize",
																											"nodeType": "YulIdentifier",
																											"src": "13548:14:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "13548:16:8"
																									},
																									{
																										"name": "AlmostOneWord",
																										"nodeType": "YulIdentifier",
																										"src": "13566:13:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13544:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13544:36:8"
																							},
																							{
																								"name": "OneWord",
																								"nodeType": "YulIdentifier",
																								"src": "13606:7:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13515:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13515:120:8"
																					},
																					"variables": [
																						{
																							"name": "returnDataWords",
																							"nodeType": "YulTypedName",
																							"src": "13496:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13883:42:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPointer",
																								"nodeType": "YulIdentifier",
																								"src": "13905:10:8"
																							},
																							{
																								"name": "OneWord",
																								"nodeType": "YulIdentifier",
																								"src": "13917:7:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13901:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13901:24:8"
																					},
																					"variables": [
																						{
																							"name": "msizeWords",
																							"nodeType": "YulTypedName",
																							"src": "13887:10:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "14016:45:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "CostPerWord",
																								"nodeType": "YulIdentifier",
																								"src": "14032:11:8"
																							},
																							{
																								"name": "returnDataWords",
																								"nodeType": "YulIdentifier",
																								"src": "14045:15:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "14028:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14028:33:8"
																					},
																					"variables": [
																						{
																							"name": "cost",
																							"nodeType": "YulTypedName",
																							"src": "14020:4:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "14186:734:8",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "14212:686:8",
																								"value": {
																									"arguments": [
																										{
																											"name": "cost",
																											"nodeType": "YulIdentifier",
																											"src": "14253:4:8"
																										},
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "returnDataWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "14369:15:8"
																																},
																																{
																																	"name": "msizeWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "14386:10:8"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nodeType": "YulIdentifier",
																																"src": "14365:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "14365:32:8"
																														},
																														{
																															"name": "CostPerWord",
																															"nodeType": "YulIdentifier",
																															"src": "14435:11:8"
																														}
																													],
																													"functionName": {
																														"name": "mul",
																														"nodeType": "YulIdentifier",
																														"src": "14324:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14324:156:8"
																												},
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "returnDataWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "14604:15:8"
																																		},
																																		{
																																			"name": "returnDataWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "14621:15:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "mul",
																																		"nodeType": "YulIdentifier",
																																		"src": "14600:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "14600:37:8"
																																},
																																{
																																	"arguments": [
																																		{
																																			"name": "msizeWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "14683:10:8"
																																		},
																																		{
																																			"name": "msizeWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "14695:10:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "mul",
																																		"nodeType": "YulIdentifier",
																																		"src": "14679:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "14679:27:8"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nodeType": "YulIdentifier",
																																"src": "14555:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "14555:189:8"
																														},
																														{
																															"name": "MemoryExpansionCoefficient",
																															"nodeType": "YulIdentifier",
																															"src": "14782:26:8"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nodeType": "YulIdentifier",
																														"src": "14514:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14514:328:8"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "14287:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14287:585:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "14220:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14220:678:8"
																								},
																								"variableNames": [
																									{
																										"name": "cost",
																										"nodeType": "YulIdentifier",
																										"src": "14212:4:8"
																									}
																								]
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "returnDataWords",
																								"nodeType": "YulIdentifier",
																								"src": "14157:15:8"
																							},
																							{
																								"name": "msizeWords",
																								"nodeType": "YulIdentifier",
																								"src": "14174:10:8"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "14154:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14154:31:8"
																					},
																					"nodeType": "YulIf",
																					"src": "14151:769:8"
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "15171:300:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15293:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15296:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "15299:14:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15299:16:8"
																										}
																									],
																									"functionName": {
																										"name": "returndatacopy",
																										"nodeType": "YulIdentifier",
																										"src": "15278:14:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15278:38:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "15278:38:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "15429:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "15432:14:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15432:16:8"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nodeType": "YulIdentifier",
																										"src": "15422:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "15422:27:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "15422:27:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "cost",
																										"nodeType": "YulIdentifier",
																										"src": "15141:4:8"
																									},
																									{
																										"name": "ExtraGasBuffer",
																										"nodeType": "YulIdentifier",
																										"src": "15147:14:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15137:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15137:25:8"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "gas",
																									"nodeType": "YulIdentifier",
																									"src": "15164:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15164:5:8"
																							}
																						],
																						"functionName": {
																							"name": "lt",
																							"nodeType": "YulIdentifier",
																							"src": "15134:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15134:36:8"
																					},
																					"nodeType": "YulIf",
																					"src": "15131:340:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [],
																			"functionName": {
																				"name": "returndatasize",
																				"nodeType": "YulIdentifier",
																				"src": "13164:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13164:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "13161:2328:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "15601:41:8"
																				},
																				{
																					"name": "TokenTransferGenericFailure_error_signature",
																					"nodeType": "YulIdentifier",
																					"src": "15664:43:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15573:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15573:152:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15573:152:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_token_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "15749:43:8"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "15794:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15742:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15742:58:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15742:58:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_from_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "15824:42:8"
																				},
																				{
																					"name": "from",
																					"nodeType": "YulIdentifier",
																					"src": "15868:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15817:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15817:56:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15817:56:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_to_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "15897:40:8"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "15939:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15890:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15890:52:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15890:52:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_id_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "15966:40:8"
																				},
																				{
																					"name": "identifier",
																					"nodeType": "YulIdentifier",
																					"src": "16008:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15959:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15959:60:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15959:60:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_amount_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "16043:44:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16089:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16036:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16036:55:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16036:55:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "16136:41:8"
																				},
																				{
																					"name": "TokenTransferGenericFailure_error_length",
																					"nodeType": "YulIdentifier",
																					"src": "16199:40:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16108:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16108:149:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16108:149:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "13013:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13006:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13006:15:8"
															},
															"nodeType": "YulIf",
															"src": "13003:3268:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "16349:21:8"
																	},
																	{
																		"name": "memPointer",
																		"nodeType": "YulIdentifier",
																		"src": "16372:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16342:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16342:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16342:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ZeroSlot",
																		"nodeType": "YulIdentifier",
																		"src": "16450:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16460:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16443:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16443:19:8"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "13566:13:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "14032:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "14435:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "12509:28:8",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "12615:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1614,
														"isOffset": false,
														"isSlot": false,
														"src": "12870:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1602,
														"isOffset": false,
														"isSlot": false,
														"src": "12430:27:8",
														"valueSize": 1
													},
													{
														"declaration": 1602,
														"isOffset": false,
														"isSlot": false,
														"src": "12825:27:8",
														"valueSize": 1
													},
													{
														"declaration": 1599,
														"isOffset": false,
														"isSlot": false,
														"src": "12459:29:8",
														"valueSize": 1
													},
													{
														"declaration": 1608,
														"isOffset": false,
														"isSlot": false,
														"src": "12564:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "15147:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "12313:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "16349:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": false,
														"src": "14782:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "12077:23:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "11916:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "12051:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "11942:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1624,
														"isOffset": false,
														"isSlot": false,
														"src": "11993:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "13606:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "13917:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "16043:44:8",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "15824:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1646,
														"isOffset": false,
														"isSlot": false,
														"src": "15966:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": false,
														"src": "16199:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "15601:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "16136:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": false,
														"src": "15664:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "15897:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1637,
														"isOffset": false,
														"isSlot": false,
														"src": "15749:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1521,
														"isOffset": false,
														"isSlot": false,
														"src": "16450:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": false,
														"src": "12539:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": false,
														"src": "15868:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1469,
														"isOffset": false,
														"isSlot": false,
														"src": "12643:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1469,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "12592:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "15939:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "11883:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "12021:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "12783:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "15794:5:8",
														"valueSize": 1
													}
												],
												"id": 1472,
												"nodeType": "InlineAssembly",
												"src": "11789:4683:8"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "10966:593:8",
										"text": " @dev Internal function to transfer an ERC721 token from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer. Note that this function does\n      not check whether the receiver can accept the ERC721 token (i.e. it\n      does not use `safeTransferFrom`).\n @param token      The ERC721 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The tokenId to transfer."
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performERC721Transfer",
									"nameLocation": "11573:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11613:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "11605:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11605:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11636:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "11628:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11628:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11658:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "11650:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11650:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "11678:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "11670:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11595:99:8"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11704:0:8"
									},
									"scope": 1501,
									"src": "11564:4914:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1489,
										"nodeType": "Block",
										"src": "17291:5455:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17386:5354:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17479:224:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "17504:24:8"
																				},
																				{
																					"name": "NoContract_error_signature",
																					"nodeType": "YulIdentifier",
																					"src": "17530:26:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17497:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17497:60:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17497:60:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_token_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "17581:26:8"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "17609:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17574:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17574:41:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17574:41:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "NoContract_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "17639:24:8"
																				},
																				{
																					"name": "NoContract_error_length",
																					"nodeType": "YulIdentifier",
																					"src": "17665:23:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17632:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17632:57:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17632:57:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "token",
																				"nodeType": "YulIdentifier",
																				"src": "17471:5:8"
																			}
																		],
																		"functionName": {
																			"name": "extcodesize",
																			"nodeType": "YulIdentifier",
																			"src": "17459:11:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17459:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17452:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17452:26:8"
															},
															"nodeType": "YulIf",
															"src": "17449:254:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17871:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "17895:21:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17889:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17889:28:8"
															},
															"variables": [
																{
																	"name": "memPointer",
																	"nodeType": "YulTypedName",
																	"src": "17875:10:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17930:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "Slot0x80",
																		"nodeType": "YulIdentifier",
																		"src": "17952:8:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17946:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:15:8"
															},
															"variables": [
																{
																	"name": "slot0x80",
																	"nodeType": "YulTypedName",
																	"src": "17934:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17974:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "Slot0xA0",
																		"nodeType": "YulIdentifier",
																		"src": "17996:8:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17990:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17990:15:8"
															},
															"variables": [
																{
																	"name": "slot0xA0",
																	"nodeType": "YulTypedName",
																	"src": "17978:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18018:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "Slot0xC0",
																		"nodeType": "YulIdentifier",
																		"src": "18040:8:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18034:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18034:15:8"
															},
															"variables": [
																{
																	"name": "slot0xC0",
																	"nodeType": "YulTypedName",
																	"src": "18022:8:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18165:32:8"
																	},
																	{
																		"name": "ERC1155_safeTransferFrom_signature",
																		"nodeType": "YulIdentifier",
																		"src": "18215:34:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:122:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18141:122:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_from_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18283:33:8"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "18318:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18276:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18276:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18276:47:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_to_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18343:31:8"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "18376:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18336:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18336:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18336:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_id_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18399:31:8"
																	},
																	{
																		"name": "identifier",
																		"nodeType": "YulIdentifier",
																		"src": "18432:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18392:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18392:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18392:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_amount_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18463:35:8"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "18500:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18456:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18456:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18456:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_data_offset_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18544:40:8"
																	},
																	{
																		"name": "ERC1155_safeTransferFrom_data_length_offset",
																		"nodeType": "YulIdentifier",
																		"src": "18602:43:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18520:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18520:139:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18520:139:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ERC1155_safeTransferFrom_data_length_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18679:40:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18721:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18672:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18672:51:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18792:235:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "18829:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18829:5:8"
																	},
																	{
																		"name": "token",
																		"nodeType": "YulIdentifier",
																		"src": "18852:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18875:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ERC1155_safeTransferFrom_sig_ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18894:32:8"
																	},
																	{
																		"name": "ERC1155_safeTransferFrom_length",
																		"nodeType": "YulIdentifier",
																		"src": "18944:31:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18993:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19012:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "18807:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:220:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nodeType": "YulTypedName",
																	"src": "18796:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19101:3254:8",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "19260:2308:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "19571:143:8",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "returndatasize",
																											"nodeType": "YulIdentifier",
																											"src": "19627:14:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19627:16:8"
																									},
																									{
																										"name": "AlmostOneWord",
																										"nodeType": "YulIdentifier",
																										"src": "19645:13:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19623:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19623:36:8"
																							},
																							{
																								"name": "OneWord",
																								"nodeType": "YulIdentifier",
																								"src": "19685:7:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "19594:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19594:120:8"
																					},
																					"variables": [
																						{
																							"name": "returnDataWords",
																							"nodeType": "YulTypedName",
																							"src": "19575:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "19962:42:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "memPointer",
																								"nodeType": "YulIdentifier",
																								"src": "19984:10:8"
																							},
																							{
																								"name": "OneWord",
																								"nodeType": "YulIdentifier",
																								"src": "19996:7:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "19980:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19980:24:8"
																					},
																					"variables": [
																						{
																							"name": "msizeWords",
																							"nodeType": "YulTypedName",
																							"src": "19966:10:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "20095:45:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "CostPerWord",
																								"nodeType": "YulIdentifier",
																								"src": "20111:11:8"
																							},
																							{
																								"name": "returnDataWords",
																								"nodeType": "YulIdentifier",
																								"src": "20124:15:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "20107:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20107:33:8"
																					},
																					"variables": [
																						{
																							"name": "cost",
																							"nodeType": "YulTypedName",
																							"src": "20099:4:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "20265:734:8",
																						"statements": [
																							{
																								"nodeType": "YulAssignment",
																								"src": "20291:686:8",
																								"value": {
																									"arguments": [
																										{
																											"name": "cost",
																											"nodeType": "YulIdentifier",
																											"src": "20332:4:8"
																										},
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "returnDataWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "20448:15:8"
																																},
																																{
																																	"name": "msizeWords",
																																	"nodeType": "YulIdentifier",
																																	"src": "20465:10:8"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nodeType": "YulIdentifier",
																																"src": "20444:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "20444:32:8"
																														},
																														{
																															"name": "CostPerWord",
																															"nodeType": "YulIdentifier",
																															"src": "20514:11:8"
																														}
																													],
																													"functionName": {
																														"name": "mul",
																														"nodeType": "YulIdentifier",
																														"src": "20403:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "20403:156:8"
																												},
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"arguments": [
																																		{
																																			"name": "returnDataWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "20683:15:8"
																																		},
																																		{
																																			"name": "returnDataWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "20700:15:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "mul",
																																		"nodeType": "YulIdentifier",
																																		"src": "20679:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "20679:37:8"
																																},
																																{
																																	"arguments": [
																																		{
																																			"name": "msizeWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "20762:10:8"
																																		},
																																		{
																																			"name": "msizeWords",
																																			"nodeType": "YulIdentifier",
																																			"src": "20774:10:8"
																																		}
																																	],
																																	"functionName": {
																																		"name": "mul",
																																		"nodeType": "YulIdentifier",
																																		"src": "20758:3:8"
																																	},
																																	"nodeType": "YulFunctionCall",
																																	"src": "20758:27:8"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nodeType": "YulIdentifier",
																																"src": "20634:3:8"
																															},
																															"nodeType": "YulFunctionCall",
																															"src": "20634:189:8"
																														},
																														{
																															"name": "MemoryExpansionCoefficient",
																															"nodeType": "YulIdentifier",
																															"src": "20861:26:8"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nodeType": "YulIdentifier",
																														"src": "20593:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "20593:328:8"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "20366:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "20366:585:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "20299:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "20299:678:8"
																								},
																								"variableNames": [
																									{
																										"name": "cost",
																										"nodeType": "YulIdentifier",
																										"src": "20291:4:8"
																									}
																								]
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "returnDataWords",
																								"nodeType": "YulIdentifier",
																								"src": "20236:15:8"
																							},
																							{
																								"name": "msizeWords",
																								"nodeType": "YulIdentifier",
																								"src": "20253:10:8"
																							}
																						],
																						"functionName": {
																							"name": "gt",
																							"nodeType": "YulIdentifier",
																							"src": "20233:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20233:31:8"
																					},
																					"nodeType": "YulIf",
																					"src": "20230:769:8"
																				},
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "21250:300:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "21372:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "21375:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "21378:14:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "21378:16:8"
																										}
																									],
																									"functionName": {
																										"name": "returndatacopy",
																										"nodeType": "YulIdentifier",
																										"src": "21357:14:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "21357:38:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "21357:38:8"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "21508:1:8",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "21511:14:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "21511:16:8"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nodeType": "YulIdentifier",
																										"src": "21501:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "21501:27:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "21501:27:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "cost",
																										"nodeType": "YulIdentifier",
																										"src": "21220:4:8"
																									},
																									{
																										"name": "ExtraGasBuffer",
																										"nodeType": "YulIdentifier",
																										"src": "21226:14:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "21216:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21216:25:8"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "gas",
																									"nodeType": "YulIdentifier",
																									"src": "21243:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21243:5:8"
																							}
																						],
																						"functionName": {
																							"name": "lt",
																							"nodeType": "YulIdentifier",
																							"src": "21213:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21213:36:8"
																					},
																					"nodeType": "YulIf",
																					"src": "21210:340:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [],
																			"functionName": {
																				"name": "returndatasize",
																				"nodeType": "YulIdentifier",
																				"src": "19243:14:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19243:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "19240:2328:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "21680:41:8"
																				},
																				{
																					"name": "TokenTransferGenericFailure_error_signature",
																					"nodeType": "YulIdentifier",
																					"src": "21743:43:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21652:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21652:152:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21652:152:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_token_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "21828:43:8"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "21873:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21821:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21821:58:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21821:58:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_from_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "21903:42:8"
																				},
																				{
																					"name": "from",
																					"nodeType": "YulIdentifier",
																					"src": "21947:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21896:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21896:56:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21896:56:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_to_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "21976:40:8"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "22018:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21969:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21969:52:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21969:52:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_id_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "22045:40:8"
																				},
																				{
																					"name": "identifier",
																					"nodeType": "YulIdentifier",
																					"src": "22087:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22038:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22038:60:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22038:60:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_amount_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "22122:44:8"
																				},
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "22168:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "22115:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22115:60:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22115:60:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "TokenTransferGenericFailure_error_sig_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "22220:41:8"
																				},
																				{
																					"name": "TokenTransferGenericFailure_error_length",
																					"nodeType": "YulIdentifier",
																					"src": "22283:40:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22192:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22192:149:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22192:149:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nodeType": "YulIdentifier",
																		"src": "19092:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19085:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19085:15:8"
															},
															"nodeType": "YulIf",
															"src": "19082:3273:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "Slot0x80",
																		"nodeType": "YulIdentifier",
																		"src": "22376:8:8"
																	},
																	{
																		"name": "slot0x80",
																		"nodeType": "YulIdentifier",
																		"src": "22386:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22369:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22369:26:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22369:26:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "Slot0xA0",
																		"nodeType": "YulIdentifier",
																		"src": "22437:8:8"
																	},
																	{
																		"name": "slot0xA0",
																		"nodeType": "YulIdentifier",
																		"src": "22447:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22430:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22430:26:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22430:26:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "Slot0xC0",
																		"nodeType": "YulIdentifier",
																		"src": "22498:8:8"
																	},
																	{
																		"name": "slot0xC0",
																		"nodeType": "YulIdentifier",
																		"src": "22508:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22491:26:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22491:26:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22617:21:8"
																	},
																	{
																		"name": "memPointer",
																		"nodeType": "YulIdentifier",
																		"src": "22640:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22610:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22610:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22610:41:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ZeroSlot",
																		"nodeType": "YulIdentifier",
																		"src": "22718:8:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22728:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22711:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22711:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22711:19:8"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "19645:13:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "20111:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "20514:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1571,
														"isOffset": false,
														"isSlot": false,
														"src": "18463:35:8",
														"valueSize": 1
													},
													{
														"declaration": 1583,
														"isOffset": false,
														"isSlot": false,
														"src": "18602:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1577,
														"isOffset": false,
														"isSlot": false,
														"src": "18679:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "18544:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1562,
														"isOffset": false,
														"isSlot": false,
														"src": "18283:33:8",
														"valueSize": 1
													},
													{
														"declaration": 1568,
														"isOffset": false,
														"isSlot": false,
														"src": "18399:31:8",
														"valueSize": 1
													},
													{
														"declaration": 1580,
														"isOffset": false,
														"isSlot": false,
														"src": "18944:31:8",
														"valueSize": 1
													},
													{
														"declaration": 1559,
														"isOffset": false,
														"isSlot": false,
														"src": "18165:32:8",
														"valueSize": 1
													},
													{
														"declaration": 1559,
														"isOffset": false,
														"isSlot": false,
														"src": "18894:32:8",
														"valueSize": 1
													},
													{
														"declaration": 1556,
														"isOffset": false,
														"isSlot": false,
														"src": "18215:34:8",
														"valueSize": 1
													},
													{
														"declaration": 1565,
														"isOffset": false,
														"isSlot": false,
														"src": "18343:31:8",
														"valueSize": 1
													},
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "21226:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "17895:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "22617:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": false,
														"src": "20861:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "17665:23:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "17504:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "17639:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "17530:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1624,
														"isOffset": false,
														"isSlot": false,
														"src": "17581:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "19685:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "19996:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1527,
														"isOffset": false,
														"isSlot": false,
														"src": "17952:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1527,
														"isOffset": false,
														"isSlot": false,
														"src": "22376:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "17996:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1530,
														"isOffset": false,
														"isSlot": false,
														"src": "22437:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "18040:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": false,
														"src": "22498:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1649,
														"isOffset": false,
														"isSlot": false,
														"src": "22122:44:8",
														"valueSize": 1
													},
													{
														"declaration": 1640,
														"isOffset": false,
														"isSlot": false,
														"src": "21903:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1646,
														"isOffset": false,
														"isSlot": false,
														"src": "22045:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1652,
														"isOffset": false,
														"isSlot": false,
														"src": "22283:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "21680:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1634,
														"isOffset": false,
														"isSlot": false,
														"src": "22220:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1631,
														"isOffset": false,
														"isSlot": false,
														"src": "21743:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "21976:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1637,
														"isOffset": false,
														"isSlot": false,
														"src": "21828:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1521,
														"isOffset": false,
														"isSlot": false,
														"src": "22718:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1485,
														"isOffset": false,
														"isSlot": false,
														"src": "18500:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1485,
														"isOffset": false,
														"isSlot": false,
														"src": "22168:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1479,
														"isOffset": false,
														"isSlot": false,
														"src": "18318:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1479,
														"isOffset": false,
														"isSlot": false,
														"src": "21947:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1483,
														"isOffset": false,
														"isSlot": false,
														"src": "18432:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1483,
														"isOffset": false,
														"isSlot": false,
														"src": "22087:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1481,
														"isOffset": false,
														"isSlot": false,
														"src": "18376:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1481,
														"isOffset": false,
														"isSlot": false,
														"src": "22018:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1477,
														"isOffset": false,
														"isSlot": false,
														"src": "17471:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1477,
														"isOffset": false,
														"isSlot": false,
														"src": "17609:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1477,
														"isOffset": false,
														"isSlot": false,
														"src": "18852:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1477,
														"isOffset": false,
														"isSlot": false,
														"src": "21873:5:8",
														"valueSize": 1
													}
												],
												"id": 1488,
												"nodeType": "InlineAssembly",
												"src": "17377:5363:8"
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "16484:637:8",
										"text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer.\n @param token      The ERC1155 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The id to transfer.\n @param amount     The amount to transfer."
									},
									"id": 1490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performERC1155Transfer",
									"nameLocation": "17135:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17176:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17168:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17168:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17199:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17191:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17221:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17213:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17213:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "17241:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17233:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17233:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17269:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "17261:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17261:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17158:123:8"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17291:0:8"
									},
									"scope": 1501,
									"src": "17126:5620:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "23811:11369:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23901:11273:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23915:32:8",
															"value": {
																"name": "batchTransfers.length",
																"nodeType": "YulIdentifier",
																"src": "23926:21:8"
															},
															"variables": [
																{
																	"name": "len",
																	"nodeType": "YulTypedName",
																	"src": "23919:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24187:47:8",
															"value": {
																"name": "batchTransfers.offset",
																"nodeType": "YulIdentifier",
																"src": "24213:21:8"
															},
															"variables": [
																{
																	"name": "nextElementHeadPtr",
																	"nodeType": "YulTypedName",
																	"src": "24191:18:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24473:38:8",
															"value": {
																"name": "nextElementHeadPtr",
																"nodeType": "YulIdentifier",
																"src": "24493:18:8"
															},
															"variables": [
																{
																	"name": "arrayHeadPtr",
																	"nodeType": "YulTypedName",
																	"src": "24477:12:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ConduitBatch1155Transfer_from_offset",
																		"nodeType": "YulIdentifier",
																		"src": "24709:36:8"
																	},
																	{
																		"name": "ERC1155_safeBatchTransferFrom_signature",
																		"nodeType": "YulIdentifier",
																		"src": "24763:39:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24685:131:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24685:131:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24984:9791:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25221:127:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "arrayHeadPtr",
																					"nodeType": "YulIdentifier",
																					"src": "25264:12:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "nextElementHeadPtr",
																							"nodeType": "YulIdentifier",
																							"src": "25311:18:8"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "25298:12:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25298:32:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25239:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25239:109:8"
																		},
																		"variables": [
																			{
																				"name": "elementPtr",
																				"nodeType": "YulTypedName",
																				"src": "25225:10:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25419:37:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementPtr",
																					"nodeType": "YulIdentifier",
																					"src": "25445:10:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "25432:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25432:24:8"
																		},
																		"variables": [
																			{
																				"name": "token",
																				"nodeType": "YulTypedName",
																				"src": "25423:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "25557:240:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_sig_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "25586:24:8"
																							},
																							{
																								"name": "NoContract_error_signature",
																								"nodeType": "YulIdentifier",
																								"src": "25612:26:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "25579:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25579:60:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "25579:60:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_token_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "25667:26:8"
																							},
																							{
																								"name": "token",
																								"nodeType": "YulIdentifier",
																								"src": "25695:5:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "25660:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25660:41:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "25660:41:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "NoContract_error_sig_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "25729:24:8"
																							},
																							{
																								"name": "NoContract_error_length",
																								"nodeType": "YulIdentifier",
																								"src": "25755:23:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "25722:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "25722:57:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "25722:57:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "token",
																							"nodeType": "YulIdentifier",
																							"src": "25549:5:8"
																						}
																					],
																					"functionName": {
																						"name": "extcodesize",
																						"nodeType": "YulIdentifier",
																						"src": "25537:11:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25537:18:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "25530:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25530:26:8"
																		},
																		"nodeType": "YulIf",
																		"src": "25527:270:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "25872:128:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "elementPtr",
																							"nodeType": "YulIdentifier",
																							"src": "25927:10:8"
																						},
																						{
																							"name": "ConduitBatch1155Transfer_ids_length_offset",
																							"nodeType": "YulIdentifier",
																							"src": "25939:42:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25923:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25923:59:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "25889:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25889:111:8"
																		},
																		"variables": [
																			{
																				"name": "idsLength",
																				"nodeType": "YulTypedName",
																				"src": "25876:9:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "26090:167:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
																					"nodeType": "YulIdentifier",
																					"src": "26144:50:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "idsLength",
																							"nodeType": "YulIdentifier",
																							"src": "26220:9:8"
																						},
																						{
																							"name": "OneWord",
																							"nodeType": "YulIdentifier",
																							"src": "26231:7:8"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "26216:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26216:23:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26119:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26119:138:8"
																		},
																		"variables": [
																			{
																				"name": "expectedAmountsOffset",
																				"nodeType": "YulTypedName",
																				"src": "26094:21:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "26320:1341:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "idsLength",
																									"nodeType": "YulIdentifier",
																									"src": "26488:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "elementPtr",
																													"nodeType": "YulIdentifier",
																													"src": "26544:10:8"
																												},
																												{
																													"name": "expectedAmountsOffset",
																													"nodeType": "YulIdentifier",
																													"src": "26556:21:8"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "26540:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "26540:38:8"
																										}
																									],
																									"functionName": {
																										"name": "calldataload",
																										"nodeType": "YulIdentifier",
																										"src": "26527:12:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "26527:52:8"
																								}
																							],
																							"functionName": {
																								"name": "eq",
																								"nodeType": "YulIdentifier",
																								"src": "26456:2:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26456:149:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "elementPtr",
																															"nodeType": "YulIdentifier",
																															"src": "26845:10:8"
																														},
																														{
																															"name": "ConduitBatch1155Transfer_ids_head_offset",
																															"nodeType": "YulIdentifier",
																															"src": "26897:40:8"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "26800:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "26800:175:8"
																												}
																											],
																											"functionName": {
																												"name": "calldataload",
																												"nodeType": "YulIdentifier",
																												"src": "26750:12:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "26750:259:8"
																										},
																										{
																											"name": "ConduitBatch1155Transfer_ids_length_offset",
																											"nodeType": "YulIdentifier",
																											"src": "27043:42:8"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nodeType": "YulIdentifier",
																										"src": "26714:2:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "26714:401:8"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "elementPtr",
																															"nodeType": "YulIdentifier",
																															"src": "27346:10:8"
																														},
																														{
																															"name": "ConduitBatchTransfer_amounts_head_offset",
																															"nodeType": "YulIdentifier",
																															"src": "27398:40:8"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "27301:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "27301:175:8"
																												}
																											],
																											"functionName": {
																												"name": "calldataload",
																												"nodeType": "YulIdentifier",
																												"src": "27251:12:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "27251:259:8"
																										},
																										{
																											"name": "expectedAmountsOffset",
																											"nodeType": "YulIdentifier",
																											"src": "27544:21:8"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nodeType": "YulIdentifier",
																										"src": "27215:2:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "27215:380:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "26631:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26631:990:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "26371:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26371:1272:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "26343:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26343:1318:8"
																		},
																		"variables": [
																			{
																				"name": "invalidEncoding",
																				"nodeType": "YulTypedName",
																				"src": "26324:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "27768:373:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "Invalid1155BatchTransferEncoding_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "27822:36:8"
																							},
																							{
																								"name": "Invalid1155BatchTransferEncoding_selector",
																								"nodeType": "YulIdentifier",
																								"src": "27884:41:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "27790:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27790:157:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "27790:157:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "Invalid1155BatchTransferEncoding_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "28000:36:8"
																							},
																							{
																								"name": "Invalid1155BatchTransferEncoding_length",
																								"nodeType": "YulIdentifier",
																								"src": "28062:39:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "27968:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27968:155:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "27968:155:8"
																				}
																			]
																		},
																		"condition": {
																			"name": "invalidEncoding",
																			"nodeType": "YulIdentifier",
																			"src": "27752:15:8"
																		},
																		"nodeType": "YulIf",
																		"src": "27749:392:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28223:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "nextElementHeadPtr",
																					"nodeType": "YulIdentifier",
																					"src": "28249:18:8"
																				},
																				{
																					"name": "OneWord",
																					"nodeType": "YulIdentifier",
																					"src": "28269:7:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "28245:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28245:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "nextElementHeadPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28223:18:8"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "BatchTransfer1155Params_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "28408:27:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPtr",
																							"nodeType": "YulIdentifier",
																							"src": "28461:10:8"
																						},
																						{
																							"name": "ConduitBatch1155Transfer_from_offset",
																							"nodeType": "YulIdentifier",
																							"src": "28473:36:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "28457:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28457:53:8"
																				},
																				{
																					"name": "ConduitBatch1155Transfer_usable_head_size",
																					"nodeType": "YulIdentifier",
																					"src": "28532:41:8"
																				}
																			],
																			"functionName": {
																				"name": "calldatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "28374:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28374:217:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28374:217:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "28766:64:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "TwoWords",
																					"nodeType": "YulIdentifier",
																					"src": "28795:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "idsLength",
																							"nodeType": "YulIdentifier",
																							"src": "28809:9:8"
																						},
																						{
																							"name": "TwoWords",
																							"nodeType": "YulIdentifier",
																							"src": "28820:8:8"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "28805:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "28805:24:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "28791:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28791:39:8"
																		},
																		"variables": [
																			{
																				"name": "idsAndAmountsSize",
																				"nodeType": "YulTypedName",
																				"src": "28770:17:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "BatchTransfer1155Params_data_head_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "28943:37:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "BatchTransfer1155Params_ids_length_offset",
																							"nodeType": "YulIdentifier",
																							"src": "29031:41:8"
																						},
																						{
																							"name": "idsAndAmountsSize",
																							"nodeType": "YulIdentifier",
																							"src": "29098:17:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29002:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29002:135:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "28915:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28915:240:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28915:240:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "BatchTransfer1155Params_data_length_basePtr",
																							"nodeType": "YulIdentifier",
																							"src": "29301:43:8"
																						},
																						{
																							"name": "idsAndAmountsSize",
																							"nodeType": "YulIdentifier",
																							"src": "29370:17:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29272:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29272:137:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29431:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "29244:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29244:206:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29244:206:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "29547:147:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "BatchTransfer1155Params_calldata_baseSize",
																					"nodeType": "YulIdentifier",
																					"src": "29596:41:8"
																				},
																				{
																					"name": "idsAndAmountsSize",
																					"nodeType": "YulIdentifier",
																					"src": "29659:17:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "29571:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29571:123:8"
																		},
																		"variables": [
																			{
																				"name": "transferDataSize",
																				"nodeType": "YulTypedName",
																				"src": "29551:16:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "BatchTransfer1155Params_ids_length_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "29825:38:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPtr",
																							"nodeType": "YulIdentifier",
																							"src": "29889:10:8"
																						},
																						{
																							"name": "ConduitBatch1155Transfer_ids_length_offset",
																							"nodeType": "YulIdentifier",
																							"src": "29901:42:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29885:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29885:59:8"
																				},
																				{
																					"name": "idsAndAmountsSize",
																					"nodeType": "YulIdentifier",
																					"src": "29966:17:8"
																				}
																			],
																			"functionName": {
																				"name": "calldatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "29791:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29791:210:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29791:210:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "30080:318:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "gas",
																						"nodeType": "YulIdentifier",
																						"src": "30121:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30121:5:8"
																				},
																				{
																					"name": "token",
																					"nodeType": "YulIdentifier",
																					"src": "30148:5:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30175:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "ConduitBatch1155Transfer_from_offset",
																					"nodeType": "YulIdentifier",
																					"src": "30198:36:8"
																				},
																				{
																					"name": "transferDataSize",
																					"nodeType": "YulIdentifier",
																					"src": "30279:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30356:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30379:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "call",
																				"nodeType": "YulIdentifier",
																				"src": "30095:4:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30095:303:8"
																		},
																		"variables": [
																			{
																				"name": "success",
																				"nodeType": "YulTypedName",
																				"src": "30084:7:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "30480:4281:8",
																			"statements": [
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "30651:2976:8",
																						"statements": [
																							{
																								"nodeType": "YulVariableDeclaration",
																								"src": "30984:155:8",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [],
																													"functionName": {
																														"name": "returndatasize",
																														"nodeType": "YulIdentifier",
																														"src": "31044:14:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "31044:16:8"
																												},
																												{
																													"name": "AlmostOneWord",
																													"nodeType": "YulIdentifier",
																													"src": "31062:13:8"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "31040:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "31040:36:8"
																										},
																										{
																											"name": "OneWord",
																											"nodeType": "YulIdentifier",
																											"src": "31106:7:8"
																										}
																									],
																									"functionName": {
																										"name": "div",
																										"nodeType": "YulIdentifier",
																										"src": "31007:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "31007:132:8"
																								},
																								"variables": [
																									{
																										"name": "returnDataWords",
																										"nodeType": "YulTypedName",
																										"src": "30988:15:8",
																										"type": ""
																									}
																								]
																							},
																							{
																								"nodeType": "YulVariableDeclaration",
																								"src": "31760:48:8",
																								"value": {
																									"arguments": [
																										{
																											"name": "transferDataSize",
																											"nodeType": "YulIdentifier",
																											"src": "31782:16:8"
																										},
																										{
																											"name": "OneWord",
																											"nodeType": "YulIdentifier",
																											"src": "31800:7:8"
																										}
																									],
																									"functionName": {
																										"name": "div",
																										"nodeType": "YulIdentifier",
																										"src": "31778:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "31778:30:8"
																								},
																								"variables": [
																									{
																										"name": "msizeWords",
																										"nodeType": "YulTypedName",
																										"src": "31764:10:8",
																										"type": ""
																									}
																								]
																							},
																							{
																								"nodeType": "YulVariableDeclaration",
																								"src": "31907:45:8",
																								"value": {
																									"arguments": [
																										{
																											"name": "CostPerWord",
																											"nodeType": "YulIdentifier",
																											"src": "31923:11:8"
																										},
																										{
																											"name": "returnDataWords",
																											"nodeType": "YulIdentifier",
																											"src": "31936:15:8"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "31919:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "31919:33:8"
																								},
																								"variables": [
																									{
																										"name": "cost",
																										"nodeType": "YulTypedName",
																										"src": "31911:4:8",
																										"type": ""
																									}
																								]
																							},
																							{
																								"body": {
																									"nodeType": "YulBlock",
																									"src": "32085:944:8",
																									"statements": [
																										{
																											"nodeType": "YulAssignment",
																											"src": "32115:888:8",
																											"value": {
																												"arguments": [
																													{
																														"name": "cost",
																														"nodeType": "YulIdentifier",
																														"src": "32160:4:8"
																													},
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"name": "returnDataWords",
																																				"nodeType": "YulIdentifier",
																																				"src": "32288:15:8"
																																			},
																																			{
																																				"name": "msizeWords",
																																				"nodeType": "YulIdentifier",
																																				"src": "32305:10:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "sub",
																																			"nodeType": "YulIdentifier",
																																			"src": "32284:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "32284:32:8"
																																	},
																																	{
																																		"name": "CostPerWord",
																																		"nodeType": "YulIdentifier",
																																		"src": "32358:11:8"
																																	}
																																],
																																"functionName": {
																																	"name": "mul",
																																	"nodeType": "YulIdentifier",
																																	"src": "32239:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "32239:168:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"arguments": [
																																					{
																																						"name": "returnDataWords",
																																						"nodeType": "YulIdentifier",
																																						"src": "32592:15:8"
																																					},
																																					{
																																						"name": "returnDataWords",
																																						"nodeType": "YulIdentifier",
																																						"src": "32657:15:8"
																																					}
																																				],
																																				"functionName": {
																																					"name": "mul",
																																					"nodeType": "YulIdentifier",
																																					"src": "32539:3:8"
																																				},
																																				"nodeType": "YulFunctionCall",
																																				"src": "32539:179:8"
																																			},
																																			{
																																				"arguments": [
																																					{
																																						"name": "msizeWords",
																																						"nodeType": "YulIdentifier",
																																						"src": "32768:10:8"
																																					},
																																					{
																																						"name": "msizeWords",
																																						"nodeType": "YulIdentifier",
																																						"src": "32780:10:8"
																																					}
																																				],
																																				"functionName": {
																																					"name": "mul",
																																					"nodeType": "YulIdentifier",
																																					"src": "32764:3:8"
																																				},
																																				"nodeType": "YulFunctionCall",
																																				"src": "32764:27:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "sub",
																																			"nodeType": "YulIdentifier",
																																			"src": "32490:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "32490:343:8"
																																	},
																																	{
																																		"name": "MemoryExpansionCoefficient",
																																		"nodeType": "YulIdentifier",
																																		"src": "32875:26:8"
																																	}
																																],
																																"functionName": {
																																	"name": "div",
																																	"nodeType": "YulIdentifier",
																																	"src": "32445:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "32445:494:8"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nodeType": "YulIdentifier",
																															"src": "32198:3:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "32198:775:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "32123:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "32123:880:8"
																											},
																											"variableNames": [
																												{
																													"name": "cost",
																													"nodeType": "YulIdentifier",
																													"src": "32115:4:8"
																												}
																											]
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"name": "returnDataWords",
																											"nodeType": "YulIdentifier",
																											"src": "32056:15:8"
																										},
																										{
																											"name": "msizeWords",
																											"nodeType": "YulIdentifier",
																											"src": "32073:10:8"
																										}
																									],
																									"functionName": {
																										"name": "gt",
																										"nodeType": "YulIdentifier",
																										"src": "32053:2:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "32053:31:8"
																								},
																								"nodeType": "YulIf",
																								"src": "32050:979:8"
																							},
																							{
																								"body": {
																									"nodeType": "YulBlock",
																									"src": "33296:309:8",
																									"statements": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "33419:1:8",
																														"type": "",
																														"value": "0"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "33422:1:8",
																														"type": "",
																														"value": "0"
																													},
																													{
																														"arguments": [],
																														"functionName": {
																															"name": "returndatasize",
																															"nodeType": "YulIdentifier",
																															"src": "33425:14:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "33425:16:8"
																													}
																												],
																												"functionName": {
																													"name": "returndatacopy",
																													"nodeType": "YulIdentifier",
																													"src": "33404:14:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "33404:38:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "33404:38:8"
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "33559:1:8",
																														"type": "",
																														"value": "0"
																													},
																													{
																														"arguments": [],
																														"functionName": {
																															"name": "returndatasize",
																															"nodeType": "YulIdentifier",
																															"src": "33562:14:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "33562:16:8"
																													}
																												],
																												"functionName": {
																													"name": "revert",
																													"nodeType": "YulIdentifier",
																													"src": "33552:6:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "33552:27:8"
																											},
																											"nodeType": "YulExpressionStatement",
																											"src": "33552:27:8"
																										}
																									]
																								},
																								"condition": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "cost",
																													"nodeType": "YulIdentifier",
																													"src": "33266:4:8"
																												},
																												{
																													"name": "ExtraGasBuffer",
																													"nodeType": "YulIdentifier",
																													"src": "33272:14:8"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "33262:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "33262:25:8"
																										},
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "gas",
																												"nodeType": "YulIdentifier",
																												"src": "33289:3:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "33289:5:8"
																										}
																									],
																									"functionName": {
																										"name": "lt",
																										"nodeType": "YulIdentifier",
																										"src": "33259:2:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "33259:36:8"
																								},
																								"nodeType": "YulIf",
																								"src": "33256:349:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "30634:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "30634:16:8"
																					},
																					"nodeType": "YulIf",
																					"src": "30631:2996:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "33729:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "ERC1155BatchTransferGenericFailure_error_signature",
																								"nodeType": "YulIdentifier",
																								"src": "33756:50:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "33697:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "33697:131:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "33697:131:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "ERC1155BatchTransferGenericFailure_token_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "33897:44:8"
																							},
																							{
																								"name": "token",
																								"nodeType": "YulIdentifier",
																								"src": "33943:5:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "33890:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "33890:59:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "33890:59:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "BatchTransfer1155Params_ids_head_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "34060:36:8"
																							},
																							{
																								"name": "ERC1155BatchTransferGenericFailure_ids_offset",
																								"nodeType": "YulIdentifier",
																								"src": "34122:45:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "34028:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "34028:161:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "34028:161:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "BatchTransfer1155Params_amounts_head_ptr",
																								"nodeType": "YulIdentifier",
																								"src": "34304:40:8"
																							},
																							{
																								"arguments": [
																									{
																										"name": "OneWord",
																										"nodeType": "YulIdentifier",
																										"src": "34403:7:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "BatchTransfer1155Params_amounts_head_ptr",
																												"nodeType": "YulIdentifier",
																												"src": "34446:40:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "34440:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "34440:47:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "34370:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "34370:143:8"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "34272:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "34272:263:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "34272:263:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "34723:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "transferDataSize",
																								"nodeType": "YulIdentifier",
																								"src": "34726:16:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "34716:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "34716:27:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "34716:27:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "success",
																					"nodeType": "YulIdentifier",
																					"src": "30471:7:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "30464:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30464:15:8"
																		},
																		"nodeType": "YulIf",
																		"src": "30461:4300:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24929:1:8"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "24932:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24926:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24926:10:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24937:46:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24955:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24964:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24967:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24960:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24960:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24955:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24883:42:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24901:10:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "24910:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "24905:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "24879:9896:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "FreeMemoryPointerSlot",
																		"nodeType": "YulIdentifier",
																		"src": "35116:21:8"
																	},
																	{
																		"name": "DefaultFreeMemoryPointer",
																		"nodeType": "YulIdentifier",
																		"src": "35139:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "35109:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "35109:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "35109:55:8"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "31062:13:8",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "34304:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "34446:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1701,
														"isOffset": false,
														"isSlot": false,
														"src": "29596:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "28943:37:8",
														"valueSize": 1
													},
													{
														"declaration": 1698,
														"isOffset": false,
														"isSlot": false,
														"src": "29301:43:8",
														"valueSize": 1
													},
													{
														"declaration": 1689,
														"isOffset": false,
														"isSlot": false,
														"src": "34060:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1707,
														"isOffset": false,
														"isSlot": false,
														"src": "29031:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1704,
														"isOffset": false,
														"isSlot": false,
														"src": "29825:38:8",
														"valueSize": 1
													},
													{
														"declaration": 1686,
														"isOffset": false,
														"isSlot": false,
														"src": "28408:27:8",
														"valueSize": 1
													},
													{
														"declaration": 1731,
														"isOffset": false,
														"isSlot": false,
														"src": "26144:50:8",
														"valueSize": 1
													},
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": false,
														"src": "24709:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": false,
														"src": "28473:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": false,
														"src": "30198:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "26897:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1728,
														"isOffset": false,
														"isSlot": false,
														"src": "25939:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1728,
														"isOffset": false,
														"isSlot": false,
														"src": "27043:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1728,
														"isOffset": false,
														"isSlot": false,
														"src": "29901:42:8",
														"valueSize": 1
													},
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "28532:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "27398:40:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "31923:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "32358:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1524,
														"isOffset": false,
														"isSlot": false,
														"src": "35139:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1751,
														"isOffset": false,
														"isSlot": false,
														"src": "33756:50:8",
														"valueSize": 1
													},
													{
														"declaration": 1757,
														"isOffset": false,
														"isSlot": false,
														"src": "34122:45:8",
														"valueSize": 1
													},
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "33897:44:8",
														"valueSize": 1
													},
													{
														"declaration": 1587,
														"isOffset": false,
														"isSlot": false,
														"src": "24763:39:8",
														"valueSize": 1
													},
													{
														"declaration": 1677,
														"isOffset": false,
														"isSlot": false,
														"src": "33272:14:8",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "35116:21:8",
														"valueSize": 1
													},
													{
														"declaration": 1743,
														"isOffset": false,
														"isSlot": false,
														"src": "28062:39:8",
														"valueSize": 1
													},
													{
														"declaration": 1740,
														"isOffset": false,
														"isSlot": false,
														"src": "27822:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1740,
														"isOffset": false,
														"isSlot": false,
														"src": "28000:36:8",
														"valueSize": 1
													},
													{
														"declaration": 1747,
														"isOffset": false,
														"isSlot": false,
														"src": "27884:41:8",
														"valueSize": 1
													},
													{
														"declaration": 1683,
														"isOffset": false,
														"isSlot": false,
														"src": "32875:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1627,
														"isOffset": false,
														"isSlot": false,
														"src": "25755:23:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "25586:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1621,
														"isOffset": false,
														"isSlot": false,
														"src": "25729:24:8",
														"valueSize": 1
													},
													{
														"declaration": 1618,
														"isOffset": false,
														"isSlot": false,
														"src": "25612:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1624,
														"isOffset": false,
														"isSlot": false,
														"src": "25667:26:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "26231:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "28269:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "31106:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "31800:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "34403:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1512,
														"isOffset": false,
														"isSlot": false,
														"src": "28795:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1512,
														"isOffset": false,
														"isSlot": false,
														"src": "28820:8:8",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": false,
														"isSlot": false,
														"src": "23926:21:8",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1495,
														"isOffset": true,
														"isSlot": false,
														"src": "24213:21:8",
														"suffix": "offset",
														"valueSize": 1
													}
												],
												"id": 1498,
												"nodeType": "InlineAssembly",
												"src": "23892:11282:8"
											}
										]
									},
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "22752:940:8",
										"text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement the ERC1155TokenReceiver interface to indicate that they\n      are willing to accept the transfer. NOTE: this function is not\n      memory-safe; it will overwrite existing memory, restore the free\n      memory pointer to the default value, and overwrite the zero slot.\n      This function should only be called once memory is no longer\n      required and when uninitialized arrays are not utilized, and memory\n      should be considered fully corrupted (aside from the existence of a\n      default-value free memory pointer) after calling this function.\n @param batchTransfers The group of 1155 batch transfers to perform."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_performERC1155BatchTransfers",
									"nameLocation": "23706:29:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "batchTransfers",
												"nameLocation": "23781:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "23745:50:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ConduitBatch1155Transfer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1493,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1492,
															"name": "ConduitBatch1155Transfer",
															"nameLocations": [
																"23745:24:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1098,
															"src": "23745:24:8"
														},
														"referencedDeclaration": 1098,
														"src": "23745:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1098_storage_ptr",
															"typeString": "struct ConduitBatch1155Transfer"
														}
													},
													"id": 1494,
													"nodeType": "ArrayTypeName",
													"src": "23745:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1098_storage_$dyn_storage_ptr",
														"typeString": "struct ConduitBatch1155Transfer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23735:66:8"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23811:0:8"
									},
									"scope": 1501,
									"src": "23697:11483:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1502,
							"src": "849:34333:8",
							"usedErrors": [
								1382,
								1385,
								1388,
								1401,
								1416,
								1427,
								1432,
								1435
							]
						}
					],
					"src": "32:35151:8"
				},
				"id": 8
			},
			"lib/TokenTransferrerConstants.sol": {
				"ast": {
					"absolutePath": "lib/TokenTransferrerConstants.sol",
					"exportedSymbols": {
						"AlmostOneWord": [
							1506
						],
						"BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
							1671
						],
						"BadReturnValueFromERC20OnTransfer_error_from_ptr": [
							1665
						],
						"BadReturnValueFromERC20OnTransfer_error_length": [
							1674
						],
						"BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
							1659
						],
						"BadReturnValueFromERC20OnTransfer_error_signature": [
							1656
						],
						"BadReturnValueFromERC20OnTransfer_error_to_ptr": [
							1668
						],
						"BadReturnValueFromERC20OnTransfer_error_token_ptr": [
							1662
						],
						"BatchTransfer1155Params_amounts_head_ptr": [
							1692
						],
						"BatchTransfer1155Params_amounts_length_baseOffset": [
							1710
						],
						"BatchTransfer1155Params_calldata_baseSize": [
							1701
						],
						"BatchTransfer1155Params_data_head_ptr": [
							1695
						],
						"BatchTransfer1155Params_data_length_baseOffset": [
							1713
						],
						"BatchTransfer1155Params_data_length_basePtr": [
							1698
						],
						"BatchTransfer1155Params_ids_head_ptr": [
							1689
						],
						"BatchTransfer1155Params_ids_length_offset": [
							1707
						],
						"BatchTransfer1155Params_ids_length_ptr": [
							1704
						],
						"BatchTransfer1155Params_ptr": [
							1686
						],
						"ConduitBatch1155Transfer_amounts_head_offset": [
							1725
						],
						"ConduitBatch1155Transfer_amounts_length_baseOffset": [
							1731
						],
						"ConduitBatch1155Transfer_calldata_baseSize": [
							1734
						],
						"ConduitBatch1155Transfer_from_offset": [
							1719
						],
						"ConduitBatch1155Transfer_ids_head_offset": [
							1722
						],
						"ConduitBatch1155Transfer_ids_length_offset": [
							1728
						],
						"ConduitBatch1155Transfer_usable_head_size": [
							1716
						],
						"ConduitBatchTransfer_amounts_head_offset": [
							1737
						],
						"CostPerWord": [
							1680
						],
						"DefaultFreeMemoryPointer": [
							1524
						],
						"ERC1155BatchTransferGenericFailure_error_signature": [
							1751
						],
						"ERC1155BatchTransferGenericFailure_ids_offset": [
							1757
						],
						"ERC1155BatchTransferGenericFailure_token_ptr": [
							1754
						],
						"ERC1155_safeBatchTransferFrom_selector": [
							1596
						],
						"ERC1155_safeBatchTransferFrom_signature": [
							1587
						],
						"ERC1155_safeTransferFrom_amount_ptr": [
							1571
						],
						"ERC1155_safeTransferFrom_data_length_offset": [
							1583
						],
						"ERC1155_safeTransferFrom_data_length_ptr": [
							1577
						],
						"ERC1155_safeTransferFrom_data_offset_ptr": [
							1574
						],
						"ERC1155_safeTransferFrom_from_ptr": [
							1562
						],
						"ERC1155_safeTransferFrom_id_ptr": [
							1568
						],
						"ERC1155_safeTransferFrom_length": [
							1580
						],
						"ERC1155_safeTransferFrom_sig_ptr": [
							1559
						],
						"ERC1155_safeTransferFrom_signature": [
							1556
						],
						"ERC1155_safeTransferFrom_to_ptr": [
							1565
						],
						"ERC20_transferFrom_amount_ptr": [
							1549
						],
						"ERC20_transferFrom_from_ptr": [
							1543
						],
						"ERC20_transferFrom_length": [
							1552
						],
						"ERC20_transferFrom_sig_ptr": [
							1540
						],
						"ERC20_transferFrom_signature": [
							1537
						],
						"ERC20_transferFrom_to_ptr": [
							1546
						],
						"ERC721_transferFrom_from_ptr": [
							1605
						],
						"ERC721_transferFrom_id_ptr": [
							1611
						],
						"ERC721_transferFrom_length": [
							1614
						],
						"ERC721_transferFrom_sig_ptr": [
							1602
						],
						"ERC721_transferFrom_signature": [
							1599
						],
						"ERC721_transferFrom_to_ptr": [
							1608
						],
						"ExtraGasBuffer": [
							1677
						],
						"FreeMemoryPointerSlot": [
							1518
						],
						"Invalid1155BatchTransferEncoding_length": [
							1743
						],
						"Invalid1155BatchTransferEncoding_ptr": [
							1740
						],
						"Invalid1155BatchTransferEncoding_selector": [
							1747
						],
						"MemoryExpansionCoefficient": [
							1683
						],
						"NoContract_error_length": [
							1627
						],
						"NoContract_error_sig_ptr": [
							1621
						],
						"NoContract_error_signature": [
							1618
						],
						"NoContract_error_token_ptr": [
							1624
						],
						"OneWord": [
							1509
						],
						"Slot0x80": [
							1527
						],
						"Slot0xA0": [
							1530
						],
						"Slot0xC0": [
							1533
						],
						"ThreeWords": [
							1515
						],
						"TokenTransferGenericFailure_error_amount_ptr": [
							1649
						],
						"TokenTransferGenericFailure_error_from_ptr": [
							1640
						],
						"TokenTransferGenericFailure_error_id_ptr": [
							1646
						],
						"TokenTransferGenericFailure_error_length": [
							1652
						],
						"TokenTransferGenericFailure_error_sig_ptr": [
							1634
						],
						"TokenTransferGenericFailure_error_signature": [
							1631
						],
						"TokenTransferGenericFailure_error_to_ptr": [
							1643
						],
						"TokenTransferGenericFailure_error_token_ptr": [
							1637
						],
						"TwoWords": [
							1512
						],
						"ZeroSlot": [
							1521
						]
					},
					"id": 1758,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1503,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"constant": true,
							"id": 1506,
							"mutability": "constant",
							"name": "AlmostOneWord",
							"nameLocation": "1808:13:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1791:37:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1504,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1791:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783166",
								"id": 1505,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1824:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_31_by_1",
									"typeString": "int_const 31"
								},
								"value": "0x1f"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1509,
							"mutability": "constant",
							"name": "OneWord",
							"nameLocation": "1847:7:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1830:31:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1507,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1830:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783230",
								"id": 1508,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1857:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_32_by_1",
									"typeString": "int_const 32"
								},
								"value": "0x20"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1512,
							"mutability": "constant",
							"name": "TwoWords",
							"nameLocation": "1880:8:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1863:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1510,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1863:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783430",
								"id": 1511,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1891:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_64_by_1",
									"typeString": "int_const 64"
								},
								"value": "0x40"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1515,
							"mutability": "constant",
							"name": "ThreeWords",
							"nameLocation": "1914:10:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1897:34:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1513,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1897:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783630",
								"id": 1514,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1927:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_96_by_1",
									"typeString": "int_const 96"
								},
								"value": "0x60"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1518,
							"mutability": "constant",
							"name": "FreeMemoryPointerSlot",
							"nameLocation": "1951:21:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1934:45:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1516,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1934:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783430",
								"id": 1517,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "1975:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_64_by_1",
									"typeString": "int_const 64"
								},
								"value": "0x40"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1521,
							"mutability": "constant",
							"name": "ZeroSlot",
							"nameLocation": "1998:8:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "1981:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1519,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "1981:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783630",
								"id": 1520,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2009:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_96_by_1",
									"typeString": "int_const 96"
								},
								"value": "0x60"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1524,
							"mutability": "constant",
							"name": "DefaultFreeMemoryPointer",
							"nameLocation": "2032:24:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2015:48:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1522,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2015:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783830",
								"id": 1523,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2059:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_128_by_1",
									"typeString": "int_const 128"
								},
								"value": "0x80"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1527,
							"mutability": "constant",
							"name": "Slot0x80",
							"nameLocation": "2083:8:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2066:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1525,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2066:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783830",
								"id": 1526,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2094:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_128_by_1",
									"typeString": "int_const 128"
								},
								"value": "0x80"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1530,
							"mutability": "constant",
							"name": "Slot0xA0",
							"nameLocation": "2117:8:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2100:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1528,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2100:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786130",
								"id": 1529,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2128:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_160_by_1",
									"typeString": "int_const 160"
								},
								"value": "0xa0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1533,
							"mutability": "constant",
							"name": "Slot0xC0",
							"nameLocation": "2151:8:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2134:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1531,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2134:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786330",
								"id": 1532,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2162:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_192_by_1",
									"typeString": "int_const 192"
								},
								"value": "0xc0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1537,
							"mutability": "constant",
							"name": "ERC20_transferFrom_signature",
							"nameLocation": "2254:28:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2237:122:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1534,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2237:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1535,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2291:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
											"typeString": "int_const 1615...(69 digits omitted)...8224"
										},
										"value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1536,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "2285:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
									"typeString": "int_const 1615...(69 digits omitted)...8224"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1540,
							"mutability": "constant",
							"name": "ERC20_transferFrom_sig_ptr",
							"nameLocation": "2378:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2361:49:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1538,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2361:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1539,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2407:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1543,
							"mutability": "constant",
							"name": "ERC20_transferFrom_from_ptr",
							"nameLocation": "2429:27:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2412:51:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1541,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2412:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783034",
								"id": 1542,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2459:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x04"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1546,
							"mutability": "constant",
							"name": "ERC20_transferFrom_to_ptr",
							"nameLocation": "2482:25:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2465:49:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1544,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2465:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1545,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2510:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1549,
							"mutability": "constant",
							"name": "ERC20_transferFrom_amount_ptr",
							"nameLocation": "2533:29:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2516:53:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1547,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2516:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783434",
								"id": 1548,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2565:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68_by_1",
									"typeString": "int_const 68"
								},
								"value": "0x44"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1552,
							"mutability": "constant",
							"name": "ERC20_transferFrom_length",
							"nameLocation": "2588:25:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2571:49:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1550,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2571:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1551,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2616:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1556,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_signature",
							"nameLocation": "2759:34:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2742:128:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1553,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2742:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307866323432343332613030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2802:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
											"typeString": "int_const 1095...(70 digits omitted)...7872"
										},
										"value": "0xf242432a00000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1555,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "2796:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
									"typeString": "int_const 1095...(70 digits omitted)...7872"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1559,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_sig_ptr",
							"nameLocation": "2889:32:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2872:55:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1557,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2872:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1558,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2924:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1562,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_from_ptr",
							"nameLocation": "2946:33:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2929:57:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1560,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2929:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783034",
								"id": 1561,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "2982:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x04"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1565,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_to_ptr",
							"nameLocation": "3005:31:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "2988:55:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1563,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "2988:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1564,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3039:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1568,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_id_ptr",
							"nameLocation": "3062:31:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3045:55:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1566,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3045:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783434",
								"id": 1567,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3096:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68_by_1",
									"typeString": "int_const 68"
								},
								"value": "0x44"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1571,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_amount_ptr",
							"nameLocation": "3119:35:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3102:59:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1569,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3102:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1570,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3157:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1574,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_data_offset_ptr",
							"nameLocation": "3180:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3163:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1572,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3163:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783834",
								"id": 1573,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3223:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "0x84"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1577,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_data_length_ptr",
							"nameLocation": "3246:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3229:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1575,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3229:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786134",
								"id": 1576,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3289:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_164_by_1",
									"typeString": "int_const 164"
								},
								"value": "0xa4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1580,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_length",
							"nameLocation": "3312:31:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3295:55:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1578,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3295:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786334",
								"id": 1579,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3346:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_196_by_1",
									"typeString": "int_const 196"
								},
								"value": "0xc4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1583,
							"mutability": "constant",
							"name": "ERC1155_safeTransferFrom_data_length_offset",
							"nameLocation": "3390:43:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3373:67:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1581,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3373:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786130",
								"id": 1582,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3436:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_160_by_1",
									"typeString": "int_const 160"
								},
								"value": "0xa0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1587,
							"mutability": "constant",
							"name": "ERC1155_safeBatchTransferFrom_signature",
							"nameLocation": "3567:39:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3550:133:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1584,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3550:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307832656232633264363030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1585,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3615:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
											"typeString": "int_const 2112...(69 digits omitted)...7952"
										},
										"value": "0x2eb2c2d600000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1586,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "3609:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
									"typeString": "int_const 2112...(69 digits omitted)...7952"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1596,
							"mutability": "constant",
							"name": "ERC1155_safeBatchTransferFrom_selector",
							"nameLocation": "3702:38:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3686:119:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_bytes4",
								"typeString": "bytes4"
							},
							"typeName": {
								"id": 1588,
								"name": "bytes4",
								"nodeType": "ElementaryTypeName",
								"src": "3686:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes4",
									"typeString": "bytes4"
								}
							},
							"value": {
								"arguments": [
									{
										"arguments": [
											{
												"id": 1593,
												"name": "ERC1155_safeBatchTransferFrom_signature",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1587,
												"src": "3763:39:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1592,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "3755:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1591,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3755:7:9",
												"typeDescriptions": {}
											}
										},
										"id": 1594,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "3755:48:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									],
									"id": 1590,
									"isConstant": false,
									"isLValue": false,
									"isPure": true,
									"lValueRequested": false,
									"nodeType": "ElementaryTypeNameExpression",
									"src": "3743:6:9",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_bytes4_$",
										"typeString": "type(bytes4)"
									},
									"typeName": {
										"id": 1589,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "3743:6:9",
										"typeDescriptions": {}
									}
								},
								"id": 1595,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "3743:62:9",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_bytes4",
									"typeString": "bytes4"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1599,
							"mutability": "constant",
							"name": "ERC721_transferFrom_signature",
							"nameLocation": "3825:29:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3808:77:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1597,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3808:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"id": 1598,
								"name": "ERC20_transferFrom_signature",
								"nodeType": "Identifier",
								"overloadedDeclarations": [],
								"referencedDeclaration": 1537,
								"src": "3857:28:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1602,
							"mutability": "constant",
							"name": "ERC721_transferFrom_sig_ptr",
							"nameLocation": "3904:27:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3887:50:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1600,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3887:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1601,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3934:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1605,
							"mutability": "constant",
							"name": "ERC721_transferFrom_from_ptr",
							"nameLocation": "3956:28:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3939:52:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1603,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3939:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783034",
								"id": 1604,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "3987:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x04"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1608,
							"mutability": "constant",
							"name": "ERC721_transferFrom_to_ptr",
							"nameLocation": "4010:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "3993:50:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1606,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "3993:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1607,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4039:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1611,
							"mutability": "constant",
							"name": "ERC721_transferFrom_id_ptr",
							"nameLocation": "4062:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4045:50:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1609,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4045:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783434",
								"id": 1610,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4091:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68_by_1",
									"typeString": "int_const 68"
								},
								"value": "0x44"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1614,
							"mutability": "constant",
							"name": "ERC721_transferFrom_length",
							"nameLocation": "4114:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4097:50:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1612,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4097:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1613,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4143:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1618,
							"mutability": "constant",
							"name": "NoContract_error_signature",
							"nameLocation": "4238:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4221:120:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1615,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4221:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307835663135643637323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1616,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4273:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
											"typeString": "int_const 4300...(69 digits omitted)...7584"
										},
										"value": "0x5f15d67200000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1617,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "4267:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
									"typeString": "int_const 4300...(69 digits omitted)...7584"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1621,
							"mutability": "constant",
							"name": "NoContract_error_sig_ptr",
							"nameLocation": "4360:24:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4343:47:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1619,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4343:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1620,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4387:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1624,
							"mutability": "constant",
							"name": "NoContract_error_token_ptr",
							"nameLocation": "4409:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4392:49:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1622,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4392:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307834",
								"id": 1623,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4438:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1627,
							"mutability": "constant",
							"name": "NoContract_error_length",
							"nameLocation": "4460:23:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4443:47:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1625,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4443:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1626,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4486:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1631,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_signature",
							"nameLocation": "4637:43:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4620:137:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1628,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4620:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307866343836626338373030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1629,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4689:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
											"typeString": "int_const 1106...(70 digits omitted)...9856"
										},
										"value": "0xf486bc8700000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1630,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "4683:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
									"typeString": "int_const 1106...(70 digits omitted)...9856"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1634,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_sig_ptr",
							"nameLocation": "4776:41:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4759:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1632,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4759:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1633,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4820:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1637,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_token_ptr",
							"nameLocation": "4842:43:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4825:66:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1635,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4825:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307834",
								"id": 1636,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4888:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1640,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_from_ptr",
							"nameLocation": "4910:42:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4893:66:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1638,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4893:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1639,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "4955:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1643,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_to_ptr",
							"nameLocation": "4978:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "4961:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1641,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "4961:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783434",
								"id": 1642,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5021:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68_by_1",
									"typeString": "int_const 68"
								},
								"value": "0x44"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1646,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_id_ptr",
							"nameLocation": "5044:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5027:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1644,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5027:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1645,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5087:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1649,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_amount_ptr",
							"nameLocation": "5110:44:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5093:68:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1647,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5093:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783834",
								"id": 1648,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5157:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "0x84"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1652,
							"mutability": "constant",
							"name": "TokenTransferGenericFailure_error_length",
							"nameLocation": "5202:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5185:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1650,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5185:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786134",
								"id": 1651,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5245:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_164_by_1",
									"typeString": "int_const 164"
								},
								"value": "0xa4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1656,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_signature",
							"nameLocation": "5378:49:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5361:143:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1653,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5361:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307839383839313932333030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1654,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5436:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
											"typeString": "int_const 6899...(69 digits omitted)...7984"
										},
										"value": "0x9889192300000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1655,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "5430:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
									"typeString": "int_const 6899...(69 digits omitted)...7984"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1659,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
							"nameLocation": "5523:47:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5506:70:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1657,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5506:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307830",
								"id": 1658,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5573:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1662,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
							"nameLocation": "5595:49:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5578:72:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1660,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5578:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "307834",
								"id": 1661,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5647:3:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1665,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
							"nameLocation": "5669:48:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5652:72:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1663,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5652:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1664,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5720:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1668,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
							"nameLocation": "5743:46:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5726:70:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1666,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5726:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783434",
								"id": 1667,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5792:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_68_by_1",
									"typeString": "int_const 68"
								},
								"value": "0x44"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1671,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
							"nameLocation": "5815:50:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5798:74:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1669,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5798:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1670,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5868:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1674,
							"mutability": "constant",
							"name": "BadReturnValueFromERC20OnTransfer_error_length",
							"nameLocation": "5913:46:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5896:70:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1672,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5896:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783834",
								"id": 1673,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "5962:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "0x84"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1677,
							"mutability": "constant",
							"name": "ExtraGasBuffer",
							"nameLocation": "5986:14:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "5969:38:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1675,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "5969:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783230",
								"id": 1676,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6003:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_32_by_1",
									"typeString": "int_const 32"
								},
								"value": "0x20"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1680,
							"mutability": "constant",
							"name": "CostPerWord",
							"nameLocation": "6026:11:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6009:32:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1678,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6009:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "33",
								"id": 1679,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6040:1:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_3_by_1",
									"typeString": "int_const 3"
								},
								"value": "3"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1683,
							"mutability": "constant",
							"name": "MemoryExpansionCoefficient",
							"nameLocation": "6060:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6043:51:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1681,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6043:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "3078323030",
								"id": 1682,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6089:5:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_512_by_1",
									"typeString": "int_const 512"
								},
								"value": "0x200"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1686,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_ptr",
							"nameLocation": "6220:27:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6203:51:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1684,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6203:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783234",
								"id": 1685,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6250:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_36_by_1",
									"typeString": "int_const 36"
								},
								"value": "0x24"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1689,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_ids_head_ptr",
							"nameLocation": "6273:36:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6256:60:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1687,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6256:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783634",
								"id": 1688,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6312:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_100_by_1",
									"typeString": "int_const 100"
								},
								"value": "0x64"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1692,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_amounts_head_ptr",
							"nameLocation": "6335:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6318:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1690,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6318:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783834",
								"id": 1691,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6378:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "0x84"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1695,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_data_head_ptr",
							"nameLocation": "6401:37:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6384:61:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1693,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6384:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786134",
								"id": 1694,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6441:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_164_by_1",
									"typeString": "int_const 164"
								},
								"value": "0xa4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1698,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_data_length_basePtr",
							"nameLocation": "6464:43:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6447:67:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1696,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6447:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786334",
								"id": 1697,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6510:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_196_by_1",
									"typeString": "int_const 196"
								},
								"value": "0xc4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1701,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_calldata_baseSize",
							"nameLocation": "6533:41:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6516:65:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1699,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6516:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786334",
								"id": 1700,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6577:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_196_by_1",
									"typeString": "int_const 196"
								},
								"value": "0xc4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1704,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_ids_length_ptr",
							"nameLocation": "6601:38:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6584:62:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1702,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6584:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786334",
								"id": 1703,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6642:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_196_by_1",
									"typeString": "int_const 196"
								},
								"value": "0xc4"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1707,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_ids_length_offset",
							"nameLocation": "6666:41:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6649:65:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1705,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6649:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786130",
								"id": 1706,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6710:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_160_by_1",
									"typeString": "int_const 160"
								},
								"value": "0xa0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1710,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_amounts_length_baseOffset",
							"nameLocation": "6733:49:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6716:73:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1708,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6716:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786330",
								"id": 1709,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6785:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_192_by_1",
									"typeString": "int_const 192"
								},
								"value": "0xc0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1713,
							"mutability": "constant",
							"name": "BatchTransfer1155Params_data_length_baseOffset",
							"nameLocation": "6808:46:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6791:70:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1711,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6791:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786530",
								"id": 1712,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6857:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_224_by_1",
									"typeString": "int_const 224"
								},
								"value": "0xe0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1716,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_usable_head_size",
							"nameLocation": "6881:41:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6864:65:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1714,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6864:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783830",
								"id": 1715,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6925:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_128_by_1",
									"typeString": "int_const 128"
								},
								"value": "0x80"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1719,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_from_offset",
							"nameLocation": "6949:36:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6932:60:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1717,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6932:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783230",
								"id": 1718,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "6988:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_32_by_1",
									"typeString": "int_const 32"
								},
								"value": "0x20"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1722,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_ids_head_offset",
							"nameLocation": "7011:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "6994:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1720,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "6994:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783630",
								"id": 1721,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7054:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_96_by_1",
									"typeString": "int_const 96"
								},
								"value": "0x60"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1725,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_amounts_head_offset",
							"nameLocation": "7077:44:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7060:68:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1723,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7060:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783830",
								"id": 1724,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7124:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_128_by_1",
									"typeString": "int_const 128"
								},
								"value": "0x80"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1728,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_ids_length_offset",
							"nameLocation": "7147:42:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7130:66:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1726,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7130:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786130",
								"id": 1727,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7192:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_160_by_1",
									"typeString": "int_const 160"
								},
								"value": "0xa0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1731,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
							"nameLocation": "7215:50:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7198:74:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1729,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7198:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786330",
								"id": 1730,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7268:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_192_by_1",
									"typeString": "int_const 192"
								},
								"value": "0xc0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1734,
							"mutability": "constant",
							"name": "ConduitBatch1155Transfer_calldata_baseSize",
							"nameLocation": "7291:42:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7274:66:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1732,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7274:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786330",
								"id": 1733,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7336:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_192_by_1",
									"typeString": "int_const 192"
								},
								"value": "0xc0"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1737,
							"mutability": "constant",
							"name": "ConduitBatchTransfer_amounts_head_offset",
							"nameLocation": "7439:40:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7422:64:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1735,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7422:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783830",
								"id": 1736,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7482:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_128_by_1",
									"typeString": "int_const 128"
								},
								"value": "0x80"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1740,
							"mutability": "constant",
							"name": "Invalid1155BatchTransferEncoding_ptr",
							"nameLocation": "7506:36:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7489:60:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1738,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7489:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783030",
								"id": 1739,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7545:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0x00"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1743,
							"mutability": "constant",
							"name": "Invalid1155BatchTransferEncoding_length",
							"nameLocation": "7568:39:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7551:63:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1741,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7551:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783034",
								"id": 1742,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7610:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x04"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1747,
							"mutability": "constant",
							"name": "Invalid1155BatchTransferEncoding_selector",
							"nameLocation": "7633:41:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7616:135:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1744,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7616:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307865626132303834633030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1745,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7683:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
											"typeString": "int_const 1065...(70 digits omitted)...2656"
										},
										"value": "0xeba2084c00000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1746,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "7677:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
									"typeString": "int_const 1065...(70 digits omitted)...2656"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1751,
							"mutability": "constant",
							"name": "ERC1155BatchTransferGenericFailure_error_signature",
							"nameLocation": "7771:50:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7754:144:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1748,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7754:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"components": [
									{
										"hexValue": "307861666334343565323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 1749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7830:66:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
											"typeString": "int_const 7950...(69 digits omitted)...5136"
										},
										"value": "0xafc445e200000000000000000000000000000000000000000000000000000000"
									}
								],
								"id": 1750,
								"isConstant": false,
								"isInlineArray": false,
								"isLValue": false,
								"isPure": true,
								"lValueRequested": false,
								"nodeType": "TupleExpression",
								"src": "7824:74:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
									"typeString": "int_const 7950...(69 digits omitted)...5136"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1754,
							"mutability": "constant",
							"name": "ERC1155BatchTransferGenericFailure_token_ptr",
							"nameLocation": "7917:44:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7900:68:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1752,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7900:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30783034",
								"id": 1753,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "7964:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_4_by_1",
									"typeString": "int_const 4"
								},
								"value": "0x04"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1757,
							"mutability": "constant",
							"name": "ERC1155BatchTransferGenericFailure_ids_offset",
							"nameLocation": "7987:45:9",
							"nodeType": "VariableDeclaration",
							"scope": 1758,
							"src": "7970:69:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1755,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "7970:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30786330",
								"id": 1756,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "8035:4:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_192_by_1",
									"typeString": "int_const 192"
								},
								"value": "0xc0"
							},
							"visibility": "internal"
						}
					],
					"src": "32:8009:9"
				},
				"id": 9
			}
		}
	}
}